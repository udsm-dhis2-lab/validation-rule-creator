{"ast":null,"code":"import _JSXStyle from \"styled-jsx/style\";\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport { sharedPropTypes } from '@dhis2/ui-constants';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { StatusIcon } from '../Icons/index.js';\nimport { styles } from './TextArea.styles.js';\n''; // TODO: https://github.com/jsdoc/jsdoc/issues/1718\n\n/**\n * @module\n * @param {TextArea.PropTypes} props\n * @returns {React.Component}\n *\n * @example import { TextArea } from '@dhis2/ui-core'\n */\n\nexport class TextArea extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"textareaRef\", /*#__PURE__*/React.createRef());\n\n    _defineProperty(this, \"state\", {\n      height: 'auto'\n    });\n\n    _defineProperty(this, \"textareaDimensions\", {\n      width: 0,\n      height: 0\n    });\n\n    _defineProperty(this, \"userHasResized\", false);\n\n    _defineProperty(this, \"setTextareaDimensions\", () => {\n      const textarea = this.textareaRef.current;\n      this.textareaDimensions = {\n        width: textarea.clientWidth,\n        height: textarea.clientHeight\n      };\n    });\n\n    _defineProperty(this, \"hasUserResized\", () => {\n      const {\n        width: oldWidth,\n        height: oldHeight\n      } = this.textareaDimensions;\n      this.setTextareaDimensions();\n      const {\n        width: newWidth,\n        height: newHeight\n      } = this.textareaDimensions;\n      const userHasResized = newWidth !== oldWidth || newHeight !== oldHeight;\n\n      if (userHasResized) {\n        this.userHasResized = true;\n        this.removeResizeListener();\n      }\n    });\n\n    _defineProperty(this, \"handleChange\", e => {\n      if (this.props.onChange) {\n        this.props.onChange(this.createHandlerPayload(e), e);\n      }\n    });\n\n    _defineProperty(this, \"handleBlur\", e => {\n      if (this.props.onBlur) {\n        this.props.onBlur(this.createHandlerPayload(e), e);\n      }\n    });\n\n    _defineProperty(this, \"handleFocus\", e => {\n      if (this.props.onFocus) {\n        this.props.onFocus(this.createHandlerPayload(e), e);\n      }\n    });\n  }\n\n  componentDidMount() {\n    this.attachResizeListener();\n\n    if (this.props.initialFocus) {\n      this.textareaRef.current.focus();\n    }\n\n    if (this.shouldDoAutoGrow()) {\n      this.setHeight();\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.shouldDoAutoGrow() && this.props.value !== prevProps.value) {\n      this.setHeight();\n    }\n  }\n\n  attachResizeListener() {\n    const textarea = this.textareaRef.current;\n    textarea.addEventListener('mousedown', this.setTextareaDimensions);\n    textarea.addEventListener('mouseup', this.hasUserResized);\n  }\n\n  removeResizeListener() {\n    const textarea = this.textareaRef.current;\n    textarea.removeEventListener('mousedown', this.setTextareaDimensions);\n    textarea.removeEventListener('mouseup', this.hasUserResized);\n  }\n\n  setHeight() {\n    const textarea = this.textareaRef.current;\n    const offset = textarea.offsetHeight - textarea.clientHeight;\n    const height = textarea.scrollHeight + offset + 'px';\n    this.setState({\n      height\n    });\n  }\n\n  shouldDoAutoGrow() {\n    return this.props.autoGrow && !this.userHasResized;\n  }\n\n  createHandlerPayload(e) {\n    return {\n      value: e.target.value,\n      name: this.props.name\n    };\n  }\n\n  render() {\n    const {\n      className,\n      dense,\n      disabled,\n      readOnly,\n      placeholder,\n      name,\n      valid,\n      error,\n      warning,\n      loading,\n      value,\n      tabIndex,\n      rows,\n      width,\n      resize,\n      dataTest\n    } = this.props;\n    const {\n      height\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      \"data-test\": dataTest,\n      className: \"jsx-\".concat(styles.__hash) + \" \" + _JSXStyle.dynamic([[\"3036048772\", [width, height, resize]]]) + \" \" + (cx('textarea', className) || \"\")\n    }, /*#__PURE__*/React.createElement(\"textarea\", {\n      id: name,\n      name: name,\n      placeholder: placeholder,\n      ref: this.textareaRef,\n      value: value,\n      disabled: disabled,\n      readOnly: readOnly,\n      tabIndex: tabIndex,\n      onFocus: this.handleFocus,\n      onBlur: this.handleBlur,\n      onChange: this.handleChange,\n      rows: rows,\n      className: \"jsx-\".concat(styles.__hash) + \" \" + _JSXStyle.dynamic([[\"3036048772\", [width, height, resize]]]) + \" \" + (cx({\n        dense,\n        disabled,\n        error,\n        valid,\n        warning,\n        'read-only': readOnly\n      }) || \"\")\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"jsx-\".concat(styles.__hash) + \" \" + _JSXStyle.dynamic([[\"3036048772\", [width, height, resize]]]) + \" \" + \"status-icon\"\n    }, /*#__PURE__*/React.createElement(StatusIcon, {\n      error: error,\n      valid: valid,\n      loading: loading,\n      warning: warning\n    })), /*#__PURE__*/React.createElement(_JSXStyle, {\n      id: styles.__hash\n    }, styles), /*#__PURE__*/React.createElement(_JSXStyle, {\n      id: \"3036048772\",\n      dynamic: [width, height, resize]\n    }, [\"textarea.__jsx-style-dynamic-selector{width:\".concat(width, \";height:\").concat(height, \";resize:\").concat(resize, \";}\")]));\n  }\n\n}\nTextArea.defaultProps = {\n  rows: 4,\n  width: '100%',\n  resize: 'vertical',\n  dataTest: 'dhis2-uicore-textarea'\n};\n/**\n * @typedef {Object} PropTypes\n * @static\n *\n * @prop {string} name\n * @prop {function} [onChange] - called with the signature `object, event`\n * @prop {function} [onBlur]\n * @prop {function} [onFocus]\n * @prop {string} [className]\n * @prop {string} [placeholder]\n * @prop {string} [value]\n * @prop {string} [tabIndex]\n *\n * @prop {boolean} [disabled]\n * @prop {boolean} [dense] - Compact mode\n * @prop {boolean} [initialFocus]\n *\n * @prop {boolean} [valid] - `valid`, `warning`, `error`, and `loading`\n * are mutually exclusive\n * @prop {boolean} [warning]\n * @prop {boolean} [error]\n * @prop {boolean} [loading]\n *\n * @prop {boolean} [autoGrow]\n * @prop {boolean} [readOnly]\n * @prop {string} [resize=vertical] - resize attribute on the textarea,\n * one of `none`, `both`, `horizontal`, `vertical`\n * @prop {number} [rows=4]\n * @prop {string} [width]\n * @prop {string} [dataTest]\n */\n\nTextArea.propTypes = {\n  /** Grow the text area in response to overflow instead of adding a scroll bar */\n  autoGrow: PropTypes.bool,\n  className: PropTypes.string,\n  dataTest: PropTypes.string,\n\n  /** Compact mode */\n  dense: PropTypes.bool,\n\n  /** Disables the textarea and makes in non-interactive */\n  disabled: PropTypes.bool,\n\n  /** Applies 'error' styles for validation feedback. Mutually exclusive with `valid` and `warning` props */\n  error: sharedPropTypes.statusPropType,\n\n  /** Grabs initial focus on the page */\n  initialFocus: PropTypes.bool,\n\n  /** Adds a loading spinner */\n  loading: PropTypes.bool,\n\n  /** Name associated with the text area. Passed in object argument to event handlers. */\n  name: PropTypes.string,\n\n  /** Placeholder text for an empty textarea */\n  placeholder: PropTypes.string,\n\n  /** Makes the textarea read-only */\n  readOnly: PropTypes.bool,\n\n  /** [Resize property](https://developer.mozilla.org/en-US/docs/Web/CSS/resize) for the textarea element */\n  resize: PropTypes.oneOf(['none', 'both', 'horizontal', 'vertical']),\n\n  /** Initial height of the textarea, in lines of text */\n  rows: PropTypes.number,\n  tabIndex: PropTypes.string,\n\n  /** Applies 'valid' styles for validation feedback. Mutually exclusive with `warning` and `error` props */\n  valid: sharedPropTypes.statusPropType,\n\n  /** Value in the textarea. Can be used to control component (recommended). Passed in object argument to event handlers. */\n  value: PropTypes.string,\n\n  /** Applies 'warning' styles for validation feedback. Mutually exclusive with `valid` and `error` props */\n  warning: sharedPropTypes.statusPropType,\n\n  /** Width of the text area. Can be any valid CSS measurement */\n  width: PropTypes.string,\n\n  /** Called with signature ({ name: string, value: string }, event) */\n  onBlur: PropTypes.func,\n\n  /** Called with signature ({ name: string, value: string }, event) */\n  onChange: PropTypes.func,\n\n  /** Called with signature ({ name: string, value: string }, event) */\n  onFocus: PropTypes.func\n};","map":{"version":3,"sources":["/Users/rajabu/.config/yarn/global/node_modules/@dhis2/ui/node_modules/@dhis2/ui-core/build/es/TextArea/TextArea.js"],"names":["_JSXStyle","_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","sharedPropTypes","cx","PropTypes","React","Component","StatusIcon","styles","TextArea","constructor","args","createRef","height","width","textarea","textareaRef","current","textareaDimensions","clientWidth","clientHeight","oldWidth","oldHeight","setTextareaDimensions","newWidth","newHeight","userHasResized","removeResizeListener","e","props","onChange","createHandlerPayload","onBlur","onFocus","componentDidMount","attachResizeListener","initialFocus","focus","shouldDoAutoGrow","setHeight","componentDidUpdate","prevProps","addEventListener","hasUserResized","removeEventListener","offset","offsetHeight","scrollHeight","setState","autoGrow","target","name","render","className","dense","disabled","readOnly","placeholder","valid","error","warning","loading","tabIndex","rows","resize","dataTest","state","createElement","concat","__hash","dynamic","id","ref","handleFocus","handleBlur","handleChange","defaultProps","propTypes","bool","string","statusPropType","oneOf","number","func"],"mappings":"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","sourcesContent":["import _JSXStyle from \"styled-jsx/style\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { sharedPropTypes } from '@dhis2/ui-constants';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { StatusIcon } from '../Icons/index.js';\nimport { styles } from './TextArea.styles.js';\n''; // TODO: https://github.com/jsdoc/jsdoc/issues/1718\n\n/**\n * @module\n * @param {TextArea.PropTypes} props\n * @returns {React.Component}\n *\n * @example import { TextArea } from '@dhis2/ui-core'\n */\n\nexport class TextArea extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"textareaRef\", /*#__PURE__*/React.createRef());\n\n    _defineProperty(this, \"state\", {\n      height: 'auto'\n    });\n\n    _defineProperty(this, \"textareaDimensions\", {\n      width: 0,\n      height: 0\n    });\n\n    _defineProperty(this, \"userHasResized\", false);\n\n    _defineProperty(this, \"setTextareaDimensions\", () => {\n      const textarea = this.textareaRef.current;\n      this.textareaDimensions = {\n        width: textarea.clientWidth,\n        height: textarea.clientHeight\n      };\n    });\n\n    _defineProperty(this, \"hasUserResized\", () => {\n      const {\n        width: oldWidth,\n        height: oldHeight\n      } = this.textareaDimensions;\n      this.setTextareaDimensions();\n      const {\n        width: newWidth,\n        height: newHeight\n      } = this.textareaDimensions;\n      const userHasResized = newWidth !== oldWidth || newHeight !== oldHeight;\n\n      if (userHasResized) {\n        this.userHasResized = true;\n        this.removeResizeListener();\n      }\n    });\n\n    _defineProperty(this, \"handleChange\", e => {\n      if (this.props.onChange) {\n        this.props.onChange(this.createHandlerPayload(e), e);\n      }\n    });\n\n    _defineProperty(this, \"handleBlur\", e => {\n      if (this.props.onBlur) {\n        this.props.onBlur(this.createHandlerPayload(e), e);\n      }\n    });\n\n    _defineProperty(this, \"handleFocus\", e => {\n      if (this.props.onFocus) {\n        this.props.onFocus(this.createHandlerPayload(e), e);\n      }\n    });\n  }\n\n  componentDidMount() {\n    this.attachResizeListener();\n\n    if (this.props.initialFocus) {\n      this.textareaRef.current.focus();\n    }\n\n    if (this.shouldDoAutoGrow()) {\n      this.setHeight();\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.shouldDoAutoGrow() && this.props.value !== prevProps.value) {\n      this.setHeight();\n    }\n  }\n\n  attachResizeListener() {\n    const textarea = this.textareaRef.current;\n    textarea.addEventListener('mousedown', this.setTextareaDimensions);\n    textarea.addEventListener('mouseup', this.hasUserResized);\n  }\n\n  removeResizeListener() {\n    const textarea = this.textareaRef.current;\n    textarea.removeEventListener('mousedown', this.setTextareaDimensions);\n    textarea.removeEventListener('mouseup', this.hasUserResized);\n  }\n\n  setHeight() {\n    const textarea = this.textareaRef.current;\n    const offset = textarea.offsetHeight - textarea.clientHeight;\n    const height = textarea.scrollHeight + offset + 'px';\n    this.setState({\n      height\n    });\n  }\n\n  shouldDoAutoGrow() {\n    return this.props.autoGrow && !this.userHasResized;\n  }\n\n  createHandlerPayload(e) {\n    return {\n      value: e.target.value,\n      name: this.props.name\n    };\n  }\n\n  render() {\n    const {\n      className,\n      dense,\n      disabled,\n      readOnly,\n      placeholder,\n      name,\n      valid,\n      error,\n      warning,\n      loading,\n      value,\n      tabIndex,\n      rows,\n      width,\n      resize,\n      dataTest\n    } = this.props;\n    const {\n      height\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      \"data-test\": dataTest,\n      className: \"jsx-\".concat(styles.__hash) + \" \" + _JSXStyle.dynamic([[\"3036048772\", [width, height, resize]]]) + \" \" + (cx('textarea', className) || \"\")\n    }, /*#__PURE__*/React.createElement(\"textarea\", {\n      id: name,\n      name: name,\n      placeholder: placeholder,\n      ref: this.textareaRef,\n      value: value,\n      disabled: disabled,\n      readOnly: readOnly,\n      tabIndex: tabIndex,\n      onFocus: this.handleFocus,\n      onBlur: this.handleBlur,\n      onChange: this.handleChange,\n      rows: rows,\n      className: \"jsx-\".concat(styles.__hash) + \" \" + _JSXStyle.dynamic([[\"3036048772\", [width, height, resize]]]) + \" \" + (cx({\n        dense,\n        disabled,\n        error,\n        valid,\n        warning,\n        'read-only': readOnly\n      }) || \"\")\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"jsx-\".concat(styles.__hash) + \" \" + _JSXStyle.dynamic([[\"3036048772\", [width, height, resize]]]) + \" \" + \"status-icon\"\n    }, /*#__PURE__*/React.createElement(StatusIcon, {\n      error: error,\n      valid: valid,\n      loading: loading,\n      warning: warning\n    })), /*#__PURE__*/React.createElement(_JSXStyle, {\n      id: styles.__hash\n    }, styles), /*#__PURE__*/React.createElement(_JSXStyle, {\n      id: \"3036048772\",\n      dynamic: [width, height, resize]\n    }, [\"textarea.__jsx-style-dynamic-selector{width:\".concat(width, \";height:\").concat(height, \";resize:\").concat(resize, \";}\")]));\n  }\n\n}\nTextArea.defaultProps = {\n  rows: 4,\n  width: '100%',\n  resize: 'vertical',\n  dataTest: 'dhis2-uicore-textarea'\n};\n/**\n * @typedef {Object} PropTypes\n * @static\n *\n * @prop {string} name\n * @prop {function} [onChange] - called with the signature `object, event`\n * @prop {function} [onBlur]\n * @prop {function} [onFocus]\n * @prop {string} [className]\n * @prop {string} [placeholder]\n * @prop {string} [value]\n * @prop {string} [tabIndex]\n *\n * @prop {boolean} [disabled]\n * @prop {boolean} [dense] - Compact mode\n * @prop {boolean} [initialFocus]\n *\n * @prop {boolean} [valid] - `valid`, `warning`, `error`, and `loading`\n * are mutually exclusive\n * @prop {boolean} [warning]\n * @prop {boolean} [error]\n * @prop {boolean} [loading]\n *\n * @prop {boolean} [autoGrow]\n * @prop {boolean} [readOnly]\n * @prop {string} [resize=vertical] - resize attribute on the textarea,\n * one of `none`, `both`, `horizontal`, `vertical`\n * @prop {number} [rows=4]\n * @prop {string} [width]\n * @prop {string} [dataTest]\n */\n\nTextArea.propTypes = {\n  /** Grow the text area in response to overflow instead of adding a scroll bar */\n  autoGrow: PropTypes.bool,\n  className: PropTypes.string,\n  dataTest: PropTypes.string,\n\n  /** Compact mode */\n  dense: PropTypes.bool,\n\n  /** Disables the textarea and makes in non-interactive */\n  disabled: PropTypes.bool,\n\n  /** Applies 'error' styles for validation feedback. Mutually exclusive with `valid` and `warning` props */\n  error: sharedPropTypes.statusPropType,\n\n  /** Grabs initial focus on the page */\n  initialFocus: PropTypes.bool,\n\n  /** Adds a loading spinner */\n  loading: PropTypes.bool,\n\n  /** Name associated with the text area. Passed in object argument to event handlers. */\n  name: PropTypes.string,\n\n  /** Placeholder text for an empty textarea */\n  placeholder: PropTypes.string,\n\n  /** Makes the textarea read-only */\n  readOnly: PropTypes.bool,\n\n  /** [Resize property](https://developer.mozilla.org/en-US/docs/Web/CSS/resize) for the textarea element */\n  resize: PropTypes.oneOf(['none', 'both', 'horizontal', 'vertical']),\n\n  /** Initial height of the textarea, in lines of text */\n  rows: PropTypes.number,\n  tabIndex: PropTypes.string,\n\n  /** Applies 'valid' styles for validation feedback. Mutually exclusive with `warning` and `error` props */\n  valid: sharedPropTypes.statusPropType,\n\n  /** Value in the textarea. Can be used to control component (recommended). Passed in object argument to event handlers. */\n  value: PropTypes.string,\n\n  /** Applies 'warning' styles for validation feedback. Mutually exclusive with `valid` and `error` props */\n  warning: sharedPropTypes.statusPropType,\n\n  /** Width of the text area. Can be any valid CSS measurement */\n  width: PropTypes.string,\n\n  /** Called with signature ({ name: string, value: string }, event) */\n  onBlur: PropTypes.func,\n\n  /** Called with signature ({ name: string, value: string }, event) */\n  onChange: PropTypes.func,\n\n  /** Called with signature ({ name: string, value: string }, event) */\n  onFocus: PropTypes.func\n};"]},"metadata":{},"sourceType":"module"}