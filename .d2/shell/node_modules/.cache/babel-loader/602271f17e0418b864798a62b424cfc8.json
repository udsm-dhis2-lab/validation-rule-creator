{"ast":null,"code":"import { sharedPropTypes, spacers } from '@dhis2/ui-constants';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { Box } from '../Box/Box.js';\nimport { Help } from '../Help/Help.js';\nimport { Label } from '../Label/Label.js';\n/**\n * @module\n * @param {Field.PropTypes} props\n * @returns {React.Component}\n *\n * @example import { Field } from '@dhis2/ui'\n *\n * @example import { Field } from '@dhis2/ui-core'\n */\n\nconst Field = ({\n  children,\n  disabled,\n  className,\n  helpText,\n  label,\n  name,\n  validationText,\n  required,\n  dataTest,\n  valid,\n  error,\n  warning\n}) => /*#__PURE__*/React.createElement(Box, {\n  className: className,\n  dataTest: dataTest\n}, label && /*#__PURE__*/React.createElement(Label, {\n  dataTest: \"\".concat(dataTest, \"-label\"),\n  required: required,\n  disabled: disabled,\n  htmlFor: name\n}, label), /*#__PURE__*/React.createElement(Box, {\n  dataTest: \"\".concat(dataTest, \"-content\"),\n  marginTop: label ? spacers.dp4 : '0'\n}, children), helpText && /*#__PURE__*/React.createElement(Help, {\n  dataTest: \"\".concat(dataTest, \"-help\")\n}, helpText), validationText && /*#__PURE__*/React.createElement(Help, {\n  error: error,\n  warning: warning,\n  valid: valid,\n  dataTest: \"\".concat(dataTest, \"-validation\")\n}, validationText));\n\nField.defaultProps = {\n  dataTest: 'dhis2-uicore-field'\n};\n/**\n * @typedef {Object} PropTypes\n * @static\n * @private\n *\n * @prop {Node} [children]\n * @prop {string} [className]\n * @prop {boolean} [disabled]\n * @prop {string} [helpText]\n * @prop {string} [label]\n * @prop {string} [name]\n * @prop {string} [validationText]\n * @prop {boolean} [required]\n * @prop {string} [dataTest]\n * @prop {boolean} [valid] - `valid`, `warning`, and `error`, are mutually exclusive\n * @prop {boolean} [warning]\n * @prop {boolean} [error]\n */\n\nField.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  dataTest: PropTypes.string,\n\n  /** Disabled status, shown when mouse is over label */\n  disabled: PropTypes.bool,\n\n  /** Field status. Mutually exclusive with `valid` and `warning` props */\n  error: sharedPropTypes.statusPropType,\n\n  /** Useful text within the field */\n  helpText: PropTypes.string,\n\n  /** Label at the top of the field */\n  label: PropTypes.string,\n\n  /** `name` will become the target of the `for`/`htmlFor` attribute on the `<label>` element */\n  name: PropTypes.string,\n\n  /** Inidcates this field is required */\n  required: PropTypes.bool,\n\n  /** Field status. Mutually exclusive with `error` and `warning` props */\n  valid: sharedPropTypes.statusPropType,\n\n  /** Feedback given related to validation status of field */\n  validationText: PropTypes.string,\n\n  /** Field status. Mutually exclusive with `valid` and `error` props */\n  warning: sharedPropTypes.statusPropType\n};\nexport { Field };","map":{"version":3,"sources":["/Users/rajabu/.config/yarn/global/node_modules/@dhis2/ui/node_modules/@dhis2/ui-core/build/es/Field/Field.js"],"names":["sharedPropTypes","spacers","PropTypes","React","Box","Help","Label","Field","children","disabled","className","helpText","label","name","validationText","required","dataTest","valid","error","warning","createElement","concat","htmlFor","marginTop","dp4","defaultProps","propTypes","node","string","bool","statusPropType"],"mappings":"AAAA,SAASA,eAAT,EAA0BC,OAA1B,QAAyC,qBAAzC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,QAAoB,eAApB;AACA,SAASC,IAAT,QAAqB,iBAArB;AACA,SAASC,KAAT,QAAsB,mBAAtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,KAAK,GAAG,CAAC;AACbC,EAAAA,QADa;AAEbC,EAAAA,QAFa;AAGbC,EAAAA,SAHa;AAIbC,EAAAA,QAJa;AAKbC,EAAAA,KALa;AAMbC,EAAAA,IANa;AAObC,EAAAA,cAPa;AAQbC,EAAAA,QARa;AASbC,EAAAA,QATa;AAUbC,EAAAA,KAVa;AAWbC,EAAAA,KAXa;AAYbC,EAAAA;AAZa,CAAD,KAaR,aAAahB,KAAK,CAACiB,aAAN,CAAoBhB,GAApB,EAAyB;AAC1CM,EAAAA,SAAS,EAAEA,SAD+B;AAE1CM,EAAAA,QAAQ,EAAEA;AAFgC,CAAzB,EAGhBJ,KAAK,IAAI,aAAaT,KAAK,CAACiB,aAAN,CAAoBd,KAApB,EAA2B;AAClDU,EAAAA,QAAQ,EAAE,GAAGK,MAAH,CAAUL,QAAV,EAAoB,QAApB,CADwC;AAElDD,EAAAA,QAAQ,EAAEA,QAFwC;AAGlDN,EAAAA,QAAQ,EAAEA,QAHwC;AAIlDa,EAAAA,OAAO,EAAET;AAJyC,CAA3B,EAKtBD,KALsB,CAHN,EAQR,aAAaT,KAAK,CAACiB,aAAN,CAAoBhB,GAApB,EAAyB;AAC/CY,EAAAA,QAAQ,EAAE,GAAGK,MAAH,CAAUL,QAAV,EAAoB,UAApB,CADqC;AAE/CO,EAAAA,SAAS,EAAEX,KAAK,GAAGX,OAAO,CAACuB,GAAX,GAAiB;AAFc,CAAzB,EAGrBhB,QAHqB,CARL,EAWLG,QAAQ,IAAI,aAAaR,KAAK,CAACiB,aAAN,CAAoBf,IAApB,EAA0B;AAC/DW,EAAAA,QAAQ,EAAE,GAAGK,MAAH,CAAUL,QAAV,EAAoB,OAApB;AADqD,CAA1B,EAEpCL,QAFoC,CAXpB,EAaLG,cAAc,IAAI,aAAaX,KAAK,CAACiB,aAAN,CAAoBf,IAApB,EAA0B;AACrEa,EAAAA,KAAK,EAAEA,KAD8D;AAErEC,EAAAA,OAAO,EAAEA,OAF4D;AAGrEF,EAAAA,KAAK,EAAEA,KAH8D;AAIrED,EAAAA,QAAQ,EAAE,GAAGK,MAAH,CAAUL,QAAV,EAAoB,aAApB;AAJ2D,CAA1B,EAK1CF,cAL0C,CAb1B,CAbnB;;AAiCAP,KAAK,CAACkB,YAAN,GAAqB;AACnBT,EAAAA,QAAQ,EAAE;AADS,CAArB;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAT,KAAK,CAACmB,SAAN,GAAkB;AAChBlB,EAAAA,QAAQ,EAAEN,SAAS,CAACyB,IADJ;AAEhBjB,EAAAA,SAAS,EAAER,SAAS,CAAC0B,MAFL;AAGhBZ,EAAAA,QAAQ,EAAEd,SAAS,CAAC0B,MAHJ;;AAKhB;AACAnB,EAAAA,QAAQ,EAAEP,SAAS,CAAC2B,IANJ;;AAQhB;AACAX,EAAAA,KAAK,EAAElB,eAAe,CAAC8B,cATP;;AAWhB;AACAnB,EAAAA,QAAQ,EAAET,SAAS,CAAC0B,MAZJ;;AAchB;AACAhB,EAAAA,KAAK,EAAEV,SAAS,CAAC0B,MAfD;;AAiBhB;AACAf,EAAAA,IAAI,EAAEX,SAAS,CAAC0B,MAlBA;;AAoBhB;AACAb,EAAAA,QAAQ,EAAEb,SAAS,CAAC2B,IArBJ;;AAuBhB;AACAZ,EAAAA,KAAK,EAAEjB,eAAe,CAAC8B,cAxBP;;AA0BhB;AACAhB,EAAAA,cAAc,EAAEZ,SAAS,CAAC0B,MA3BV;;AA6BhB;AACAT,EAAAA,OAAO,EAAEnB,eAAe,CAAC8B;AA9BT,CAAlB;AAgCA,SAASvB,KAAT","sourcesContent":["import { sharedPropTypes, spacers } from '@dhis2/ui-constants';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { Box } from '../Box/Box.js';\nimport { Help } from '../Help/Help.js';\nimport { Label } from '../Label/Label.js';\n/**\n * @module\n * @param {Field.PropTypes} props\n * @returns {React.Component}\n *\n * @example import { Field } from '@dhis2/ui'\n *\n * @example import { Field } from '@dhis2/ui-core'\n */\n\nconst Field = ({\n  children,\n  disabled,\n  className,\n  helpText,\n  label,\n  name,\n  validationText,\n  required,\n  dataTest,\n  valid,\n  error,\n  warning\n}) => /*#__PURE__*/React.createElement(Box, {\n  className: className,\n  dataTest: dataTest\n}, label && /*#__PURE__*/React.createElement(Label, {\n  dataTest: \"\".concat(dataTest, \"-label\"),\n  required: required,\n  disabled: disabled,\n  htmlFor: name\n}, label), /*#__PURE__*/React.createElement(Box, {\n  dataTest: \"\".concat(dataTest, \"-content\"),\n  marginTop: label ? spacers.dp4 : '0'\n}, children), helpText && /*#__PURE__*/React.createElement(Help, {\n  dataTest: \"\".concat(dataTest, \"-help\")\n}, helpText), validationText && /*#__PURE__*/React.createElement(Help, {\n  error: error,\n  warning: warning,\n  valid: valid,\n  dataTest: \"\".concat(dataTest, \"-validation\")\n}, validationText));\n\nField.defaultProps = {\n  dataTest: 'dhis2-uicore-field'\n};\n/**\n * @typedef {Object} PropTypes\n * @static\n * @private\n *\n * @prop {Node} [children]\n * @prop {string} [className]\n * @prop {boolean} [disabled]\n * @prop {string} [helpText]\n * @prop {string} [label]\n * @prop {string} [name]\n * @prop {string} [validationText]\n * @prop {boolean} [required]\n * @prop {string} [dataTest]\n * @prop {boolean} [valid] - `valid`, `warning`, and `error`, are mutually exclusive\n * @prop {boolean} [warning]\n * @prop {boolean} [error]\n */\n\nField.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  dataTest: PropTypes.string,\n\n  /** Disabled status, shown when mouse is over label */\n  disabled: PropTypes.bool,\n\n  /** Field status. Mutually exclusive with `valid` and `warning` props */\n  error: sharedPropTypes.statusPropType,\n\n  /** Useful text within the field */\n  helpText: PropTypes.string,\n\n  /** Label at the top of the field */\n  label: PropTypes.string,\n\n  /** `name` will become the target of the `for`/`htmlFor` attribute on the `<label>` element */\n  name: PropTypes.string,\n\n  /** Inidcates this field is required */\n  required: PropTypes.bool,\n\n  /** Field status. Mutually exclusive with `error` and `warning` props */\n  valid: sharedPropTypes.statusPropType,\n\n  /** Feedback given related to validation status of field */\n  validationText: PropTypes.string,\n\n  /** Field status. Mutually exclusive with `valid` and `error` props */\n  warning: sharedPropTypes.statusPropType\n};\nexport { Field };"]},"metadata":{},"sourceType":"module"}