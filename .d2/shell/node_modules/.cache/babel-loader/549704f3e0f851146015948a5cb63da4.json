{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport { InputField } from '@dhis2/ui-widgets';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { createChangeHandler, createFocusHandler, createBlurHandler, hasError, isLoading, isValid, getValidationText } from '../shared/helpers.js';\nimport { metaPropType, inputPropType } from '../shared/propTypes.js';\nexport const InputFieldFF = ({\n  input,\n  meta,\n  error,\n  showValidStatus,\n  valid,\n  validationText,\n  onBlur,\n  onFocus,\n  loading,\n  showLoadingStatus,\n  ...rest\n}) => /*#__PURE__*/React.createElement(InputField, _extends({}, rest, {\n  name: input.name,\n  type: input.type,\n  error: hasError(meta, error),\n  valid: isValid(meta, valid, showValidStatus),\n  loading: isLoading(meta, loading, showLoadingStatus),\n  validationText: getValidationText(meta, validationText, error),\n  onFocus: createFocusHandler(input, onFocus),\n  onChange: createChangeHandler(input),\n  onBlur: createBlurHandler(input, onBlur),\n  value: input.value\n}));\nInputFieldFF.propTypes = {\n  /** `input` props received from Final Form `Field` */\n  input: inputPropType.isRequired,\n\n  /** `meta` props received from Final Form `Field` */\n  meta: metaPropType.isRequired,\n  error: PropTypes.bool,\n  loading: PropTypes.bool,\n  showLoadingStatus: PropTypes.bool,\n  showValidStatus: PropTypes.bool,\n  valid: PropTypes.bool,\n  validationText: PropTypes.string,\n  onBlur: PropTypes.func,\n  onFocus: PropTypes.func\n};","map":{"version":3,"sources":["/Users/rajabu/.config/yarn/global/node_modules/@dhis2/ui/node_modules/@dhis2/ui-forms/build/es/InputFieldFF/InputFieldFF.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","InputField","PropTypes","React","createChangeHandler","createFocusHandler","createBlurHandler","hasError","isLoading","isValid","getValidationText","metaPropType","inputPropType","InputFieldFF","input","meta","error","showValidStatus","valid","validationText","onBlur","onFocus","loading","showLoadingStatus","rest","createElement","name","type","onChange","value","propTypes","isRequired","bool","string","func"],"mappings":"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","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport { InputField } from '@dhis2/ui-widgets';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { createChangeHandler, createFocusHandler, createBlurHandler, hasError, isLoading, isValid, getValidationText } from '../shared/helpers.js';\nimport { metaPropType, inputPropType } from '../shared/propTypes.js';\nexport const InputFieldFF = ({\n  input,\n  meta,\n  error,\n  showValidStatus,\n  valid,\n  validationText,\n  onBlur,\n  onFocus,\n  loading,\n  showLoadingStatus,\n  ...rest\n}) => /*#__PURE__*/React.createElement(InputField, _extends({}, rest, {\n  name: input.name,\n  type: input.type,\n  error: hasError(meta, error),\n  valid: isValid(meta, valid, showValidStatus),\n  loading: isLoading(meta, loading, showLoadingStatus),\n  validationText: getValidationText(meta, validationText, error),\n  onFocus: createFocusHandler(input, onFocus),\n  onChange: createChangeHandler(input),\n  onBlur: createBlurHandler(input, onBlur),\n  value: input.value\n}));\nInputFieldFF.propTypes = {\n  /** `input` props received from Final Form `Field` */\n  input: inputPropType.isRequired,\n\n  /** `meta` props received from Final Form `Field` */\n  meta: metaPropType.isRequired,\n  error: PropTypes.bool,\n  loading: PropTypes.bool,\n  showLoadingStatus: PropTypes.bool,\n  showValidStatus: PropTypes.bool,\n  valid: PropTypes.bool,\n  validationText: PropTypes.string,\n  onBlur: PropTypes.func,\n  onFocus: PropTypes.func\n};"]},"metadata":{},"sourceType":"module"}