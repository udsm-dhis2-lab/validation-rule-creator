{"ast":null,"code":"import _JSXStyle from \"styled-jsx/style\";\nimport propTypes from '@dhis2/prop-types';\nimport { colors } from '@dhis2/ui-constants';\nimport React from 'react';\n/**\n * @module\n * @param {StackedTableCellHead.PropTypes}\n * @returns {React.Component}\n * @example import { StackedTableCellHead } from @dhis2/ui-core\n * @see Live demo: {@link /demo/?path=/story/stackedtable--default|Storybook}\n */\n\nexport const StackedTableCellHead = ({\n  children,\n  className,\n  colSpan,\n  dataTest,\n  rowSpan\n}) => /*#__PURE__*/React.createElement(\"th\", {\n  colSpan: colSpan,\n  rowSpan: rowSpan,\n  \"data-test\": dataTest,\n  className: _JSXStyle.dynamic([[\"178822310\", [colors.grey300]]]) + \" \" + (className || \"\")\n}, children && /*#__PURE__*/React.createElement(\"div\", {\n  className: _JSXStyle.dynamic([[\"178822310\", [colors.grey300]]])\n}, children), /*#__PURE__*/React.createElement(_JSXStyle, {\n  id: \"178822310\",\n  dynamic: [colors.grey300]\n}, [\"th.__jsx-style-dynamic-selector{border-bottom:1px solid \".concat(colors.grey300, \";padding:0 12px;}\"), \"div.__jsx-style-dynamic-selector{min-height:36px;}\"]));\n/**\n * @typedef {Object} PropTypes\n * @static\n * @prop {string} [children]\n * Can be left empty to hide titles for all columns\n * @prop {string} [className]\n * @prop {string} [colSpan]\n * @prop {string} [dataTest]\n * @prop {string} [rowSpan]\n */\n\nStackedTableCellHead.propTypes = {\n  children: propTypes.string,\n  className: propTypes.string,\n  colSpan: propTypes.string,\n  dataTest: propTypes.string,\n  rowSpan: propTypes.string\n};\nStackedTableCellHead.defaultProps = {\n  children: '',\n  dataTest: 'dhis2-uicore-stackedtablecellhead'\n};","map":{"version":3,"sources":["/Users/rajabu/.config/yarn/global/node_modules/@dhis2/ui/node_modules/@dhis2/ui-core/build/es/StackedTable/StackedTableCellHead.js"],"names":["_JSXStyle","propTypes","colors","React","StackedTableCellHead","children","className","colSpan","dataTest","rowSpan","createElement","dynamic","grey300","id","concat","string","defaultProps"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,kBAAtB;AACA,OAAOC,SAAP,MAAsB,mBAAtB;AACA,SAASC,MAAT,QAAuB,qBAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAMC,oBAAoB,GAAG,CAAC;AACnCC,EAAAA,QADmC;AAEnCC,EAAAA,SAFmC;AAGnCC,EAAAA,OAHmC;AAInCC,EAAAA,QAJmC;AAKnCC,EAAAA;AALmC,CAAD,KAM9B,aAAaN,KAAK,CAACO,aAAN,CAAoB,IAApB,EAA0B;AAC3CH,EAAAA,OAAO,EAAEA,OADkC;AAE3CE,EAAAA,OAAO,EAAEA,OAFkC;AAG3C,eAAaD,QAH8B;AAI3CF,EAAAA,SAAS,EAAEN,SAAS,CAACW,OAAV,CAAkB,CAAC,CAAC,WAAD,EAAc,CAACT,MAAM,CAACU,OAAR,CAAd,CAAD,CAAlB,IAAuD,GAAvD,IAA8DN,SAAS,IAAI,EAA3E;AAJgC,CAA1B,EAKhBD,QAAQ,IAAI,aAAaF,KAAK,CAACO,aAAN,CAAoB,KAApB,EAA2B;AACrDJ,EAAAA,SAAS,EAAEN,SAAS,CAACW,OAAV,CAAkB,CAAC,CAAC,WAAD,EAAc,CAACT,MAAM,CAACU,OAAR,CAAd,CAAD,CAAlB;AAD0C,CAA3B,EAEzBP,QAFyB,CALT,EAOL,aAAaF,KAAK,CAACO,aAAN,CAAoBV,SAApB,EAA+B;AACxDa,EAAAA,EAAE,EAAE,WADoD;AAExDF,EAAAA,OAAO,EAAE,CAACT,MAAM,CAACU,OAAR;AAF+C,CAA/B,EAGxB,CAAC,2DAA2DE,MAA3D,CAAkEZ,MAAM,CAACU,OAAzE,EAAkF,mBAAlF,CAAD,EAAyG,oDAAzG,CAHwB,CAPR,CANZ;AAiBP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAR,oBAAoB,CAACH,SAArB,GAAiC;AAC/BI,EAAAA,QAAQ,EAAEJ,SAAS,CAACc,MADW;AAE/BT,EAAAA,SAAS,EAAEL,SAAS,CAACc,MAFU;AAG/BR,EAAAA,OAAO,EAAEN,SAAS,CAACc,MAHY;AAI/BP,EAAAA,QAAQ,EAAEP,SAAS,CAACc,MAJW;AAK/BN,EAAAA,OAAO,EAAER,SAAS,CAACc;AALY,CAAjC;AAOAX,oBAAoB,CAACY,YAArB,GAAoC;AAClCX,EAAAA,QAAQ,EAAE,EADwB;AAElCG,EAAAA,QAAQ,EAAE;AAFwB,CAApC","sourcesContent":["import _JSXStyle from \"styled-jsx/style\";\nimport propTypes from '@dhis2/prop-types';\nimport { colors } from '@dhis2/ui-constants';\nimport React from 'react';\n/**\n * @module\n * @param {StackedTableCellHead.PropTypes}\n * @returns {React.Component}\n * @example import { StackedTableCellHead } from @dhis2/ui-core\n * @see Live demo: {@link /demo/?path=/story/stackedtable--default|Storybook}\n */\n\nexport const StackedTableCellHead = ({\n  children,\n  className,\n  colSpan,\n  dataTest,\n  rowSpan\n}) => /*#__PURE__*/React.createElement(\"th\", {\n  colSpan: colSpan,\n  rowSpan: rowSpan,\n  \"data-test\": dataTest,\n  className: _JSXStyle.dynamic([[\"178822310\", [colors.grey300]]]) + \" \" + (className || \"\")\n}, children && /*#__PURE__*/React.createElement(\"div\", {\n  className: _JSXStyle.dynamic([[\"178822310\", [colors.grey300]]])\n}, children), /*#__PURE__*/React.createElement(_JSXStyle, {\n  id: \"178822310\",\n  dynamic: [colors.grey300]\n}, [\"th.__jsx-style-dynamic-selector{border-bottom:1px solid \".concat(colors.grey300, \";padding:0 12px;}\"), \"div.__jsx-style-dynamic-selector{min-height:36px;}\"]));\n/**\n * @typedef {Object} PropTypes\n * @static\n * @prop {string} [children]\n * Can be left empty to hide titles for all columns\n * @prop {string} [className]\n * @prop {string} [colSpan]\n * @prop {string} [dataTest]\n * @prop {string} [rowSpan]\n */\n\nStackedTableCellHead.propTypes = {\n  children: propTypes.string,\n  className: propTypes.string,\n  colSpan: propTypes.string,\n  dataTest: propTypes.string,\n  rowSpan: propTypes.string\n};\nStackedTableCellHead.defaultProps = {\n  children: '',\n  dataTest: 'dhis2-uicore-stackedtablecellhead'\n};"]},"metadata":{},"sourceType":"module"}