{"ast":null,"code":"import { useEffect, useState } from 'react';\n/**\n * This will create a new reloadId everytime \"forceReload\" changes to true,\n * which can be used as the \"key\" prop on the org unit tree.\n * When that id changes, the whole tree rerenders\n * and therefore triggers all \"useDataQuery\"s to\n * run the query again\n *\n * @param {bool} forceReload\n * @returns {Int}\n */\n\nexport const useForceReload = forceReload => {\n  const [reloadId, setReloadId] = useState(0);\n  useEffect(() => {\n    forceReload === true && setReloadId(reloadId + 1);\n  }, [forceReload]);\n  return reloadId;\n};","map":{"version":3,"sources":["/Users/rajabu/.config/yarn/global/node_modules/@dhis2/ui/node_modules/@dhis2/ui-widgets/build/es/OrganisationUnitTree/useForceReload.js"],"names":["useEffect","useState","useForceReload","forceReload","reloadId","setReloadId"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAMC,cAAc,GAAGC,WAAW,IAAI;AAC3C,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BJ,QAAQ,CAAC,CAAD,CAAxC;AACAD,EAAAA,SAAS,CAAC,MAAM;AACdG,IAAAA,WAAW,KAAK,IAAhB,IAAwBE,WAAW,CAACD,QAAQ,GAAG,CAAZ,CAAnC;AACD,GAFQ,EAEN,CAACD,WAAD,CAFM,CAAT;AAGA,SAAOC,QAAP;AACD,CANM","sourcesContent":["import { useEffect, useState } from 'react';\n/**\n * This will create a new reloadId everytime \"forceReload\" changes to true,\n * which can be used as the \"key\" prop on the org unit tree.\n * When that id changes, the whole tree rerenders\n * and therefore triggers all \"useDataQuery\"s to\n * run the query again\n *\n * @param {bool} forceReload\n * @returns {Int}\n */\n\nexport const useForceReload = forceReload => {\n  const [reloadId, setReloadId] = useState(0);\n  useEffect(() => {\n    forceReload === true && setReloadId(reloadId + 1);\n  }, [forceReload]);\n  return reloadId;\n};"]},"metadata":{},"sourceType":"module"}