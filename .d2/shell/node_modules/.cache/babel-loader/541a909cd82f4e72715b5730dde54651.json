{"ast":null,"code":"export const parseServerVersion = versionString => {\n  const [mainVersion, tag] = (versionString === null || versionString === void 0 ? void 0 : versionString.split('-')) || [];\n  const [major, minor, patch] = (mainVersion === null || mainVersion === void 0 ? void 0 : mainVersion.split('.')) || [];\n  const parsedVersion = {\n    major: parseInt(major) || undefined,\n    // 2\n    minor: parseInt(minor) || undefined,\n    // 34\n    patch: parseInt(patch) || undefined,\n    // 1\n    tag // SNAPSHOT || undefined\n\n  };\n\n  if (!parsedVersion.major || !parsedVersion.minor || parsedVersion.major !== 2) {\n    console.warn('Improperly formatted DHIS2 systemInfo server version', versionString);\n  }\n\n  return parsedVersion;\n};","map":{"version":3,"sources":["/Users/rajabu/.config/yarn/global/node_modules/@dhis2/app-shell/node_modules/@dhis2/app-adapter/build/es/utils/parseServerVersion.js"],"names":["parseServerVersion","versionString","mainVersion","tag","split","major","minor","patch","parsedVersion","parseInt","undefined","console","warn"],"mappings":"AAAA,OAAO,MAAMA,kBAAkB,GAAGC,aAAa,IAAI;AACjD,QAAM,CAACC,WAAD,EAAcC,GAAd,IAAqB,CAACF,aAAa,KAAK,IAAlB,IAA0BA,aAAa,KAAK,KAAK,CAAjD,GAAqD,KAAK,CAA1D,GAA8DA,aAAa,CAACG,KAAd,CAAoB,GAApB,CAA/D,KAA4F,EAAvH;AACA,QAAM,CAACC,KAAD,EAAQC,KAAR,EAAeC,KAAf,IAAwB,CAACL,WAAW,KAAK,IAAhB,IAAwBA,WAAW,KAAK,KAAK,CAA7C,GAAiD,KAAK,CAAtD,GAA0DA,WAAW,CAACE,KAAZ,CAAkB,GAAlB,CAA3D,KAAsF,EAApH;AACA,QAAMI,aAAa,GAAG;AACpBH,IAAAA,KAAK,EAAEI,QAAQ,CAACJ,KAAD,CAAR,IAAmBK,SADN;AAEpB;AACAJ,IAAAA,KAAK,EAAEG,QAAQ,CAACH,KAAD,CAAR,IAAmBI,SAHN;AAIpB;AACAH,IAAAA,KAAK,EAAEE,QAAQ,CAACF,KAAD,CAAR,IAAmBG,SALN;AAMpB;AACAP,IAAAA,GAPoB,CAOhB;;AAPgB,GAAtB;;AAWA,MAAI,CAACK,aAAa,CAACH,KAAf,IAAwB,CAACG,aAAa,CAACF,KAAvC,IAAgDE,aAAa,CAACH,KAAd,KAAwB,CAA5E,EAA+E;AAC7EM,IAAAA,OAAO,CAACC,IAAR,CAAa,sDAAb,EAAqEX,aAArE;AACD;;AAED,SAAOO,aAAP;AACD,CAnBM","sourcesContent":["export const parseServerVersion = versionString => {\n  const [mainVersion, tag] = (versionString === null || versionString === void 0 ? void 0 : versionString.split('-')) || [];\n  const [major, minor, patch] = (mainVersion === null || mainVersion === void 0 ? void 0 : mainVersion.split('.')) || [];\n  const parsedVersion = {\n    major: parseInt(major) || undefined,\n    // 2\n    minor: parseInt(minor) || undefined,\n    // 34\n    patch: parseInt(patch) || undefined,\n    // 1\n    tag // SNAPSHOT || undefined\n\n  };\n\n  if (!parsedVersion.major || !parsedVersion.minor || parsedVersion.major !== 2) {\n    console.warn('Improperly formatted DHIS2 systemInfo server version', versionString);\n  }\n\n  return parsedVersion;\n};"]},"metadata":{},"sourceType":"module"}