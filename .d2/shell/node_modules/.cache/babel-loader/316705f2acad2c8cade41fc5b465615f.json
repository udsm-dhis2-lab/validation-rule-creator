{"ast":null,"code":"import i18n from '../locales/index.js';\nimport { isEmpty, isString } from './helpers/index.js';\nconst invalidPatternMessage = 'The first argument passed to createPattern was not a valid regex';\n\nconst createPattern = (pattern, message) => {\n  if (!(pattern instanceof RegExp)) {\n    throw new Error(invalidPatternMessage);\n  }\n\n  return value => isEmpty(value) || isString(value) && pattern.test(value) ? undefined : message || i18n.t('Please make sure the value of this input matches the pattern {{patternString}}.', {\n    patternString: pattern.toString()\n  });\n};\n\nexport { createPattern, invalidPatternMessage };","map":{"version":3,"sources":["/Users/rajabu/.config/yarn/global/node_modules/@dhis2/ui/node_modules/@dhis2/ui-forms/build/es/validators/createPattern.js"],"names":["i18n","isEmpty","isString","invalidPatternMessage","createPattern","pattern","message","RegExp","Error","value","test","undefined","t","patternString","toString"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,qBAAjB;AACA,SAASC,OAAT,EAAkBC,QAAlB,QAAkC,oBAAlC;AACA,MAAMC,qBAAqB,GAAG,kEAA9B;;AAEA,MAAMC,aAAa,GAAG,CAACC,OAAD,EAAUC,OAAV,KAAsB;AAC1C,MAAI,EAAED,OAAO,YAAYE,MAArB,CAAJ,EAAkC;AAChC,UAAM,IAAIC,KAAJ,CAAUL,qBAAV,CAAN;AACD;;AAED,SAAOM,KAAK,IAAIR,OAAO,CAACQ,KAAD,CAAP,IAAkBP,QAAQ,CAACO,KAAD,CAAR,IAAmBJ,OAAO,CAACK,IAAR,CAAaD,KAAb,CAArC,GAA2DE,SAA3D,GAAuEL,OAAO,IAAIN,IAAI,CAACY,CAAL,CAAO,iFAAP,EAA0F;AAC1LC,IAAAA,aAAa,EAAER,OAAO,CAACS,QAAR;AAD2K,GAA1F,CAAlG;AAGD,CARD;;AAUA,SAASV,aAAT,EAAwBD,qBAAxB","sourcesContent":["import i18n from '../locales/index.js';\nimport { isEmpty, isString } from './helpers/index.js';\nconst invalidPatternMessage = 'The first argument passed to createPattern was not a valid regex';\n\nconst createPattern = (pattern, message) => {\n  if (!(pattern instanceof RegExp)) {\n    throw new Error(invalidPatternMessage);\n  }\n\n  return value => isEmpty(value) || isString(value) && pattern.test(value) ? undefined : message || i18n.t('Please make sure the value of this input matches the pattern {{patternString}}.', {\n    patternString: pattern.toString()\n  });\n};\n\nexport { createPattern, invalidPatternMessage };"]},"metadata":{},"sourceType":"module"}