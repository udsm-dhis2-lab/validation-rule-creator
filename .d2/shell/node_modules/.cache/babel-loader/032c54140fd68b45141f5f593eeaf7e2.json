{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport { CheckboxField } from '@dhis2/ui-widgets';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { createToggleChangeHandler, createFocusHandler, createBlurHandler, hasError, isValid, getValidationText } from '../shared/helpers.js';\nimport { metaPropType, inputPropType } from '../shared/propTypes.js';\nexport const CheckboxFieldFF = ({\n  error,\n  input,\n  meta,\n  showValidStatus,\n  valid,\n  validationText,\n  onBlur,\n  onFocus,\n  ...rest\n}) => /*#__PURE__*/React.createElement(CheckboxField, _extends({}, rest, {\n  name: input.name,\n  checked: input.checked,\n  value: input.value,\n  error: hasError(meta, error),\n  valid: isValid(meta, valid, showValidStatus),\n  validationText: getValidationText(meta, validationText, error),\n  onFocus: createFocusHandler(input, onFocus),\n  onChange: createToggleChangeHandler(input),\n  onBlur: createBlurHandler(input, onBlur)\n}));\nCheckboxFieldFF.propTypes = {\n  /** Provided by Final Form `Field` */\n  input: inputPropType.isRequired,\n\n  /** Provided by Final Form `Field` */\n  meta: metaPropType.isRequired,\n  error: PropTypes.bool,\n  showValidStatus: PropTypes.bool,\n  valid: PropTypes.bool,\n  validationText: PropTypes.string,\n  onBlur: PropTypes.func,\n  onFocus: PropTypes.func\n};","map":{"version":3,"sources":["/Users/rajabu/.config/yarn/global/node_modules/@dhis2/ui/node_modules/@dhis2/ui-forms/build/es/CheckboxFieldFF/CheckboxFieldFF.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","CheckboxField","PropTypes","React","createToggleChangeHandler","createFocusHandler","createBlurHandler","hasError","isValid","getValidationText","metaPropType","inputPropType","CheckboxFieldFF","error","input","meta","showValidStatus","valid","validationText","onBlur","onFocus","rest","createElement","name","checked","value","onChange","propTypes","isRequired","bool","string","func"],"mappings":"AAAA,SAASA,QAAT,GAAoB;AAAEA,EAAAA,QAAQ,GAAGC,MAAM,CAACC,MAAP,IAAiB,UAAUC,MAAV,EAAkB;AAAE,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGC,SAAS,CAACC,MAA9B,EAAsCF,CAAC,EAAvC,EAA2C;AAAE,UAAIG,MAAM,GAAGF,SAAS,CAACD,CAAD,CAAtB;;AAA2B,WAAK,IAAII,GAAT,IAAgBD,MAAhB,EAAwB;AAAE,YAAIN,MAAM,CAACQ,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCJ,MAArC,EAA6CC,GAA7C,CAAJ,EAAuD;AAAEL,UAAAA,MAAM,CAACK,GAAD,CAAN,GAAcD,MAAM,CAACC,GAAD,CAApB;AAA4B;AAAE;AAAE;;AAAC,WAAOL,MAAP;AAAgB,GAA5P;;AAA8P,SAAOH,QAAQ,CAACY,KAAT,CAAe,IAAf,EAAqBP,SAArB,CAAP;AAAyC;;AAE7T,SAASQ,aAAT,QAA8B,mBAA9B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,yBAAT,EAAoCC,kBAApC,EAAwDC,iBAAxD,EAA2EC,QAA3E,EAAqFC,OAArF,EAA8FC,iBAA9F,QAAuH,sBAAvH;AACA,SAASC,YAAT,EAAuBC,aAAvB,QAA4C,wBAA5C;AACA,OAAO,MAAMC,eAAe,GAAG,CAAC;AAC9BC,EAAAA,KAD8B;AAE9BC,EAAAA,KAF8B;AAG9BC,EAAAA,IAH8B;AAI9BC,EAAAA,eAJ8B;AAK9BC,EAAAA,KAL8B;AAM9BC,EAAAA,cAN8B;AAO9BC,EAAAA,MAP8B;AAQ9BC,EAAAA,OAR8B;AAS9B,KAAGC;AAT2B,CAAD,KAUzB,aAAalB,KAAK,CAACmB,aAAN,CAAoBrB,aAApB,EAAmCb,QAAQ,CAAC,EAAD,EAAKiC,IAAL,EAAW;AACvEE,EAAAA,IAAI,EAAET,KAAK,CAACS,IAD2D;AAEvEC,EAAAA,OAAO,EAAEV,KAAK,CAACU,OAFwD;AAGvEC,EAAAA,KAAK,EAAEX,KAAK,CAACW,KAH0D;AAIvEZ,EAAAA,KAAK,EAAEN,QAAQ,CAACQ,IAAD,EAAOF,KAAP,CAJwD;AAKvEI,EAAAA,KAAK,EAAET,OAAO,CAACO,IAAD,EAAOE,KAAP,EAAcD,eAAd,CALyD;AAMvEE,EAAAA,cAAc,EAAET,iBAAiB,CAACM,IAAD,EAAOG,cAAP,EAAuBL,KAAvB,CANsC;AAOvEO,EAAAA,OAAO,EAAEf,kBAAkB,CAACS,KAAD,EAAQM,OAAR,CAP4C;AAQvEM,EAAAA,QAAQ,EAAEtB,yBAAyB,CAACU,KAAD,CARoC;AASvEK,EAAAA,MAAM,EAAEb,iBAAiB,CAACQ,KAAD,EAAQK,MAAR;AAT8C,CAAX,CAA3C,CAVZ;AAqBPP,eAAe,CAACe,SAAhB,GAA4B;AAC1B;AACAb,EAAAA,KAAK,EAAEH,aAAa,CAACiB,UAFK;;AAI1B;AACAb,EAAAA,IAAI,EAAEL,YAAY,CAACkB,UALO;AAM1Bf,EAAAA,KAAK,EAAEX,SAAS,CAAC2B,IANS;AAO1Bb,EAAAA,eAAe,EAAEd,SAAS,CAAC2B,IAPD;AAQ1BZ,EAAAA,KAAK,EAAEf,SAAS,CAAC2B,IARS;AAS1BX,EAAAA,cAAc,EAAEhB,SAAS,CAAC4B,MATA;AAU1BX,EAAAA,MAAM,EAAEjB,SAAS,CAAC6B,IAVQ;AAW1BX,EAAAA,OAAO,EAAElB,SAAS,CAAC6B;AAXO,CAA5B","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport { CheckboxField } from '@dhis2/ui-widgets';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { createToggleChangeHandler, createFocusHandler, createBlurHandler, hasError, isValid, getValidationText } from '../shared/helpers.js';\nimport { metaPropType, inputPropType } from '../shared/propTypes.js';\nexport const CheckboxFieldFF = ({\n  error,\n  input,\n  meta,\n  showValidStatus,\n  valid,\n  validationText,\n  onBlur,\n  onFocus,\n  ...rest\n}) => /*#__PURE__*/React.createElement(CheckboxField, _extends({}, rest, {\n  name: input.name,\n  checked: input.checked,\n  value: input.value,\n  error: hasError(meta, error),\n  valid: isValid(meta, valid, showValidStatus),\n  validationText: getValidationText(meta, validationText, error),\n  onFocus: createFocusHandler(input, onFocus),\n  onChange: createToggleChangeHandler(input),\n  onBlur: createBlurHandler(input, onBlur)\n}));\nCheckboxFieldFF.propTypes = {\n  /** Provided by Final Form `Field` */\n  input: inputPropType.isRequired,\n\n  /** Provided by Final Form `Field` */\n  meta: metaPropType.isRequired,\n  error: PropTypes.bool,\n  showValidStatus: PropTypes.bool,\n  valid: PropTypes.bool,\n  validationText: PropTypes.string,\n  onBlur: PropTypes.func,\n  onFocus: PropTypes.func\n};"]},"metadata":{},"sourceType":"module"}