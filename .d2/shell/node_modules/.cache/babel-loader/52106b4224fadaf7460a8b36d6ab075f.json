{"ast":null,"code":"import { useCallback } from 'react';\nimport { useDataEngine } from './useDataEngine';\nimport { useQueryExecutor } from './useQueryExecutor';\nimport { useStaticInput } from './useStaticInput';\nconst empty = {};\nexport const useDataMutation = (mutation, {\n  onComplete,\n  onError,\n  variables = empty,\n  lazy = true\n} = {}) => {\n  const engine = useDataEngine();\n  const [theMutation] = useStaticInput(mutation, {\n    warn: true,\n    name: 'mutation'\n  });\n  const execute = useCallback(options => engine.mutate(theMutation, options), [engine, theMutation]);\n  const {\n    refetch: mutate,\n    called,\n    loading,\n    error,\n    data\n  } = useQueryExecutor({\n    execute,\n    variables,\n    singular: false,\n    immediate: !lazy,\n    onComplete,\n    onError\n  });\n  return [mutate, {\n    engine,\n    called,\n    loading,\n    error,\n    data\n  }];\n};","map":{"version":3,"sources":["/Users/rajabu/.config/yarn/global/node_modules/@dhis2/app-service-data/build/es/react/hooks/useDataMutation.js"],"names":["useCallback","useDataEngine","useQueryExecutor","useStaticInput","empty","useDataMutation","mutation","onComplete","onError","variables","lazy","engine","theMutation","warn","name","execute","options","mutate","refetch","called","loading","error","data","singular","immediate"],"mappings":"AAAA,SAASA,WAAT,QAA4B,OAA5B;AACA,SAASC,aAAT,QAA8B,iBAA9B;AACA,SAASC,gBAAT,QAAiC,oBAAjC;AACA,SAASC,cAAT,QAA+B,kBAA/B;AACA,MAAMC,KAAK,GAAG,EAAd;AACA,OAAO,MAAMC,eAAe,GAAG,CAACC,QAAD,EAAW;AACxCC,EAAAA,UADwC;AAExCC,EAAAA,OAFwC;AAGxCC,EAAAA,SAAS,GAAGL,KAH4B;AAIxCM,EAAAA,IAAI,GAAG;AAJiC,IAKtC,EAL2B,KAKpB;AACT,QAAMC,MAAM,GAAGV,aAAa,EAA5B;AACA,QAAM,CAACW,WAAD,IAAgBT,cAAc,CAACG,QAAD,EAAW;AAC7CO,IAAAA,IAAI,EAAE,IADuC;AAE7CC,IAAAA,IAAI,EAAE;AAFuC,GAAX,CAApC;AAIA,QAAMC,OAAO,GAAGf,WAAW,CAACgB,OAAO,IAAIL,MAAM,CAACM,MAAP,CAAcL,WAAd,EAA2BI,OAA3B,CAAZ,EAAiD,CAACL,MAAD,EAASC,WAAT,CAAjD,CAA3B;AACA,QAAM;AACJM,IAAAA,OAAO,EAAED,MADL;AAEJE,IAAAA,MAFI;AAGJC,IAAAA,OAHI;AAIJC,IAAAA,KAJI;AAKJC,IAAAA;AALI,MAMFpB,gBAAgB,CAAC;AACnBa,IAAAA,OADmB;AAEnBN,IAAAA,SAFmB;AAGnBc,IAAAA,QAAQ,EAAE,KAHS;AAInBC,IAAAA,SAAS,EAAE,CAACd,IAJO;AAKnBH,IAAAA,UALmB;AAMnBC,IAAAA;AANmB,GAAD,CANpB;AAcA,SAAO,CAACS,MAAD,EAAS;AACdN,IAAAA,MADc;AAEdQ,IAAAA,MAFc;AAGdC,IAAAA,OAHc;AAIdC,IAAAA,KAJc;AAKdC,IAAAA;AALc,GAAT,CAAP;AAOD,CAjCM","sourcesContent":["import { useCallback } from 'react';\nimport { useDataEngine } from './useDataEngine';\nimport { useQueryExecutor } from './useQueryExecutor';\nimport { useStaticInput } from './useStaticInput';\nconst empty = {};\nexport const useDataMutation = (mutation, {\n  onComplete,\n  onError,\n  variables = empty,\n  lazy = true\n} = {}) => {\n  const engine = useDataEngine();\n  const [theMutation] = useStaticInput(mutation, {\n    warn: true,\n    name: 'mutation'\n  });\n  const execute = useCallback(options => engine.mutate(theMutation, options), [engine, theMutation]);\n  const {\n    refetch: mutate,\n    called,\n    loading,\n    error,\n    data\n  } = useQueryExecutor({\n    execute,\n    variables,\n    singular: false,\n    immediate: !lazy,\n    onComplete,\n    onError\n  });\n  return [mutate, {\n    engine,\n    called,\n    loading,\n    error,\n    data\n  }];\n};"]},"metadata":{},"sourceType":"module"}