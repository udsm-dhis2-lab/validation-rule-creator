{"ast":null,"code":"import _JSXStyle from \"styled-jsx/style\";\nimport propTypes from '@dhis2/prop-types';\nimport { colors, spacers } from '@dhis2/ui-constants';\nimport cx from 'classnames';\nimport React from 'react';\nimport { Checkbox } from '../Checkbox/Checkbox.js'; // Padding has to be set on the label, so that the entire area is clickable\n\nconst {\n  styles,\n  className: checkboxClassname\n} = {\n  styles: /*#__PURE__*/React.createElement(_JSXStyle, {\n    id: \"2013783366\"\n  }, [\".jsx-2013783366{padding:\".concat(spacers.dp8, \" \").concat(spacers.dp12, \";}\")]),\n  className: \"jsx-2013783366\"\n};\n/**\n * @module\n *\n * @param {MultiSelectOption.PropTypes} props\n * @returns {React.Component}\n *\n * @example import { MultiSelectOption } from '@dhis2/ui-core'\n *\n */\n\nconst MultiSelectOption = ({\n  label,\n  active,\n  disabled,\n  onClick,\n  className,\n  dataTest,\n  value\n}) => /*#__PURE__*/React.createElement(\"div\", {\n  \"data-test\": dataTest,\n  \"data-value\": value,\n  \"data-label\": label,\n  className: _JSXStyle.dynamic([[\"3813980210\", [colors.grey200]]]) + \" \" + (cx(className, {\n    disabled\n  }) || \"\")\n}, /*#__PURE__*/React.createElement(Checkbox, {\n  name: label,\n  className: checkboxClassname,\n  checked: active,\n  label: label,\n  onChange: onClick,\n  disabled: disabled,\n  dense: true\n}), styles, /*#__PURE__*/React.createElement(_JSXStyle, {\n  id: \"3813980210\",\n  dynamic: [colors.grey200]\n}, [\"div.__jsx-style-dynamic-selector:hover{background-color:\".concat(colors.grey200, \";}\"), \"div.disabled.__jsx-style-dynamic-selector:hover{background-color:initial;}\"]));\n\nMultiSelectOption.defaultProps = {\n  dataTest: 'dhis2-uicore-multiselectoption'\n};\n/**\n * @typedef {Object} PropTypes\n * @static\n *\n * @prop {string} value\n * @prop {string} label\n * @prop {function} [onChange]\n * @prop {string} [className]\n * @prop {function} [onClick]\n * @prop {boolean} [active]\n * @prop {boolean} [disabled]\n * @prop {string} [dataTest]\n */\n\nMultiSelectOption.propTypes = {\n  label: propTypes.string.isRequired,\n  value: propTypes.string.isRequired,\n  active: propTypes.bool,\n  className: propTypes.string,\n  dataTest: propTypes.string,\n  disabled: propTypes.bool,\n  onClick: propTypes.func\n};\nexport { MultiSelectOption };","map":{"version":3,"sources":["/Users/rajabu/.config/yarn/global/node_modules/@dhis2/ui/node_modules/@dhis2/ui-core/build/es/MultiSelectOption/MultiSelectOption.js"],"names":["_JSXStyle","propTypes","colors","spacers","cx","React","Checkbox","styles","className","checkboxClassname","createElement","id","concat","dp8","dp12","MultiSelectOption","label","active","disabled","onClick","dataTest","value","dynamic","grey200","name","checked","onChange","dense","defaultProps","string","isRequired","bool","func"],"mappings":"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","sourcesContent":["import _JSXStyle from \"styled-jsx/style\";\nimport propTypes from '@dhis2/prop-types';\nimport { colors, spacers } from '@dhis2/ui-constants';\nimport cx from 'classnames';\nimport React from 'react';\nimport { Checkbox } from '../Checkbox/Checkbox.js'; // Padding has to be set on the label, so that the entire area is clickable\n\nconst {\n  styles,\n  className: checkboxClassname\n} = {\n  styles: /*#__PURE__*/React.createElement(_JSXStyle, {\n    id: \"2013783366\"\n  }, [\".jsx-2013783366{padding:\".concat(spacers.dp8, \" \").concat(spacers.dp12, \";}\")]),\n  className: \"jsx-2013783366\"\n};\n/**\n * @module\n *\n * @param {MultiSelectOption.PropTypes} props\n * @returns {React.Component}\n *\n * @example import { MultiSelectOption } from '@dhis2/ui-core'\n *\n */\n\nconst MultiSelectOption = ({\n  label,\n  active,\n  disabled,\n  onClick,\n  className,\n  dataTest,\n  value\n}) => /*#__PURE__*/React.createElement(\"div\", {\n  \"data-test\": dataTest,\n  \"data-value\": value,\n  \"data-label\": label,\n  className: _JSXStyle.dynamic([[\"3813980210\", [colors.grey200]]]) + \" \" + (cx(className, {\n    disabled\n  }) || \"\")\n}, /*#__PURE__*/React.createElement(Checkbox, {\n  name: label,\n  className: checkboxClassname,\n  checked: active,\n  label: label,\n  onChange: onClick,\n  disabled: disabled,\n  dense: true\n}), styles, /*#__PURE__*/React.createElement(_JSXStyle, {\n  id: \"3813980210\",\n  dynamic: [colors.grey200]\n}, [\"div.__jsx-style-dynamic-selector:hover{background-color:\".concat(colors.grey200, \";}\"), \"div.disabled.__jsx-style-dynamic-selector:hover{background-color:initial;}\"]));\n\nMultiSelectOption.defaultProps = {\n  dataTest: 'dhis2-uicore-multiselectoption'\n};\n/**\n * @typedef {Object} PropTypes\n * @static\n *\n * @prop {string} value\n * @prop {string} label\n * @prop {function} [onChange]\n * @prop {string} [className]\n * @prop {function} [onClick]\n * @prop {boolean} [active]\n * @prop {boolean} [disabled]\n * @prop {string} [dataTest]\n */\n\nMultiSelectOption.propTypes = {\n  label: propTypes.string.isRequired,\n  value: propTypes.string.isRequired,\n  active: propTypes.bool,\n  className: propTypes.string,\n  dataTest: propTypes.string,\n  disabled: propTypes.bool,\n  onClick: propTypes.func\n};\nexport { MultiSelectOption };"]},"metadata":{},"sourceType":"module"}