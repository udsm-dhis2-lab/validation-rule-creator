{"ast":null,"code":"import _JSXStyle from \"styled-jsx/style\";\nimport { colors } from '@dhis2/ui-constants';\nimport propTypes from 'prop-types';\nimport React from 'react';\nimport { ContentWithTitle } from './ContentWithTitle.js';\n/**\n * @module\n * @param {StackedTableCell.PropTypes}\n * @returns {React.Component}\n * @example import { StackedTableCell } from @dhis2/ui-core\n * @see Live demo: {@link /demo/?path=/story/stackedtable--default|Storybook}\n */\n\nexport const StackedTableCell = ({\n  children,\n  className,\n  colSpan,\n  column,\n  dataTest,\n  headerLabels,\n  hideTitle,\n  rowSpan,\n  title\n}) => {\n  const cellTitle = title || headerLabels[column] || '';\n  const realTitle = hideTitle ? '' : cellTitle;\n  return /*#__PURE__*/React.createElement(\"td\", {\n    colSpan: colSpan,\n    rowSpan: rowSpan,\n    \"data-test\": dataTest,\n    className: _JSXStyle.dynamic([[\"1368473511\", [colors.grey300]]]) + \" \" + (className || \"\")\n  }, /*#__PURE__*/React.createElement(ContentWithTitle, {\n    title: realTitle\n  }, children), /*#__PURE__*/React.createElement(_JSXStyle, {\n    id: \"1368473511\",\n    dynamic: [colors.grey300]\n  }, [\"td.__jsx-style-dynamic-selector{border-bottom:1px solid \".concat(colors.grey300, \";padding:0 12px;font-size:14px;width:100%;display:block;}\"), \"td.__jsx-style-dynamic-selector:last-child{border-bottom:0;}\"]));\n};\n/**\n * @typedef {Object} PropTypes\n * @static\n * @prop {Node} [children]\n * @prop {string} [className]\n * @prop {string} [colSpan]\n * @prop {number} [column]\n * @prop {string} [dataTest]\n * @prop {boolean} [hideTitle]\n * @prop {boolean} [rowSpan]\n * @prop {string} [title]\n */\n\nStackedTableCell.propTypes = {\n  children: propTypes.node,\n  className: propTypes.string,\n  colSpan: propTypes.string,\n  column: propTypes.number,\n  dataTest: propTypes.string,\n  headerLabels: propTypes.arrayOf(propTypes.string),\n  hideTitle: propTypes.bool,\n  rowSpan: propTypes.string,\n  title: propTypes.string\n};\nStackedTableCell.defaultProps = {\n  dataTest: 'dhis2-uicore-stackedtablecell',\n  headerLabels: []\n};","map":{"version":3,"sources":["/Users/rajabu/.config/yarn/global/node_modules/@dhis2/ui/node_modules/@dhis2/ui-core/build/es/StackedTable/StackedTableCell.js"],"names":["_JSXStyle","colors","propTypes","React","ContentWithTitle","StackedTableCell","children","className","colSpan","column","dataTest","headerLabels","hideTitle","rowSpan","title","cellTitle","realTitle","createElement","dynamic","grey300","id","concat","node","string","number","arrayOf","bool","defaultProps"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,kBAAtB;AACA,SAASC,MAAT,QAAuB,qBAAvB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,gBAAT,QAAiC,uBAAjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAMC,gBAAgB,GAAG,CAAC;AAC/BC,EAAAA,QAD+B;AAE/BC,EAAAA,SAF+B;AAG/BC,EAAAA,OAH+B;AAI/BC,EAAAA,MAJ+B;AAK/BC,EAAAA,QAL+B;AAM/BC,EAAAA,YAN+B;AAO/BC,EAAAA,SAP+B;AAQ/BC,EAAAA,OAR+B;AAS/BC,EAAAA;AAT+B,CAAD,KAU1B;AACJ,QAAMC,SAAS,GAAGD,KAAK,IAAIH,YAAY,CAACF,MAAD,CAArB,IAAiC,EAAnD;AACA,QAAMO,SAAS,GAAGJ,SAAS,GAAG,EAAH,GAAQG,SAAnC;AACA,SAAO,aAAaZ,KAAK,CAACc,aAAN,CAAoB,IAApB,EAA0B;AAC5CT,IAAAA,OAAO,EAAEA,OADmC;AAE5CK,IAAAA,OAAO,EAAEA,OAFmC;AAG5C,iBAAaH,QAH+B;AAI5CH,IAAAA,SAAS,EAAEP,SAAS,CAACkB,OAAV,CAAkB,CAAC,CAAC,YAAD,EAAe,CAACjB,MAAM,CAACkB,OAAR,CAAf,CAAD,CAAlB,IAAwD,GAAxD,IAA+DZ,SAAS,IAAI,EAA5E;AAJiC,GAA1B,EAKjB,aAAaJ,KAAK,CAACc,aAAN,CAAoBb,gBAApB,EAAsC;AACpDU,IAAAA,KAAK,EAAEE;AAD6C,GAAtC,EAEbV,QAFa,CALI,EAON,aAAaH,KAAK,CAACc,aAAN,CAAoBjB,SAApB,EAA+B;AACxDoB,IAAAA,EAAE,EAAE,YADoD;AAExDF,IAAAA,OAAO,EAAE,CAACjB,MAAM,CAACkB,OAAR;AAF+C,GAA/B,EAGxB,CAAC,2DAA2DE,MAA3D,CAAkEpB,MAAM,CAACkB,OAAzE,EAAkF,2DAAlF,CAAD,EAAiJ,8DAAjJ,CAHwB,CAPP,CAApB;AAWD,CAxBM;AAyBP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAd,gBAAgB,CAACH,SAAjB,GAA6B;AAC3BI,EAAAA,QAAQ,EAAEJ,SAAS,CAACoB,IADO;AAE3Bf,EAAAA,SAAS,EAAEL,SAAS,CAACqB,MAFM;AAG3Bf,EAAAA,OAAO,EAAEN,SAAS,CAACqB,MAHQ;AAI3Bd,EAAAA,MAAM,EAAEP,SAAS,CAACsB,MAJS;AAK3Bd,EAAAA,QAAQ,EAAER,SAAS,CAACqB,MALO;AAM3BZ,EAAAA,YAAY,EAAET,SAAS,CAACuB,OAAV,CAAkBvB,SAAS,CAACqB,MAA5B,CANa;AAO3BX,EAAAA,SAAS,EAAEV,SAAS,CAACwB,IAPM;AAQ3Bb,EAAAA,OAAO,EAAEX,SAAS,CAACqB,MARQ;AAS3BT,EAAAA,KAAK,EAAEZ,SAAS,CAACqB;AATU,CAA7B;AAWAlB,gBAAgB,CAACsB,YAAjB,GAAgC;AAC9BjB,EAAAA,QAAQ,EAAE,+BADoB;AAE9BC,EAAAA,YAAY,EAAE;AAFgB,CAAhC","sourcesContent":["import _JSXStyle from \"styled-jsx/style\";\nimport { colors } from '@dhis2/ui-constants';\nimport propTypes from 'prop-types';\nimport React from 'react';\nimport { ContentWithTitle } from './ContentWithTitle.js';\n/**\n * @module\n * @param {StackedTableCell.PropTypes}\n * @returns {React.Component}\n * @example import { StackedTableCell } from @dhis2/ui-core\n * @see Live demo: {@link /demo/?path=/story/stackedtable--default|Storybook}\n */\n\nexport const StackedTableCell = ({\n  children,\n  className,\n  colSpan,\n  column,\n  dataTest,\n  headerLabels,\n  hideTitle,\n  rowSpan,\n  title\n}) => {\n  const cellTitle = title || headerLabels[column] || '';\n  const realTitle = hideTitle ? '' : cellTitle;\n  return /*#__PURE__*/React.createElement(\"td\", {\n    colSpan: colSpan,\n    rowSpan: rowSpan,\n    \"data-test\": dataTest,\n    className: _JSXStyle.dynamic([[\"1368473511\", [colors.grey300]]]) + \" \" + (className || \"\")\n  }, /*#__PURE__*/React.createElement(ContentWithTitle, {\n    title: realTitle\n  }, children), /*#__PURE__*/React.createElement(_JSXStyle, {\n    id: \"1368473511\",\n    dynamic: [colors.grey300]\n  }, [\"td.__jsx-style-dynamic-selector{border-bottom:1px solid \".concat(colors.grey300, \";padding:0 12px;font-size:14px;width:100%;display:block;}\"), \"td.__jsx-style-dynamic-selector:last-child{border-bottom:0;}\"]));\n};\n/**\n * @typedef {Object} PropTypes\n * @static\n * @prop {Node} [children]\n * @prop {string} [className]\n * @prop {string} [colSpan]\n * @prop {number} [column]\n * @prop {string} [dataTest]\n * @prop {boolean} [hideTitle]\n * @prop {boolean} [rowSpan]\n * @prop {string} [title]\n */\n\nStackedTableCell.propTypes = {\n  children: propTypes.node,\n  className: propTypes.string,\n  colSpan: propTypes.string,\n  column: propTypes.number,\n  dataTest: propTypes.string,\n  headerLabels: propTypes.arrayOf(propTypes.string),\n  hideTitle: propTypes.bool,\n  rowSpan: propTypes.string,\n  title: propTypes.string\n};\nStackedTableCell.defaultProps = {\n  dataTest: 'dhis2-uicore-stackedtablecell',\n  headerLabels: []\n};"]},"metadata":{},"sourceType":"module"}