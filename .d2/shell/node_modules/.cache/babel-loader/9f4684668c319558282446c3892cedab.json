{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport { SingleSelectOption } from '@dhis2/ui-core';\nimport { SingleSelectField } from '@dhis2/ui-widgets';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { createSelectChangeHandler, createFocusHandler, createBlurHandler, hasError, isLoading, isValid, getValidationText } from '../shared/helpers.js';\nimport { inputPropType, metaPropType } from '../shared/propTypes.js';\nexport const SingleSelectFieldFF = ({\n  error,\n  input,\n  loading,\n  meta,\n  onBlur,\n  onFocus,\n  options,\n  showLoadingStatus,\n  showValidStatus,\n  valid,\n  validationText,\n  ...rest\n}) => {\n  return /*#__PURE__*/React.createElement(SingleSelectField, _extends({}, rest, {\n    name: input.name,\n    error: hasError(meta, error),\n    valid: isValid(meta, valid, showValidStatus),\n    loading: isLoading(meta, loading, showLoadingStatus),\n    validationText: getValidationText(meta, validationText, error),\n    onFocus: createFocusHandler(input, onFocus),\n    onChange: createSelectChangeHandler(input),\n    onBlur: createBlurHandler(input, onBlur),\n    selected: input.value || ''\n  }), options.map(option => /*#__PURE__*/React.createElement(SingleSelectOption, _extends({\n    key: option.value\n  }, option))));\n};\nSingleSelectFieldFF.propTypes = {\n  /** `input` props received from Final Form `Field` */\n  input: inputPropType.isRequired,\n\n  /** `meta` props received from Final Form `Field` */\n  meta: metaPropType.isRequired,\n  options: PropTypes.arrayOf(PropTypes.shape({\n    label: PropTypes.string,\n    value: PropTypes.string\n  })).isRequired,\n  error: PropTypes.bool,\n  loading: PropTypes.bool,\n  showLoadingStatus: PropTypes.bool,\n  showValidStatus: PropTypes.bool,\n  valid: PropTypes.bool,\n  validationText: PropTypes.string,\n  onBlur: PropTypes.func,\n  onFocus: PropTypes.func\n};","map":{"version":3,"sources":["/Users/rajabu/.config/yarn/global/node_modules/@dhis2/ui/node_modules/@dhis2/ui-forms/build/es/SingleSelectFieldFF/SingleSelectFieldFF.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","SingleSelectOption","SingleSelectField","PropTypes","React","createSelectChangeHandler","createFocusHandler","createBlurHandler","hasError","isLoading","isValid","getValidationText","inputPropType","metaPropType","SingleSelectFieldFF","error","input","loading","meta","onBlur","onFocus","options","showLoadingStatus","showValidStatus","valid","validationText","rest","createElement","name","onChange","selected","value","map","option","propTypes","isRequired","arrayOf","shape","label","string","bool","func"],"mappings":"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","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport { SingleSelectOption } from '@dhis2/ui-core';\nimport { SingleSelectField } from '@dhis2/ui-widgets';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { createSelectChangeHandler, createFocusHandler, createBlurHandler, hasError, isLoading, isValid, getValidationText } from '../shared/helpers.js';\nimport { inputPropType, metaPropType } from '../shared/propTypes.js';\nexport const SingleSelectFieldFF = ({\n  error,\n  input,\n  loading,\n  meta,\n  onBlur,\n  onFocus,\n  options,\n  showLoadingStatus,\n  showValidStatus,\n  valid,\n  validationText,\n  ...rest\n}) => {\n  return /*#__PURE__*/React.createElement(SingleSelectField, _extends({}, rest, {\n    name: input.name,\n    error: hasError(meta, error),\n    valid: isValid(meta, valid, showValidStatus),\n    loading: isLoading(meta, loading, showLoadingStatus),\n    validationText: getValidationText(meta, validationText, error),\n    onFocus: createFocusHandler(input, onFocus),\n    onChange: createSelectChangeHandler(input),\n    onBlur: createBlurHandler(input, onBlur),\n    selected: input.value || ''\n  }), options.map(option => /*#__PURE__*/React.createElement(SingleSelectOption, _extends({\n    key: option.value\n  }, option))));\n};\nSingleSelectFieldFF.propTypes = {\n  /** `input` props received from Final Form `Field` */\n  input: inputPropType.isRequired,\n\n  /** `meta` props received from Final Form `Field` */\n  meta: metaPropType.isRequired,\n  options: PropTypes.arrayOf(PropTypes.shape({\n    label: PropTypes.string,\n    value: PropTypes.string\n  })).isRequired,\n  error: PropTypes.bool,\n  loading: PropTypes.bool,\n  showLoadingStatus: PropTypes.bool,\n  showValidStatus: PropTypes.bool,\n  valid: PropTypes.bool,\n  validationText: PropTypes.string,\n  onBlur: PropTypes.func,\n  onFocus: PropTypes.func\n};"]},"metadata":{},"sourceType":"module"}