{"ast":null,"code":"import cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React, { forwardRef } from 'react';\nimport { Table, TableScrollBox } from './TableElements/index.js';\n/**\n * @module\n * @param {DataTable.PropTypes} props\n * @returns {React.Component}\n * @example import { DataTable } from '@dhis2/ui'\n * @see Specification: {@link https://github.com/dhis2/design-system/blob/master/organisms/data-datatable.md|Design system}\n * @see Live demo: {@link /demo/?path=/story/datatable--default|Storybook}\n */\n\nexport const DataTable = /*#__PURE__*/forwardRef(({\n  children,\n  className,\n  dataTest,\n  layout,\n  role,\n  scrollHeight,\n  scrollWidth,\n  width\n}, ref) => {\n  const scrollable = !!(scrollHeight || scrollWidth);\n  const table = /*#__PURE__*/React.createElement(Table, {\n    borderless: scrollable,\n    className: className,\n    dataTest: dataTest,\n    layout: layout,\n    ref: ref,\n    role: role,\n    width: width\n  }, children);\n  return !scrollable ? table : /*#__PURE__*/React.createElement(TableScrollBox, {\n    className: cx(className, 'tablescrollbox'),\n    dataTest: \"\".concat(dataTest, \"-scrollbox\"),\n    maxHeight: scrollHeight,\n    maxWidth: scrollWidth\n  }, table);\n});\nDataTable.displayName = 'DataTable';\nDataTable.defaultProps = {\n  dataTest: 'dhis2-uicore-datatable',\n  width: '100%',\n  layout: 'auto'\n};\n/**\n * @typedef {Object} PropTypes\n * @static\n * @prop {DataTableHead|DataTableBody|DataTableFoot|Array.<DataTableHead|DataTableBody|DataTableFoot>} [children]\n * Should be `<DataTableHead>`, `<DataTableBody>`, and `<DataTableFoot>` components\n * @prop {string} [className]\n * @prop {string} [dataTest=dhis2-uicore-datatable]\n * @prop {(auto|fixed)} [layout=auto] Sets the `datatable-layout` property. Switching to `fixed` can prevent\n *  style issues when dealing with a datatable with multiple frozen columns or when dealing with filter\n *  elements in the datatable headers.\n * @prop {string} [scrollHeight] Sets max-height of scrollbox\n * @prop {string} [scrollWidth] Sets max-width of scrollbox\n * @prop {string} [role]\n * @prop {string} [width=100%] Sets the `width` property. Providing an explicit width can prevent style\n *  issues when dealing with horizontally scrolling datatables with a fixed layout.\n */\n\nDataTable.propTypes = {\n  /**\n   * Should be `<DataTableHead>`, `<DataTableBody>`, and `<DataTableFoot>` components\n   */\n  children: PropTypes.node,\n  className: PropTypes.string,\n  dataTest: PropTypes.string,\n\n  /**\n   * Sets the `datatable-layout` property. Switching to `fixed` can prevent style\n   * issues when dealing with a datatable with multiple frozen columns or when dealing\n   * with filter elements in the datatable headers.\n   */\n  layout: PropTypes.oneOf(['auto', 'fixed', 'initial', 'inherit']),\n  role: PropTypes.string,\n\n  /** Sets max-height of scrollbox */\n  scrollHeight: PropTypes.string,\n\n  /** Sets max-width of scrollbox */\n  scrollWidth: PropTypes.string,\n\n  /**\n   * Sets the `width` property. Providing an explicit width can prevent style\n   * issues when dealing with horizontally scrolling datatables with a fixed layout.\n   */\n  width: PropTypes.string\n};","map":{"version":3,"sources":["/Users/rajabu/.config/yarn/global/node_modules/@dhis2/ui/node_modules/@dhis2/ui-widgets/build/es/DataTable/DataTable.js"],"names":["cx","PropTypes","React","forwardRef","Table","TableScrollBox","DataTable","children","className","dataTest","layout","role","scrollHeight","scrollWidth","width","ref","scrollable","table","createElement","borderless","concat","maxHeight","maxWidth","displayName","defaultProps","propTypes","node","string","oneOf"],"mappings":"AAAA,OAAOA,EAAP,MAAe,YAAf;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,KAAT,EAAgBC,cAAhB,QAAsC,0BAAtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAMC,SAAS,GAAG,aAAaH,UAAU,CAAC,CAAC;AAChDI,EAAAA,QADgD;AAEhDC,EAAAA,SAFgD;AAGhDC,EAAAA,QAHgD;AAIhDC,EAAAA,MAJgD;AAKhDC,EAAAA,IALgD;AAMhDC,EAAAA,YANgD;AAOhDC,EAAAA,WAPgD;AAQhDC,EAAAA;AARgD,CAAD,EAS9CC,GAT8C,KAStC;AACT,QAAMC,UAAU,GAAG,CAAC,EAAEJ,YAAY,IAAIC,WAAlB,CAApB;AACA,QAAMI,KAAK,GAAG,aAAaf,KAAK,CAACgB,aAAN,CAAoBd,KAApB,EAA2B;AACpDe,IAAAA,UAAU,EAAEH,UADwC;AAEpDR,IAAAA,SAAS,EAAEA,SAFyC;AAGpDC,IAAAA,QAAQ,EAAEA,QAH0C;AAIpDC,IAAAA,MAAM,EAAEA,MAJ4C;AAKpDK,IAAAA,GAAG,EAAEA,GAL+C;AAMpDJ,IAAAA,IAAI,EAAEA,IAN8C;AAOpDG,IAAAA,KAAK,EAAEA;AAP6C,GAA3B,EAQxBP,QARwB,CAA3B;AASA,SAAO,CAACS,UAAD,GAAcC,KAAd,GAAsB,aAAaf,KAAK,CAACgB,aAAN,CAAoBb,cAApB,EAAoC;AAC5EG,IAAAA,SAAS,EAAER,EAAE,CAACQ,SAAD,EAAY,gBAAZ,CAD+D;AAE5EC,IAAAA,QAAQ,EAAE,GAAGW,MAAH,CAAUX,QAAV,EAAoB,YAApB,CAFkE;AAG5EY,IAAAA,SAAS,EAAET,YAHiE;AAI5EU,IAAAA,QAAQ,EAAET;AAJkE,GAApC,EAKvCI,KALuC,CAA1C;AAMD,CA1B+C,CAAzC;AA2BPX,SAAS,CAACiB,WAAV,GAAwB,WAAxB;AACAjB,SAAS,CAACkB,YAAV,GAAyB;AACvBf,EAAAA,QAAQ,EAAE,wBADa;AAEvBK,EAAAA,KAAK,EAAE,MAFgB;AAGvBJ,EAAAA,MAAM,EAAE;AAHe,CAAzB;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAJ,SAAS,CAACmB,SAAV,GAAsB;AACpB;AACF;AACA;AACElB,EAAAA,QAAQ,EAAEN,SAAS,CAACyB,IAJA;AAKpBlB,EAAAA,SAAS,EAAEP,SAAS,CAAC0B,MALD;AAMpBlB,EAAAA,QAAQ,EAAER,SAAS,CAAC0B,MANA;;AAQpB;AACF;AACA;AACA;AACA;AACEjB,EAAAA,MAAM,EAAET,SAAS,CAAC2B,KAAV,CAAgB,CAAC,MAAD,EAAS,OAAT,EAAkB,SAAlB,EAA6B,SAA7B,CAAhB,CAbY;AAcpBjB,EAAAA,IAAI,EAAEV,SAAS,CAAC0B,MAdI;;AAgBpB;AACAf,EAAAA,YAAY,EAAEX,SAAS,CAAC0B,MAjBJ;;AAmBpB;AACAd,EAAAA,WAAW,EAAEZ,SAAS,CAAC0B,MApBH;;AAsBpB;AACF;AACA;AACA;AACEb,EAAAA,KAAK,EAAEb,SAAS,CAAC0B;AA1BG,CAAtB","sourcesContent":["import cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React, { forwardRef } from 'react';\nimport { Table, TableScrollBox } from './TableElements/index.js';\n/**\n * @module\n * @param {DataTable.PropTypes} props\n * @returns {React.Component}\n * @example import { DataTable } from '@dhis2/ui'\n * @see Specification: {@link https://github.com/dhis2/design-system/blob/master/organisms/data-datatable.md|Design system}\n * @see Live demo: {@link /demo/?path=/story/datatable--default|Storybook}\n */\n\nexport const DataTable = /*#__PURE__*/forwardRef(({\n  children,\n  className,\n  dataTest,\n  layout,\n  role,\n  scrollHeight,\n  scrollWidth,\n  width\n}, ref) => {\n  const scrollable = !!(scrollHeight || scrollWidth);\n  const table = /*#__PURE__*/React.createElement(Table, {\n    borderless: scrollable,\n    className: className,\n    dataTest: dataTest,\n    layout: layout,\n    ref: ref,\n    role: role,\n    width: width\n  }, children);\n  return !scrollable ? table : /*#__PURE__*/React.createElement(TableScrollBox, {\n    className: cx(className, 'tablescrollbox'),\n    dataTest: \"\".concat(dataTest, \"-scrollbox\"),\n    maxHeight: scrollHeight,\n    maxWidth: scrollWidth\n  }, table);\n});\nDataTable.displayName = 'DataTable';\nDataTable.defaultProps = {\n  dataTest: 'dhis2-uicore-datatable',\n  width: '100%',\n  layout: 'auto'\n};\n/**\n * @typedef {Object} PropTypes\n * @static\n * @prop {DataTableHead|DataTableBody|DataTableFoot|Array.<DataTableHead|DataTableBody|DataTableFoot>} [children]\n * Should be `<DataTableHead>`, `<DataTableBody>`, and `<DataTableFoot>` components\n * @prop {string} [className]\n * @prop {string} [dataTest=dhis2-uicore-datatable]\n * @prop {(auto|fixed)} [layout=auto] Sets the `datatable-layout` property. Switching to `fixed` can prevent\n *  style issues when dealing with a datatable with multiple frozen columns or when dealing with filter\n *  elements in the datatable headers.\n * @prop {string} [scrollHeight] Sets max-height of scrollbox\n * @prop {string} [scrollWidth] Sets max-width of scrollbox\n * @prop {string} [role]\n * @prop {string} [width=100%] Sets the `width` property. Providing an explicit width can prevent style\n *  issues when dealing with horizontally scrolling datatables with a fixed layout.\n */\n\nDataTable.propTypes = {\n  /**\n   * Should be `<DataTableHead>`, `<DataTableBody>`, and `<DataTableFoot>` components\n   */\n  children: PropTypes.node,\n  className: PropTypes.string,\n  dataTest: PropTypes.string,\n\n  /**\n   * Sets the `datatable-layout` property. Switching to `fixed` can prevent style\n   * issues when dealing with a datatable with multiple frozen columns or when dealing\n   * with filter elements in the datatable headers.\n   */\n  layout: PropTypes.oneOf(['auto', 'fixed', 'initial', 'inherit']),\n  role: PropTypes.string,\n\n  /** Sets max-height of scrollbox */\n  scrollHeight: PropTypes.string,\n\n  /** Sets max-width of scrollbox */\n  scrollWidth: PropTypes.string,\n\n  /**\n   * Sets the `width` property. Providing an explicit width can prevent style\n   * issues when dealing with horizontally scrolling datatables with a fixed layout.\n   */\n  width: PropTypes.string\n};"]},"metadata":{},"sourceType":"module"}