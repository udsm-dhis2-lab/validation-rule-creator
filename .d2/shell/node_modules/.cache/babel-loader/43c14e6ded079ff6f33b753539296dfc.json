{"ast":null,"code":"import _JSXStyle from \"styled-jsx/style\";\nimport propTypes from '@dhis2/prop-types';\nimport { colors } from '@dhis2/ui-constants';\nimport React from 'react';\nimport { Consumer } from '../StackedTable/TableContext.js';\nimport { addColNumToChildren } from './addColNumToChildren';\nimport { supplyHeaderLabelsToChildren } from './supplyHeaderLabelsToChildren';\n/**\n * @module\n * @param {StackedTableRow.PropTypes}\n * @returns {React.Component}\n * @example import { StackedTableRow } from @dhis2/ui-core\n * @see Live demo: {@link /demo/?path=/story/stackedtable--default|Storybook}\n */\n\nexport const StackedTableRow = ({\n  children,\n  className,\n  dataTest\n}) => /*#__PURE__*/React.createElement(\"tr\", {\n  \"data-test\": dataTest,\n  className: _JSXStyle.dynamic([[\"2003961452\", [colors.grey300, colors.white]]]) + \" \" + (className || \"\")\n}, /*#__PURE__*/React.createElement(Consumer, null, ({\n  headerLabels\n}) => supplyHeaderLabelsToChildren(headerLabels, addColNumToChildren(children))), /*#__PURE__*/React.createElement(_JSXStyle, {\n  id: \"2003961452\",\n  dynamic: [colors.grey300, colors.white]\n}, [\"tr.__jsx-style-dynamic-selector{min-height:45px;display:block;border:1px solid \".concat(colors.grey300, \";}\"), \"tr.__jsx-style-dynamic-selector:nth-child(even){background:\".concat(colors.white, \";}\"), \"thead>tr.__jsx-style-dynamic-selector,tbody>tr.__jsx-style-dynamic-selector{min-height:36px;}\", \"tr.__jsx-style-dynamic-selector+tr.__jsx-style-dynamic-selector{margin-top:32px;}\"]));\n/**\n * @typedef {Object} PropTypes\n * @static\n * @prop {Node} [children]\n * Has to be instance of StackedTableCell or StackedTableCellHead\n * @prop {string} [className]\n * @prop {string} [dataTest]\n */\n\nStackedTableRow.propTypes = {\n  children: propTypes.node,\n  className: propTypes.string,\n  dataTest: propTypes.string\n};\nStackedTableRow.defaultProps = {\n  dataTest: 'dhis2-uicore-stackedtablerow'\n};","map":{"version":3,"sources":["/Users/rajabu/.config/yarn/global/node_modules/@dhis2/ui/node_modules/@dhis2/ui-core/build/es/StackedTable/StackedTableRow.js"],"names":["_JSXStyle","propTypes","colors","React","Consumer","addColNumToChildren","supplyHeaderLabelsToChildren","StackedTableRow","children","className","dataTest","createElement","dynamic","grey300","white","headerLabels","id","concat","node","string","defaultProps"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,kBAAtB;AACA,OAAOC,SAAP,MAAsB,mBAAtB;AACA,SAASC,MAAT,QAAuB,qBAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,iCAAzB;AACA,SAASC,mBAAT,QAAoC,uBAApC;AACA,SAASC,4BAAT,QAA6C,gCAA7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAMC,eAAe,GAAG,CAAC;AAC9BC,EAAAA,QAD8B;AAE9BC,EAAAA,SAF8B;AAG9BC,EAAAA;AAH8B,CAAD,KAIzB,aAAaP,KAAK,CAACQ,aAAN,CAAoB,IAApB,EAA0B;AAC3C,eAAaD,QAD8B;AAE3CD,EAAAA,SAAS,EAAET,SAAS,CAACY,OAAV,CAAkB,CAAC,CAAC,YAAD,EAAe,CAACV,MAAM,CAACW,OAAR,EAAiBX,MAAM,CAACY,KAAxB,CAAf,CAAD,CAAlB,IAAsE,GAAtE,IAA6EL,SAAS,IAAI,EAA1F;AAFgC,CAA1B,EAGhB,aAAaN,KAAK,CAACQ,aAAN,CAAoBP,QAApB,EAA8B,IAA9B,EAAoC,CAAC;AACnDW,EAAAA;AADmD,CAAD,KAE9CT,4BAA4B,CAACS,YAAD,EAAeV,mBAAmB,CAACG,QAAD,CAAlC,CAFlB,CAHG,EAK+D,aAAaL,KAAK,CAACQ,aAAN,CAAoBX,SAApB,EAA+B;AAC5HgB,EAAAA,EAAE,EAAE,YADwH;AAE5HJ,EAAAA,OAAO,EAAE,CAACV,MAAM,CAACW,OAAR,EAAiBX,MAAM,CAACY,KAAxB;AAFmH,CAA/B,EAG5F,CAAC,kFAAkFG,MAAlF,CAAyFf,MAAM,CAACW,OAAhG,EAAyG,IAAzG,CAAD,EAAiH,8DAA8DI,MAA9D,CAAqEf,MAAM,CAACY,KAA5E,EAAmF,IAAnF,CAAjH,EAA2M,+FAA3M,EAA4S,mFAA5S,CAH4F,CAL5E,CAJZ;AAaP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAP,eAAe,CAACN,SAAhB,GAA4B;AAC1BO,EAAAA,QAAQ,EAAEP,SAAS,CAACiB,IADM;AAE1BT,EAAAA,SAAS,EAAER,SAAS,CAACkB,MAFK;AAG1BT,EAAAA,QAAQ,EAAET,SAAS,CAACkB;AAHM,CAA5B;AAKAZ,eAAe,CAACa,YAAhB,GAA+B;AAC7BV,EAAAA,QAAQ,EAAE;AADmB,CAA/B","sourcesContent":["import _JSXStyle from \"styled-jsx/style\";\nimport propTypes from '@dhis2/prop-types';\nimport { colors } from '@dhis2/ui-constants';\nimport React from 'react';\nimport { Consumer } from '../StackedTable/TableContext.js';\nimport { addColNumToChildren } from './addColNumToChildren';\nimport { supplyHeaderLabelsToChildren } from './supplyHeaderLabelsToChildren';\n/**\n * @module\n * @param {StackedTableRow.PropTypes}\n * @returns {React.Component}\n * @example import { StackedTableRow } from @dhis2/ui-core\n * @see Live demo: {@link /demo/?path=/story/stackedtable--default|Storybook}\n */\n\nexport const StackedTableRow = ({\n  children,\n  className,\n  dataTest\n}) => /*#__PURE__*/React.createElement(\"tr\", {\n  \"data-test\": dataTest,\n  className: _JSXStyle.dynamic([[\"2003961452\", [colors.grey300, colors.white]]]) + \" \" + (className || \"\")\n}, /*#__PURE__*/React.createElement(Consumer, null, ({\n  headerLabels\n}) => supplyHeaderLabelsToChildren(headerLabels, addColNumToChildren(children))), /*#__PURE__*/React.createElement(_JSXStyle, {\n  id: \"2003961452\",\n  dynamic: [colors.grey300, colors.white]\n}, [\"tr.__jsx-style-dynamic-selector{min-height:45px;display:block;border:1px solid \".concat(colors.grey300, \";}\"), \"tr.__jsx-style-dynamic-selector:nth-child(even){background:\".concat(colors.white, \";}\"), \"thead>tr.__jsx-style-dynamic-selector,tbody>tr.__jsx-style-dynamic-selector{min-height:36px;}\", \"tr.__jsx-style-dynamic-selector+tr.__jsx-style-dynamic-selector{margin-top:32px;}\"]));\n/**\n * @typedef {Object} PropTypes\n * @static\n * @prop {Node} [children]\n * Has to be instance of StackedTableCell or StackedTableCellHead\n * @prop {string} [className]\n * @prop {string} [dataTest]\n */\n\nStackedTableRow.propTypes = {\n  children: propTypes.node,\n  className: propTypes.string,\n  dataTest: propTypes.string\n};\nStackedTableRow.defaultProps = {\n  dataTest: 'dhis2-uicore-stackedtablerow'\n};"]},"metadata":{},"sourceType":"module"}