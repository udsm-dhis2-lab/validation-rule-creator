{"ast":null,"code":"import { sharedPropTypes } from '@dhis2/ui-constants';\nimport { Field, FieldSet } from '@dhis2/ui-core';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n/**\n * @module\n * @param {FieldGroup.PropTypes} props\n * @returns {React.Component}\n *\n * @example import { FieldGroup } from '@dhis2/ui'\n *\n * @example import { FieldGroup } from '@dhis2/ui-widgets'\n */\n\nconst FieldGroup = ({\n  children,\n  className,\n  disabled,\n  helpText,\n  validationText,\n  label,\n  name,\n  required,\n  dataTest,\n  valid,\n  error,\n  warning\n}) => /*#__PURE__*/React.createElement(FieldSet, {\n  classname: className,\n  dataTest: dataTest\n}, /*#__PURE__*/React.createElement(Field, {\n  label: label,\n  disabled: disabled,\n  required: required,\n  helpText: helpText,\n  validationText: validationText,\n  error: error,\n  warning: warning,\n  valid: valid,\n  name: name\n}, children));\n\nFieldGroup.defaultProps = {\n  dataTest: 'dhis2-uiwidgets-fieldsetfield'\n};\n/**\n * @typedef {Object} PropTypes\n * @static\n * @private\n *\n * @prop {Node} [children]\n * @prop {string} [className]\n * @prop {boolean} [disabled]\n * @prop {string} [helpText]\n * @prop {string} [label]\n * @prop {string} [name]\n * @prop {string} [validationText]\n * @prop {boolean} [required]\n * @prop {string} [dataTest]\n * @prop {boolean} [valid] - `valid`, `warning`, and `error`, are mutually exclusive\n * @prop {boolean} [warning]\n * @prop {boolean} [error]\n */\n\nFieldGroup.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  dataTest: PropTypes.string,\n\n  /** Disables the form controls within */\n  disabled: PropTypes.bool,\n\n  /** Applies 'error' styling to validation text for feedback. Mutually exclusive with `warning` and `valid` props */\n  error: sharedPropTypes.statusPropType,\n\n  /** Useful instructions for the user */\n  helpText: PropTypes.string,\n\n  /** Labels the Field Group */\n  label: PropTypes.string,\n\n  /** Name associate with the Field Group. Passed in object as argument to event handlers */\n  name: PropTypes.string,\n\n  /** Adds an asterisk to indicate this field is required */\n  required: PropTypes.bool,\n\n  /** Applies 'valid' styling to validation text for feedback. Mutually exclusive with `warning` and `error` props */\n  valid: sharedPropTypes.statusPropType,\n\n  /** Adds text at the bottom of the field to provide validation feedback. Acquires styles from `valid`, `warning` and `error` statuses */\n  validationText: PropTypes.string,\n\n  /** Applies 'warning' styling to validation text for feedback. Mutually exclusive with `valid` and `error` props */\n  warning: sharedPropTypes.statusPropType\n};\nexport { FieldGroup };","map":{"version":3,"sources":["/Users/rajabu/.config/yarn/global/node_modules/@dhis2/ui/node_modules/@dhis2/ui-widgets/build/es/FieldGroup/FieldGroup.js"],"names":["sharedPropTypes","Field","FieldSet","PropTypes","React","FieldGroup","children","className","disabled","helpText","validationText","label","name","required","dataTest","valid","error","warning","createElement","classname","defaultProps","propTypes","node","string","bool","statusPropType"],"mappings":"AAAA,SAASA,eAAT,QAAgC,qBAAhC;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,gBAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,UAAU,GAAG,CAAC;AAClBC,EAAAA,QADkB;AAElBC,EAAAA,SAFkB;AAGlBC,EAAAA,QAHkB;AAIlBC,EAAAA,QAJkB;AAKlBC,EAAAA,cALkB;AAMlBC,EAAAA,KANkB;AAOlBC,EAAAA,IAPkB;AAQlBC,EAAAA,QARkB;AASlBC,EAAAA,QATkB;AAUlBC,EAAAA,KAVkB;AAWlBC,EAAAA,KAXkB;AAYlBC,EAAAA;AAZkB,CAAD,KAab,aAAab,KAAK,CAACc,aAAN,CAAoBhB,QAApB,EAA8B;AAC/CiB,EAAAA,SAAS,EAAEZ,SADoC;AAE/CO,EAAAA,QAAQ,EAAEA;AAFqC,CAA9B,EAGhB,aAAaV,KAAK,CAACc,aAAN,CAAoBjB,KAApB,EAA2B;AACzCU,EAAAA,KAAK,EAAEA,KADkC;AAEzCH,EAAAA,QAAQ,EAAEA,QAF+B;AAGzCK,EAAAA,QAAQ,EAAEA,QAH+B;AAIzCJ,EAAAA,QAAQ,EAAEA,QAJ+B;AAKzCC,EAAAA,cAAc,EAAEA,cALyB;AAMzCM,EAAAA,KAAK,EAAEA,KANkC;AAOzCC,EAAAA,OAAO,EAAEA,OAPgC;AAQzCF,EAAAA,KAAK,EAAEA,KARkC;AASzCH,EAAAA,IAAI,EAAEA;AATmC,CAA3B,EAUbN,QAVa,CAHG,CAbnB;;AA4BAD,UAAU,CAACe,YAAX,GAA0B;AACxBN,EAAAA,QAAQ,EAAE;AADc,CAA1B;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAT,UAAU,CAACgB,SAAX,GAAuB;AACrBf,EAAAA,QAAQ,EAAEH,SAAS,CAACmB,IADC;AAErBf,EAAAA,SAAS,EAAEJ,SAAS,CAACoB,MAFA;AAGrBT,EAAAA,QAAQ,EAAEX,SAAS,CAACoB,MAHC;;AAKrB;AACAf,EAAAA,QAAQ,EAAEL,SAAS,CAACqB,IANC;;AAQrB;AACAR,EAAAA,KAAK,EAAEhB,eAAe,CAACyB,cATF;;AAWrB;AACAhB,EAAAA,QAAQ,EAAEN,SAAS,CAACoB,MAZC;;AAcrB;AACAZ,EAAAA,KAAK,EAAER,SAAS,CAACoB,MAfI;;AAiBrB;AACAX,EAAAA,IAAI,EAAET,SAAS,CAACoB,MAlBK;;AAoBrB;AACAV,EAAAA,QAAQ,EAAEV,SAAS,CAACqB,IArBC;;AAuBrB;AACAT,EAAAA,KAAK,EAAEf,eAAe,CAACyB,cAxBF;;AA0BrB;AACAf,EAAAA,cAAc,EAAEP,SAAS,CAACoB,MA3BL;;AA6BrB;AACAN,EAAAA,OAAO,EAAEjB,eAAe,CAACyB;AA9BJ,CAAvB;AAgCA,SAASpB,UAAT","sourcesContent":["import { sharedPropTypes } from '@dhis2/ui-constants';\nimport { Field, FieldSet } from '@dhis2/ui-core';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n/**\n * @module\n * @param {FieldGroup.PropTypes} props\n * @returns {React.Component}\n *\n * @example import { FieldGroup } from '@dhis2/ui'\n *\n * @example import { FieldGroup } from '@dhis2/ui-widgets'\n */\n\nconst FieldGroup = ({\n  children,\n  className,\n  disabled,\n  helpText,\n  validationText,\n  label,\n  name,\n  required,\n  dataTest,\n  valid,\n  error,\n  warning\n}) => /*#__PURE__*/React.createElement(FieldSet, {\n  classname: className,\n  dataTest: dataTest\n}, /*#__PURE__*/React.createElement(Field, {\n  label: label,\n  disabled: disabled,\n  required: required,\n  helpText: helpText,\n  validationText: validationText,\n  error: error,\n  warning: warning,\n  valid: valid,\n  name: name\n}, children));\n\nFieldGroup.defaultProps = {\n  dataTest: 'dhis2-uiwidgets-fieldsetfield'\n};\n/**\n * @typedef {Object} PropTypes\n * @static\n * @private\n *\n * @prop {Node} [children]\n * @prop {string} [className]\n * @prop {boolean} [disabled]\n * @prop {string} [helpText]\n * @prop {string} [label]\n * @prop {string} [name]\n * @prop {string} [validationText]\n * @prop {boolean} [required]\n * @prop {string} [dataTest]\n * @prop {boolean} [valid] - `valid`, `warning`, and `error`, are mutually exclusive\n * @prop {boolean} [warning]\n * @prop {boolean} [error]\n */\n\nFieldGroup.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  dataTest: PropTypes.string,\n\n  /** Disables the form controls within */\n  disabled: PropTypes.bool,\n\n  /** Applies 'error' styling to validation text for feedback. Mutually exclusive with `warning` and `valid` props */\n  error: sharedPropTypes.statusPropType,\n\n  /** Useful instructions for the user */\n  helpText: PropTypes.string,\n\n  /** Labels the Field Group */\n  label: PropTypes.string,\n\n  /** Name associate with the Field Group. Passed in object as argument to event handlers */\n  name: PropTypes.string,\n\n  /** Adds an asterisk to indicate this field is required */\n  required: PropTypes.bool,\n\n  /** Applies 'valid' styling to validation text for feedback. Mutually exclusive with `warning` and `error` props */\n  valid: sharedPropTypes.statusPropType,\n\n  /** Adds text at the bottom of the field to provide validation feedback. Acquires styles from `valid`, `warning` and `error` statuses */\n  validationText: PropTypes.string,\n\n  /** Applies 'warning' styling to validation text for feedback. Mutually exclusive with `valid` and `error` props */\n  warning: sharedPropTypes.statusPropType\n};\nexport { FieldGroup };"]},"metadata":{},"sourceType":"module"}