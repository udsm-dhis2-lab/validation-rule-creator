{"ast":null,"code":"import { sharedPropTypes } from '@dhis2/ui-constants';\nimport { Field, Input, Box } from '@dhis2/ui-core';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n/**\n * @module\n * @param {InputField.PropTypes} props\n * @returns {React.Component}\n *\n * @example import { InputField } from '@dhis2/ui-widgets'\n *\n * @see Specification: {@link https://github.com/dhis2/design-system/blob/master/atoms/inputfield.md|Design system}\n * @see Live demo: {@link /demo/?path=/story/inputfield--no-placeholder-no-value|Storybook}\n */\n\nclass InputField extends React.Component {\n  render() {\n    const {\n      className,\n      onChange,\n      onFocus,\n      onBlur,\n      initialFocus,\n      type,\n      dense,\n      required,\n      label,\n      disabled,\n      readOnly,\n      placeholder,\n      name,\n      max,\n      min,\n      step,\n      valid,\n      error,\n      warning,\n      loading,\n      value,\n      tabIndex,\n      helpText,\n      validationText,\n      inputWidth,\n      dataTest\n    } = this.props;\n    return /*#__PURE__*/React.createElement(Field, {\n      className: className,\n      dataTest: dataTest,\n      error: error,\n      warning: warning,\n      valid: valid,\n      helpText: helpText,\n      validationText: validationText,\n      label: label,\n      name: name,\n      disabled: disabled,\n      required: required\n    }, /*#__PURE__*/React.createElement(Box, {\n      width: inputWidth,\n      minWidth: \"72px\"\n    }, /*#__PURE__*/React.createElement(Input, {\n      onFocus: onFocus,\n      onBlur: onBlur,\n      onChange: onChange,\n      name: name,\n      type: type,\n      value: value || '',\n      placeholder: placeholder,\n      disabled: disabled,\n      max: max,\n      min: min,\n      step: step,\n      valid: valid,\n      warning: warning,\n      error: error,\n      loading: loading,\n      dense: dense,\n      tabIndex: tabIndex,\n      initialFocus: initialFocus,\n      readOnly: readOnly\n    })));\n  }\n\n}\n\nInputField.defaultProps = {\n  dataTest: 'dhis2-uiwidgets-inputfield'\n};\n/**\n * @typedef {Object} PropTypes\n * @static\n *\n * @prop {string} name\n * @prop {string} [type=text]\n * @prop {function} [onChange]\n * @prop {function} [onBlur]\n * @prop {function} [onFocus]\n * @prop {string} [label]\n * @prop {string} [className]\n * @prop {string} [placeholder]\n * @prop {string} [value]\n * @prop {string} [tabIndex]\n * @prop {string} [inputWidth]\n *\n * @prop {string} [max] The native `max` attribute\n * @prop {string} [min] The native `min` attribute\n * @prop {string} [step] The native `step` attribute\n *\n * @prop {boolean} [required]\n * @prop {boolean} [disabled]\n * @prop {boolean} [readOnly]\n * @prop {boolean} [dense] - Compact mode\n * @prop {boolean} [initialFocus]\n *\n * @prop {boolean} [valid] - `valid`, `warning`, `error`, and `loading`\n * are mutually exclusive\n * @prop {boolean} [warning]\n * @prop {boolean} [error]\n * @prop {boolean} [loading]\n *\n * @prop {string} [validationText]\n * @prop {string} [helpText]\n * @prop {string} [dataTest]\n */\n\nInputField.propTypes = {\n  className: PropTypes.string,\n  dataTest: PropTypes.string,\n\n  /** Makes the input smaller */\n  dense: PropTypes.bool,\n\n  /** Disables the input */\n  disabled: PropTypes.bool,\n\n  /** Applies 'error' appearance for validation feedback. Mutually exclusive with `valid` and `warning` props */\n  error: sharedPropTypes.statusPropType,\n\n  /** Guiding text for how to use this input */\n  helpText: PropTypes.string,\n\n  /** The input grabs initial focus on the page */\n  initialFocus: PropTypes.bool,\n\n  /** Defines the width of the input. Can be any valid CSS measurement */\n  inputWidth: PropTypes.string,\n\n  /** Label text for the input */\n  label: PropTypes.string,\n\n  /** Adds a loading indicator beside the input */\n  loading: PropTypes.bool,\n\n  /** The [native `max` attribute](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#htmlattrdefmax), for use when `type` is `'number'` */\n  max: PropTypes.string,\n\n  /** The [native `min` attribute](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#htmlattrdefmin), for use when `type` is `'number'` */\n  min: PropTypes.string,\n\n  /** Name associated with the input. Passed to event handler callbacks in object */\n  name: PropTypes.string,\n\n  /** Placeholder text for the input */\n  placeholder: PropTypes.string,\n\n  /** Makes the input read-only */\n  readOnly: PropTypes.bool,\n\n  /** Indicates this input is required */\n  required: PropTypes.bool,\n\n  /** The [native `step` attribute](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#htmlattrdefstep), for use when `type` is `'number'` */\n  step: PropTypes.string,\n  tabIndex: PropTypes.string,\n\n  /** Type of input */\n  type: Input.propTypes.type,\n\n  /** Applies 'valid' appearance for validation feedback. Mutually exclusive with `error` and `warning` props */\n  valid: sharedPropTypes.statusPropType,\n\n  /** Text below input for validation feedback. Receives styles depending on validation status */\n  validationText: PropTypes.string,\n\n  /** Value in the input. Can be used to control the component (recommended). Passed to event handler callbacks in object */\n  value: PropTypes.string,\n\n  /** Applies 'warning' appearance for validation feedback. Mutually exclusive with `valid` and `error` props */\n  warning: sharedPropTypes.statusPropType,\n\n  /** Called with signature `({ name: string, value: string }, event)` */\n  onBlur: PropTypes.func,\n\n  /** Called with signature `({ name: string, value: string }, event)` */\n  onChange: PropTypes.func,\n\n  /** Called with signature `({ name: string, value: string }, event)` */\n  onFocus: PropTypes.func\n};\nexport { InputField };","map":{"version":3,"sources":["/Users/rajabu/.config/yarn/global/node_modules/@dhis2/ui/node_modules/@dhis2/ui-widgets/build/es/InputField/InputField.js"],"names":["sharedPropTypes","Field","Input","Box","PropTypes","React","InputField","Component","render","className","onChange","onFocus","onBlur","initialFocus","type","dense","required","label","disabled","readOnly","placeholder","name","max","min","step","valid","error","warning","loading","value","tabIndex","helpText","validationText","inputWidth","dataTest","props","createElement","width","minWidth","defaultProps","propTypes","string","bool","statusPropType","func"],"mappings":"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","sourcesContent":["import { sharedPropTypes } from '@dhis2/ui-constants';\nimport { Field, Input, Box } from '@dhis2/ui-core';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n/**\n * @module\n * @param {InputField.PropTypes} props\n * @returns {React.Component}\n *\n * @example import { InputField } from '@dhis2/ui-widgets'\n *\n * @see Specification: {@link https://github.com/dhis2/design-system/blob/master/atoms/inputfield.md|Design system}\n * @see Live demo: {@link /demo/?path=/story/inputfield--no-placeholder-no-value|Storybook}\n */\n\nclass InputField extends React.Component {\n  render() {\n    const {\n      className,\n      onChange,\n      onFocus,\n      onBlur,\n      initialFocus,\n      type,\n      dense,\n      required,\n      label,\n      disabled,\n      readOnly,\n      placeholder,\n      name,\n      max,\n      min,\n      step,\n      valid,\n      error,\n      warning,\n      loading,\n      value,\n      tabIndex,\n      helpText,\n      validationText,\n      inputWidth,\n      dataTest\n    } = this.props;\n    return /*#__PURE__*/React.createElement(Field, {\n      className: className,\n      dataTest: dataTest,\n      error: error,\n      warning: warning,\n      valid: valid,\n      helpText: helpText,\n      validationText: validationText,\n      label: label,\n      name: name,\n      disabled: disabled,\n      required: required\n    }, /*#__PURE__*/React.createElement(Box, {\n      width: inputWidth,\n      minWidth: \"72px\"\n    }, /*#__PURE__*/React.createElement(Input, {\n      onFocus: onFocus,\n      onBlur: onBlur,\n      onChange: onChange,\n      name: name,\n      type: type,\n      value: value || '',\n      placeholder: placeholder,\n      disabled: disabled,\n      max: max,\n      min: min,\n      step: step,\n      valid: valid,\n      warning: warning,\n      error: error,\n      loading: loading,\n      dense: dense,\n      tabIndex: tabIndex,\n      initialFocus: initialFocus,\n      readOnly: readOnly\n    })));\n  }\n\n}\n\nInputField.defaultProps = {\n  dataTest: 'dhis2-uiwidgets-inputfield'\n};\n/**\n * @typedef {Object} PropTypes\n * @static\n *\n * @prop {string} name\n * @prop {string} [type=text]\n * @prop {function} [onChange]\n * @prop {function} [onBlur]\n * @prop {function} [onFocus]\n * @prop {string} [label]\n * @prop {string} [className]\n * @prop {string} [placeholder]\n * @prop {string} [value]\n * @prop {string} [tabIndex]\n * @prop {string} [inputWidth]\n *\n * @prop {string} [max] The native `max` attribute\n * @prop {string} [min] The native `min` attribute\n * @prop {string} [step] The native `step` attribute\n *\n * @prop {boolean} [required]\n * @prop {boolean} [disabled]\n * @prop {boolean} [readOnly]\n * @prop {boolean} [dense] - Compact mode\n * @prop {boolean} [initialFocus]\n *\n * @prop {boolean} [valid] - `valid`, `warning`, `error`, and `loading`\n * are mutually exclusive\n * @prop {boolean} [warning]\n * @prop {boolean} [error]\n * @prop {boolean} [loading]\n *\n * @prop {string} [validationText]\n * @prop {string} [helpText]\n * @prop {string} [dataTest]\n */\n\nInputField.propTypes = {\n  className: PropTypes.string,\n  dataTest: PropTypes.string,\n\n  /** Makes the input smaller */\n  dense: PropTypes.bool,\n\n  /** Disables the input */\n  disabled: PropTypes.bool,\n\n  /** Applies 'error' appearance for validation feedback. Mutually exclusive with `valid` and `warning` props */\n  error: sharedPropTypes.statusPropType,\n\n  /** Guiding text for how to use this input */\n  helpText: PropTypes.string,\n\n  /** The input grabs initial focus on the page */\n  initialFocus: PropTypes.bool,\n\n  /** Defines the width of the input. Can be any valid CSS measurement */\n  inputWidth: PropTypes.string,\n\n  /** Label text for the input */\n  label: PropTypes.string,\n\n  /** Adds a loading indicator beside the input */\n  loading: PropTypes.bool,\n\n  /** The [native `max` attribute](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#htmlattrdefmax), for use when `type` is `'number'` */\n  max: PropTypes.string,\n\n  /** The [native `min` attribute](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#htmlattrdefmin), for use when `type` is `'number'` */\n  min: PropTypes.string,\n\n  /** Name associated with the input. Passed to event handler callbacks in object */\n  name: PropTypes.string,\n\n  /** Placeholder text for the input */\n  placeholder: PropTypes.string,\n\n  /** Makes the input read-only */\n  readOnly: PropTypes.bool,\n\n  /** Indicates this input is required */\n  required: PropTypes.bool,\n\n  /** The [native `step` attribute](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#htmlattrdefstep), for use when `type` is `'number'` */\n  step: PropTypes.string,\n  tabIndex: PropTypes.string,\n\n  /** Type of input */\n  type: Input.propTypes.type,\n\n  /** Applies 'valid' appearance for validation feedback. Mutually exclusive with `error` and `warning` props */\n  valid: sharedPropTypes.statusPropType,\n\n  /** Text below input for validation feedback. Receives styles depending on validation status */\n  validationText: PropTypes.string,\n\n  /** Value in the input. Can be used to control the component (recommended). Passed to event handler callbacks in object */\n  value: PropTypes.string,\n\n  /** Applies 'warning' appearance for validation feedback. Mutually exclusive with `valid` and `error` props */\n  warning: sharedPropTypes.statusPropType,\n\n  /** Called with signature `({ name: string, value: string }, event)` */\n  onBlur: PropTypes.func,\n\n  /** Called with signature `({ name: string, value: string }, event)` */\n  onChange: PropTypes.func,\n\n  /** Called with signature `({ name: string, value: string }, event)` */\n  onFocus: PropTypes.func\n};\nexport { InputField };"]},"metadata":{},"sourceType":"module"}