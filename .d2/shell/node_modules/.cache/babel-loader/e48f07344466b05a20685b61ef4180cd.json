{"ast":null,"code":"/**\n * @param {Object} args\n * @param {string[]} args.selected\n * @param {string[]} args.highlightedPickedOptions\n * @param {Function} args.onChange\n * @returns {void}\n */\nexport const moveHighlightedPickedOptionDown = ({\n  selected,\n  highlightedPickedOptions,\n  onChange\n}) => {\n  const optionIndex = selected.findIndex(selectedOption => selectedOption === highlightedPickedOptions[0]); // Can't move down last or non-existing option\n\n  if (optionIndex === -1 || optionIndex > selected.length - 2) return; // swap with next item\n\n  const reordered = [...selected.slice(0, optionIndex), selected[optionIndex + 1], selected[optionIndex], ...selected.slice(optionIndex + 2)];\n  onChange({\n    selected: reordered\n  });\n};","map":{"version":3,"sources":["/Users/rajabu/.config/yarn/global/node_modules/@dhis2/ui/node_modules/@dhis2/ui-widgets/build/es/Transfer/Transfer/moveHighlightedPickedOptionDown.js"],"names":["moveHighlightedPickedOptionDown","selected","highlightedPickedOptions","onChange","optionIndex","findIndex","selectedOption","length","reordered","slice"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMA,+BAA+B,GAAG,CAAC;AAC9CC,EAAAA,QAD8C;AAE9CC,EAAAA,wBAF8C;AAG9CC,EAAAA;AAH8C,CAAD,KAIzC;AACJ,QAAMC,WAAW,GAAGH,QAAQ,CAACI,SAAT,CAAmBC,cAAc,IAAIA,cAAc,KAAKJ,wBAAwB,CAAC,CAAD,CAAhF,CAApB,CADI,CACsG;;AAE1G,MAAIE,WAAW,KAAK,CAAC,CAAjB,IAAsBA,WAAW,GAAGH,QAAQ,CAACM,MAAT,GAAkB,CAA1D,EAA6D,OAHzD,CAGiE;;AAErE,QAAMC,SAAS,GAAG,CAAC,GAAGP,QAAQ,CAACQ,KAAT,CAAe,CAAf,EAAkBL,WAAlB,CAAJ,EAAoCH,QAAQ,CAACG,WAAW,GAAG,CAAf,CAA5C,EAA+DH,QAAQ,CAACG,WAAD,CAAvE,EAAsF,GAAGH,QAAQ,CAACQ,KAAT,CAAeL,WAAW,GAAG,CAA7B,CAAzF,CAAlB;AACAD,EAAAA,QAAQ,CAAC;AACPF,IAAAA,QAAQ,EAAEO;AADH,GAAD,CAAR;AAGD,CAbM","sourcesContent":["/**\n * @param {Object} args\n * @param {string[]} args.selected\n * @param {string[]} args.highlightedPickedOptions\n * @param {Function} args.onChange\n * @returns {void}\n */\nexport const moveHighlightedPickedOptionDown = ({\n  selected,\n  highlightedPickedOptions,\n  onChange\n}) => {\n  const optionIndex = selected.findIndex(selectedOption => selectedOption === highlightedPickedOptions[0]); // Can't move down last or non-existing option\n\n  if (optionIndex === -1 || optionIndex > selected.length - 2) return; // swap with next item\n\n  const reordered = [...selected.slice(0, optionIndex), selected[optionIndex + 1], selected[optionIndex], ...selected.slice(optionIndex + 2)];\n  onChange({\n    selected: reordered\n  });\n};"]},"metadata":{},"sourceType":"module"}