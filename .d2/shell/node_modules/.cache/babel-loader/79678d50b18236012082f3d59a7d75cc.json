{"ast":null,"code":"import React from 'react'; // Check whether an option is valid\n\nexport const checkIfValidOption = option => option && 'props' in option && 'value' in option.props && 'label' in option.props; // Filters all children that won't be rendered from an array of react children\n\nexport const filterIgnored = children => React.Children.toArray(children).filter(child => child !== null && child !== false && child !== undefined); // Find an option in an array of react children\n\nexport const findOptionChild = (value, optionChildren) => React.Children.toArray(optionChildren).find(currentOption => {\n  if (!currentOption.props) {\n    return false;\n  }\n\n  return value === currentOption.props.value;\n}); // Find an option in an array of option objects\n\nexport const findOption = (value, optionArray) => optionArray.find(optionValue => value === optionValue); // Remove a specific option from an array of options\n\nexport const removeOption = (value, optionArray) => optionArray.filter(optionValue => {\n  return optionValue !== value;\n});","map":{"version":3,"sources":["/Users/rajabu/.config/yarn/global/node_modules/@dhis2/ui/node_modules/@dhis2/ui-core/build/es/Select/option-helpers.js"],"names":["React","checkIfValidOption","option","props","filterIgnored","children","Children","toArray","filter","child","undefined","findOptionChild","value","optionChildren","find","currentOption","findOption","optionArray","optionValue","removeOption"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CAA2B;;AAE3B,OAAO,MAAMC,kBAAkB,GAAGC,MAAM,IAAIA,MAAM,IAAI,WAAWA,MAArB,IAA+B,WAAWA,MAAM,CAACC,KAAjD,IAA0D,WAAWD,MAAM,CAACC,KAAjH,C,CAAwH;;AAE/H,OAAO,MAAMC,aAAa,GAAGC,QAAQ,IAAIL,KAAK,CAACM,QAAN,CAAeC,OAAf,CAAuBF,QAAvB,EAAiCG,MAAjC,CAAwCC,KAAK,IAAIA,KAAK,KAAK,IAAV,IAAkBA,KAAK,KAAK,KAA5B,IAAqCA,KAAK,KAAKC,SAAhG,CAAlC,C,CAA8I;;AAErJ,OAAO,MAAMC,eAAe,GAAG,CAACC,KAAD,EAAQC,cAAR,KAA2Bb,KAAK,CAACM,QAAN,CAAeC,OAAf,CAAuBM,cAAvB,EAAuCC,IAAvC,CAA4CC,aAAa,IAAI;AACrH,MAAI,CAACA,aAAa,CAACZ,KAAnB,EAA0B;AACxB,WAAO,KAAP;AACD;;AAED,SAAOS,KAAK,KAAKG,aAAa,CAACZ,KAAd,CAAoBS,KAArC;AACD,CANyD,CAAnD,C,CAMH;;AAEJ,OAAO,MAAMI,UAAU,GAAG,CAACJ,KAAD,EAAQK,WAAR,KAAwBA,WAAW,CAACH,IAAZ,CAAiBI,WAAW,IAAIN,KAAK,KAAKM,WAA1C,CAA3C,C,CAAmG;;AAE1G,OAAO,MAAMC,YAAY,GAAG,CAACP,KAAD,EAAQK,WAAR,KAAwBA,WAAW,CAACT,MAAZ,CAAmBU,WAAW,IAAI;AACpF,SAAOA,WAAW,KAAKN,KAAvB;AACD,CAFmD,CAA7C","sourcesContent":["import React from 'react'; // Check whether an option is valid\n\nexport const checkIfValidOption = option => option && 'props' in option && 'value' in option.props && 'label' in option.props; // Filters all children that won't be rendered from an array of react children\n\nexport const filterIgnored = children => React.Children.toArray(children).filter(child => child !== null && child !== false && child !== undefined); // Find an option in an array of react children\n\nexport const findOptionChild = (value, optionChildren) => React.Children.toArray(optionChildren).find(currentOption => {\n  if (!currentOption.props) {\n    return false;\n  }\n\n  return value === currentOption.props.value;\n}); // Find an option in an array of option objects\n\nexport const findOption = (value, optionArray) => optionArray.find(optionValue => value === optionValue); // Remove a specific option from an array of options\n\nexport const removeOption = (value, optionArray) => optionArray.filter(optionValue => {\n  return optionValue !== value;\n});"]},"metadata":{},"sourceType":"module"}