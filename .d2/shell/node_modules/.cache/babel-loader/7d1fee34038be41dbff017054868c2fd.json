{"ast":null,"code":"import _JSXStyle from \"styled-jsx/style\";\nimport { mutuallyExclusive } from '@dhis2/prop-types';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React, { useRef, useState, useEffect } from 'react';\nimport { Actions, actionsPropType } from './Actions.js';\nimport styles, { ANIMATION_TIME } from './AlertBar.styles.js';\nimport { Dismiss } from './Dismiss.js';\nimport { Icon, iconPropType } from './Icon.js';\nimport { Message } from './Message.js';\n''; // TODO: https://github.com/jsdoc/jsdoc/issues/1718\n\n/**\n * @module\n * @param {AlertBar.PropTypes} props\n *\n * @returns {React.Component}\n *\n * @example import { AlertBar } from @dhis2/ui-core\n *\n * @see Specification: {@link https://github.com/dhis2/design-system/blob/master/molecules/alertbar.md|Design system}\n * @see Live demo: {@link /demo/?path=/story/alertbar--default|Storybook}\n */\n\nconst AlertBar = ({\n  actions,\n  children,\n  className,\n  critical,\n  dataTest,\n  duration,\n  hidden,\n  icon,\n  permanent,\n  success,\n  warning,\n  onHidden\n}) => {\n  const [inViewport, setInViewport] = useState(!hidden);\n  const [inDOM, setInDOM] = useState(!hidden);\n  const showTimeout = useRef(null);\n  const displayTimeout = useRef(null);\n  const hideTimeout = useRef(null);\n  const displayStartTime = useRef(null);\n  const displayTimeRemaining = useRef(null);\n  const info = !critical && !success && !warning;\n  const shouldAutoHide = !(permanent || warning || critical);\n\n  const show = () => {\n    setInDOM(true);\n    setInViewport(true);\n  };\n\n  const hide = () => {\n    setInDOM(true);\n    setInViewport(false);\n  };\n\n  const remove = () => {\n    setInDOM(false);\n    setInViewport(false);\n    onHidden && onHidden({}, null);\n  };\n\n  const clearAllTimeouts = () => {\n    clearTimeout(showTimeout.current);\n    clearTimeout(displayTimeout.current);\n    clearTimeout(hideTimeout.current);\n  };\n\n  const runHideAnimation = () => {\n    clearAllTimeouts();\n    hide();\n    hideTimeout.current = setTimeout(remove, ANIMATION_TIME);\n  };\n\n  const startDisplayTimeout = () => {\n    if (shouldAutoHide) {\n      clearAllTimeouts();\n      displayStartTime.current = Date.now();\n      displayTimeRemaining.current = duration;\n      displayTimeout.current = setTimeout(runHideAnimation, displayTimeRemaining.current);\n    }\n  };\n\n  const runShowAnimation = () => {\n    clearAllTimeouts();\n    show();\n    showTimeout.current = setTimeout(startDisplayTimeout, ANIMATION_TIME);\n  };\n\n  const pauseDisplayTimeout = () => {\n    if (shouldAutoHide) {\n      clearAllTimeouts();\n      const elapsedTime = Date.now() - displayStartTime.current;\n      displayTimeRemaining.current -= elapsedTime;\n    }\n  };\n\n  const resumeDisplayTimeout = () => {\n    if (shouldAutoHide) {\n      clearAllTimeouts();\n      displayTimeout.current = setTimeout(runHideAnimation, displayTimeRemaining.current);\n    }\n  };\n\n  useEffect(() => {\n    // Additional check on inDOM prevents the AlertBar from briefly showing\n    // when it is mounted with a hidden prop set to true\n    if (hidden && inDOM) {\n      runHideAnimation();\n    }\n\n    if (!hidden) {\n      runShowAnimation();\n    }\n\n    return clearAllTimeouts;\n  }, [hidden]);\n  return !inDOM ? null : /*#__PURE__*/React.createElement(\"div\", {\n    \"data-test\": dataTest,\n    onMouseEnter: pauseDisplayTimeout,\n    onMouseLeave: resumeDisplayTimeout,\n    className: \"jsx-\".concat(styles.__hash) + \" \" + (cx(className, {\n      info,\n      success,\n      warning,\n      critical,\n      inViewport\n    }) || \"\")\n  }, /*#__PURE__*/React.createElement(Icon, {\n    dataTest: \"\".concat(dataTest, \"-icon\"),\n    icon: icon,\n    critical: critical,\n    success: success,\n    warning: warning,\n    info: info\n  }), /*#__PURE__*/React.createElement(Message, null, children), /*#__PURE__*/React.createElement(Actions, {\n    actions: actions,\n    hide: runHideAnimation,\n    dataTest: dataTest\n  }), /*#__PURE__*/React.createElement(Dismiss, {\n    onClick: runHideAnimation,\n    dataTest: \"\".concat(dataTest, \"-dismiss\")\n  }), /*#__PURE__*/React.createElement(_JSXStyle, {\n    id: styles.__hash\n  }, styles));\n};\n\nconst alertTypePropType = mutuallyExclusive(['success', 'warning', 'critical'], PropTypes.bool);\nAlertBar.defaultProps = {\n  duration: 8000,\n  dataTest: 'dhis2-uicore-alertbar',\n  icon: true\n};\n/**\n * @typedef {Object} PropTypes\n * @static\n *\n * @prop {string} [children] - The message string for the alert\n * @prop {string} [className]\n * @prop {boolean} [success] - `success`, `warning`, and `critical` are\n * mutually exclusive props.\n * @prop {boolean} [warning] - `AlertBar`s with `warning` will not autohide\n * @prop {boolean} [critical] - `AlertBar`s with `critical` will not autohide\n *\n * @prop {(Element|boolean)} [icon=true]\n *\n * @prop {number} [duration]\n * @prop {bool} [hidden]\n * @prop {boolean} [permanent]\n * @prop {Array} [actions] An array of 0-2 action objects with the shape: `{ label: {string}, onClick: {function} }`\n * @prop {function} [onHidden]\n * @prop {string} [dataTest]\n */\n\nAlertBar.propTypes = {\n  /** An array of 0-2 action objects */\n  actions: actionsPropType,\n\n  /** The message string for the alert */\n  children: PropTypes.string,\n  className: PropTypes.string,\n\n  /** Alert bars with `critical` will not autohide */\n  critical: alertTypePropType,\n  dataTest: PropTypes.string,\n  duration: PropTypes.number,\n  hidden: PropTypes.bool,\n\n  /**\n   * A specific icon to override the default icon in the bar.\n   * If `false` is provided, no icon will be shown.\n   */\n  icon: iconPropType,\n  permanent: PropTypes.bool,\n  success: alertTypePropType,\n\n  /** Alert bars with `warning` will not autohide */\n  warning: alertTypePropType,\n  onHidden: PropTypes.func\n};\nexport { AlertBar };","map":{"version":3,"sources":["/Users/rajabu/.config/yarn/global/node_modules/@dhis2/ui/node_modules/@dhis2/ui-core/build/es/AlertBar/AlertBar.js"],"names":["_JSXStyle","mutuallyExclusive","cx","PropTypes","React","useRef","useState","useEffect","Actions","actionsPropType","styles","ANIMATION_TIME","Dismiss","Icon","iconPropType","Message","AlertBar","actions","children","className","critical","dataTest","duration","hidden","icon","permanent","success","warning","onHidden","inViewport","setInViewport","inDOM","setInDOM","showTimeout","displayTimeout","hideTimeout","displayStartTime","displayTimeRemaining","info","shouldAutoHide","show","hide","remove","clearAllTimeouts","clearTimeout","current","runHideAnimation","setTimeout","startDisplayTimeout","Date","now","runShowAnimation","pauseDisplayTimeout","elapsedTime","resumeDisplayTimeout","createElement","onMouseEnter","onMouseLeave","concat","__hash","onClick","id","alertTypePropType","bool","defaultProps","propTypes","string","number","func"],"mappings":"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","sourcesContent":["import _JSXStyle from \"styled-jsx/style\";\nimport { mutuallyExclusive } from '@dhis2/prop-types';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React, { useRef, useState, useEffect } from 'react';\nimport { Actions, actionsPropType } from './Actions.js';\nimport styles, { ANIMATION_TIME } from './AlertBar.styles.js';\nimport { Dismiss } from './Dismiss.js';\nimport { Icon, iconPropType } from './Icon.js';\nimport { Message } from './Message.js';\n''; // TODO: https://github.com/jsdoc/jsdoc/issues/1718\n\n/**\n * @module\n * @param {AlertBar.PropTypes} props\n *\n * @returns {React.Component}\n *\n * @example import { AlertBar } from @dhis2/ui-core\n *\n * @see Specification: {@link https://github.com/dhis2/design-system/blob/master/molecules/alertbar.md|Design system}\n * @see Live demo: {@link /demo/?path=/story/alertbar--default|Storybook}\n */\n\nconst AlertBar = ({\n  actions,\n  children,\n  className,\n  critical,\n  dataTest,\n  duration,\n  hidden,\n  icon,\n  permanent,\n  success,\n  warning,\n  onHidden\n}) => {\n  const [inViewport, setInViewport] = useState(!hidden);\n  const [inDOM, setInDOM] = useState(!hidden);\n  const showTimeout = useRef(null);\n  const displayTimeout = useRef(null);\n  const hideTimeout = useRef(null);\n  const displayStartTime = useRef(null);\n  const displayTimeRemaining = useRef(null);\n  const info = !critical && !success && !warning;\n  const shouldAutoHide = !(permanent || warning || critical);\n\n  const show = () => {\n    setInDOM(true);\n    setInViewport(true);\n  };\n\n  const hide = () => {\n    setInDOM(true);\n    setInViewport(false);\n  };\n\n  const remove = () => {\n    setInDOM(false);\n    setInViewport(false);\n    onHidden && onHidden({}, null);\n  };\n\n  const clearAllTimeouts = () => {\n    clearTimeout(showTimeout.current);\n    clearTimeout(displayTimeout.current);\n    clearTimeout(hideTimeout.current);\n  };\n\n  const runHideAnimation = () => {\n    clearAllTimeouts();\n    hide();\n    hideTimeout.current = setTimeout(remove, ANIMATION_TIME);\n  };\n\n  const startDisplayTimeout = () => {\n    if (shouldAutoHide) {\n      clearAllTimeouts();\n      displayStartTime.current = Date.now();\n      displayTimeRemaining.current = duration;\n      displayTimeout.current = setTimeout(runHideAnimation, displayTimeRemaining.current);\n    }\n  };\n\n  const runShowAnimation = () => {\n    clearAllTimeouts();\n    show();\n    showTimeout.current = setTimeout(startDisplayTimeout, ANIMATION_TIME);\n  };\n\n  const pauseDisplayTimeout = () => {\n    if (shouldAutoHide) {\n      clearAllTimeouts();\n      const elapsedTime = Date.now() - displayStartTime.current;\n      displayTimeRemaining.current -= elapsedTime;\n    }\n  };\n\n  const resumeDisplayTimeout = () => {\n    if (shouldAutoHide) {\n      clearAllTimeouts();\n      displayTimeout.current = setTimeout(runHideAnimation, displayTimeRemaining.current);\n    }\n  };\n\n  useEffect(() => {\n    // Additional check on inDOM prevents the AlertBar from briefly showing\n    // when it is mounted with a hidden prop set to true\n    if (hidden && inDOM) {\n      runHideAnimation();\n    }\n\n    if (!hidden) {\n      runShowAnimation();\n    }\n\n    return clearAllTimeouts;\n  }, [hidden]);\n  return !inDOM ? null : /*#__PURE__*/React.createElement(\"div\", {\n    \"data-test\": dataTest,\n    onMouseEnter: pauseDisplayTimeout,\n    onMouseLeave: resumeDisplayTimeout,\n    className: \"jsx-\".concat(styles.__hash) + \" \" + (cx(className, {\n      info,\n      success,\n      warning,\n      critical,\n      inViewport\n    }) || \"\")\n  }, /*#__PURE__*/React.createElement(Icon, {\n    dataTest: \"\".concat(dataTest, \"-icon\"),\n    icon: icon,\n    critical: critical,\n    success: success,\n    warning: warning,\n    info: info\n  }), /*#__PURE__*/React.createElement(Message, null, children), /*#__PURE__*/React.createElement(Actions, {\n    actions: actions,\n    hide: runHideAnimation,\n    dataTest: dataTest\n  }), /*#__PURE__*/React.createElement(Dismiss, {\n    onClick: runHideAnimation,\n    dataTest: \"\".concat(dataTest, \"-dismiss\")\n  }), /*#__PURE__*/React.createElement(_JSXStyle, {\n    id: styles.__hash\n  }, styles));\n};\n\nconst alertTypePropType = mutuallyExclusive(['success', 'warning', 'critical'], PropTypes.bool);\nAlertBar.defaultProps = {\n  duration: 8000,\n  dataTest: 'dhis2-uicore-alertbar',\n  icon: true\n};\n/**\n * @typedef {Object} PropTypes\n * @static\n *\n * @prop {string} [children] - The message string for the alert\n * @prop {string} [className]\n * @prop {boolean} [success] - `success`, `warning`, and `critical` are\n * mutually exclusive props.\n * @prop {boolean} [warning] - `AlertBar`s with `warning` will not autohide\n * @prop {boolean} [critical] - `AlertBar`s with `critical` will not autohide\n *\n * @prop {(Element|boolean)} [icon=true]\n *\n * @prop {number} [duration]\n * @prop {bool} [hidden]\n * @prop {boolean} [permanent]\n * @prop {Array} [actions] An array of 0-2 action objects with the shape: `{ label: {string}, onClick: {function} }`\n * @prop {function} [onHidden]\n * @prop {string} [dataTest]\n */\n\nAlertBar.propTypes = {\n  /** An array of 0-2 action objects */\n  actions: actionsPropType,\n\n  /** The message string for the alert */\n  children: PropTypes.string,\n  className: PropTypes.string,\n\n  /** Alert bars with `critical` will not autohide */\n  critical: alertTypePropType,\n  dataTest: PropTypes.string,\n  duration: PropTypes.number,\n  hidden: PropTypes.bool,\n\n  /**\n   * A specific icon to override the default icon in the bar.\n   * If `false` is provided, no icon will be shown.\n   */\n  icon: iconPropType,\n  permanent: PropTypes.bool,\n  success: alertTypePropType,\n\n  /** Alert bars with `warning` will not autohide */\n  warning: alertTypePropType,\n  onHidden: PropTypes.func\n};\nexport { AlertBar };"]},"metadata":{},"sourceType":"module"}