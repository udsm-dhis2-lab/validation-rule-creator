{"ast":null,"code":"import { sharedPropTypes } from '@dhis2/ui-constants';\nimport { Field, Switch, Required } from '@dhis2/ui-core';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nconst AddRequired = ({\n  label,\n  required,\n  dataTest\n}) => /*#__PURE__*/React.createElement(React.Fragment, null, label, required && /*#__PURE__*/React.createElement(Required, {\n  dataTest: \"\".concat(dataTest, \"-required\")\n}));\n\nAddRequired.propTypes = {\n  dataTest: PropTypes.string,\n  label: PropTypes.node,\n  required: PropTypes.bool\n};\n/**\n * @module\n * @param {SwitchField.PropTypes} props\n * @returns {React.Component}\n *\n * @example import { SwitchField } from '@dhis2/ui-widgets'\n *\n * @see Specification: {@link https://github.com/dhis2/design-system/blob/master/atoms/switch.md|Design system}\n * @see Live demo: {@link /demo/?path=/story/switchfield--default|Storybook}\n */\n\nconst SwitchField = ({\n  value,\n  label,\n  name,\n  className,\n  tabIndex,\n  onChange,\n  onFocus,\n  onBlur,\n  checked,\n  disabled,\n  valid,\n  warning,\n  error,\n  dense,\n  initialFocus,\n  required,\n  helpText,\n  validationText,\n  dataTest\n}) => /*#__PURE__*/React.createElement(Field, {\n  className: className,\n  dataTest: dataTest,\n  helpText: helpText,\n  validationText: validationText,\n  error: error,\n  warning: warning,\n  valid: valid,\n  required: required,\n  name: name,\n  disabled: disabled\n}, /*#__PURE__*/React.createElement(Switch, {\n  value: value,\n  label: /*#__PURE__*/React.createElement(AddRequired, {\n    label: label,\n    required: required,\n    dataTest: dataTest\n  }),\n  name: name,\n  tabIndex: tabIndex,\n  onChange: onChange,\n  onFocus: onFocus,\n  onBlur: onBlur,\n  checked: checked,\n  disabled: disabled,\n  valid: valid,\n  warning: warning,\n  error: error,\n  dense: dense,\n  initialFocus: initialFocus\n}));\n\nSwitchField.defaultProps = {\n  dataTest: 'dhis2-uiwidgets-switchfield'\n};\n/**\n * @typedef {Object} PropTypes\n * @static\n * @prop {string} value\n * @prop {string} [label]\n *\n * @prop {string} [name]\n * @prop {string} [className]\n * @prop {string} [tabIndex]\n *\n * @prop {function} [onChange]\n * @prop {function} [onFocus]\n * @prop {function} [onBlur]\n *\n * @prop {boolean} [checked]\n * @prop {boolean} [disabled]\n *\n * @prop {boolean} [valid] - `valid`, `warning`, and `error` are\n * mutually exclusive\n * @prop {boolean} [warning]\n * @prop {boolean} [error]\n *\n * @prop {boolean} [dense]\n * @prop {boolean} [initialFocus]\n * @prop {boolean} [required]\n * @prop {string} [helpText]\n * @prop {string} [validationText]\n * @prop {string} [dataTest]\n */\n\nSwitchField.propTypes = {\n  checked: PropTypes.bool,\n  className: PropTypes.string,\n  dataTest: PropTypes.string,\n\n  /** Smaller dimensions for information-dense layouts */\n  dense: PropTypes.bool,\n\n  /** Disables the switch */\n  disabled: PropTypes.bool,\n\n  /** Applies 'error' styling to switch and validation text for feedback. Mutually exclusive with `warning` and `valid` props */\n  error: sharedPropTypes.statusPropType,\n\n  /** Useful instructions for the user */\n  helpText: PropTypes.string,\n  initialFocus: PropTypes.bool,\n\n  /** Labels the switch */\n  label: PropTypes.node,\n\n  /** Name associate with the switch. Passed in object as argument to event handlers */\n  name: PropTypes.string,\n\n  /** Adds an asterisk to indicate this field is required */\n  required: PropTypes.bool,\n  tabIndex: PropTypes.string,\n\n  /** Applies 'valid' styling to switch and validation text for feedback. Mutually exclusive with `warning` and `error` props */\n  valid: sharedPropTypes.statusPropType,\n\n  /** Adds text below the switch to provide validation feedback. Acquires styles from `valid`, `warning` and `error` statuses */\n  validationText: PropTypes.string,\n\n  /** Value associated with the switch. Passed in object as argument to event handlers */\n  value: PropTypes.string,\n\n  /** Applies 'warning' styling to switch and validation text for feedback. Mutually exclusive with `valid` and `error` props */\n  warning: sharedPropTypes.statusPropType,\n\n  /** Called with signature ({ name: string, value: string, checked: bool }, event) */\n  onBlur: PropTypes.func,\n\n  /** Called with signature ({ name: string, value: string, checked: bool }, event) */\n  onChange: PropTypes.func,\n\n  /** Called with signature ({ name: string, value: string, checked: bool }, event) */\n  onFocus: PropTypes.func\n};\nexport { SwitchField };","map":{"version":3,"sources":["/Users/rajabu/.config/yarn/global/node_modules/@dhis2/ui/node_modules/@dhis2/ui-widgets/build/es/SwitchField/SwitchField.js"],"names":["sharedPropTypes","Field","Switch","Required","PropTypes","React","AddRequired","label","required","dataTest","createElement","Fragment","concat","propTypes","string","node","bool","SwitchField","value","name","className","tabIndex","onChange","onFocus","onBlur","checked","disabled","valid","warning","error","dense","initialFocus","helpText","validationText","defaultProps","statusPropType","func"],"mappings":"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","sourcesContent":["import { sharedPropTypes } from '@dhis2/ui-constants';\nimport { Field, Switch, Required } from '@dhis2/ui-core';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nconst AddRequired = ({\n  label,\n  required,\n  dataTest\n}) => /*#__PURE__*/React.createElement(React.Fragment, null, label, required && /*#__PURE__*/React.createElement(Required, {\n  dataTest: \"\".concat(dataTest, \"-required\")\n}));\n\nAddRequired.propTypes = {\n  dataTest: PropTypes.string,\n  label: PropTypes.node,\n  required: PropTypes.bool\n};\n/**\n * @module\n * @param {SwitchField.PropTypes} props\n * @returns {React.Component}\n *\n * @example import { SwitchField } from '@dhis2/ui-widgets'\n *\n * @see Specification: {@link https://github.com/dhis2/design-system/blob/master/atoms/switch.md|Design system}\n * @see Live demo: {@link /demo/?path=/story/switchfield--default|Storybook}\n */\n\nconst SwitchField = ({\n  value,\n  label,\n  name,\n  className,\n  tabIndex,\n  onChange,\n  onFocus,\n  onBlur,\n  checked,\n  disabled,\n  valid,\n  warning,\n  error,\n  dense,\n  initialFocus,\n  required,\n  helpText,\n  validationText,\n  dataTest\n}) => /*#__PURE__*/React.createElement(Field, {\n  className: className,\n  dataTest: dataTest,\n  helpText: helpText,\n  validationText: validationText,\n  error: error,\n  warning: warning,\n  valid: valid,\n  required: required,\n  name: name,\n  disabled: disabled\n}, /*#__PURE__*/React.createElement(Switch, {\n  value: value,\n  label: /*#__PURE__*/React.createElement(AddRequired, {\n    label: label,\n    required: required,\n    dataTest: dataTest\n  }),\n  name: name,\n  tabIndex: tabIndex,\n  onChange: onChange,\n  onFocus: onFocus,\n  onBlur: onBlur,\n  checked: checked,\n  disabled: disabled,\n  valid: valid,\n  warning: warning,\n  error: error,\n  dense: dense,\n  initialFocus: initialFocus\n}));\n\nSwitchField.defaultProps = {\n  dataTest: 'dhis2-uiwidgets-switchfield'\n};\n/**\n * @typedef {Object} PropTypes\n * @static\n * @prop {string} value\n * @prop {string} [label]\n *\n * @prop {string} [name]\n * @prop {string} [className]\n * @prop {string} [tabIndex]\n *\n * @prop {function} [onChange]\n * @prop {function} [onFocus]\n * @prop {function} [onBlur]\n *\n * @prop {boolean} [checked]\n * @prop {boolean} [disabled]\n *\n * @prop {boolean} [valid] - `valid`, `warning`, and `error` are\n * mutually exclusive\n * @prop {boolean} [warning]\n * @prop {boolean} [error]\n *\n * @prop {boolean} [dense]\n * @prop {boolean} [initialFocus]\n * @prop {boolean} [required]\n * @prop {string} [helpText]\n * @prop {string} [validationText]\n * @prop {string} [dataTest]\n */\n\nSwitchField.propTypes = {\n  checked: PropTypes.bool,\n  className: PropTypes.string,\n  dataTest: PropTypes.string,\n\n  /** Smaller dimensions for information-dense layouts */\n  dense: PropTypes.bool,\n\n  /** Disables the switch */\n  disabled: PropTypes.bool,\n\n  /** Applies 'error' styling to switch and validation text for feedback. Mutually exclusive with `warning` and `valid` props */\n  error: sharedPropTypes.statusPropType,\n\n  /** Useful instructions for the user */\n  helpText: PropTypes.string,\n  initialFocus: PropTypes.bool,\n\n  /** Labels the switch */\n  label: PropTypes.node,\n\n  /** Name associate with the switch. Passed in object as argument to event handlers */\n  name: PropTypes.string,\n\n  /** Adds an asterisk to indicate this field is required */\n  required: PropTypes.bool,\n  tabIndex: PropTypes.string,\n\n  /** Applies 'valid' styling to switch and validation text for feedback. Mutually exclusive with `warning` and `error` props */\n  valid: sharedPropTypes.statusPropType,\n\n  /** Adds text below the switch to provide validation feedback. Acquires styles from `valid`, `warning` and `error` statuses */\n  validationText: PropTypes.string,\n\n  /** Value associated with the switch. Passed in object as argument to event handlers */\n  value: PropTypes.string,\n\n  /** Applies 'warning' styling to switch and validation text for feedback. Mutually exclusive with `valid` and `error` props */\n  warning: sharedPropTypes.statusPropType,\n\n  /** Called with signature ({ name: string, value: string, checked: bool }, event) */\n  onBlur: PropTypes.func,\n\n  /** Called with signature ({ name: string, value: string, checked: bool }, event) */\n  onChange: PropTypes.func,\n\n  /** Called with signature ({ name: string, value: string, checked: bool }, event) */\n  onFocus: PropTypes.func\n};\nexport { SwitchField };"]},"metadata":{},"sourceType":"module"}