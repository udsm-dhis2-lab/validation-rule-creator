{"ast":null,"code":"const DURATION = 250;\nconst SCROLL_STEP = 0.5;\nexport function animatedSideScroll(scrollBox, callback, goBackwards = false) {\n  const startValue = scrollBox.scrollLeft;\n  const endValue = getEndValue(scrollBox, startValue, goBackwards);\n  const change = endValue - startValue;\n  const step = createFrameStepper({\n    scrollBox,\n    callback,\n    startValue,\n    endValue,\n    change\n  });\n  window.requestAnimationFrame(step);\n}\n\nfunction getEndValue(scrollBox, startValue, goBackwards) {\n  const scrollDistance = scrollBox.clientWidth * SCROLL_STEP;\n  const inverter = goBackwards ? -1 : 1;\n  return Math.floor(startValue + scrollDistance * inverter);\n}\n\nfunction createFrameStepper({\n  scrollBox,\n  callback,\n  startValue,\n  endValue,\n  change\n}) {\n  let startTimestamp, elapsedTime, scrollValue;\n  return function step(timestamp) {\n    if (!startTimestamp) {\n      startTimestamp = timestamp;\n    }\n\n    elapsedTime = timestamp - startTimestamp;\n    scrollValue = easeInOutQuad({\n      currentTime: elapsedTime,\n      DURATION,\n      startValue,\n      change\n    });\n\n    if (elapsedTime >= DURATION) {\n      if (scrollValue !== endValue) {\n        scrollBox.scrollLeft = endValue;\n      }\n\n      callback && callback();\n    } else {\n      scrollBox.scrollLeft = scrollValue;\n      window.requestAnimationFrame(step);\n    }\n  };\n}\n\nfunction easeInOutQuad({\n  currentTime,\n  startValue,\n  change\n}) {\n  return (currentTime /= DURATION / 2) < 1 ? change / 2 * currentTime * currentTime + startValue : -change / 2 * (--currentTime * (currentTime - 2) - 1) + startValue;\n}","map":{"version":3,"sources":["/Users/rajabu/.config/yarn/global/node_modules/@dhis2/ui/node_modules/@dhis2/ui-core/build/es/TabBar/animatedSideScroll.js"],"names":["DURATION","SCROLL_STEP","animatedSideScroll","scrollBox","callback","goBackwards","startValue","scrollLeft","endValue","getEndValue","change","step","createFrameStepper","window","requestAnimationFrame","scrollDistance","clientWidth","inverter","Math","floor","startTimestamp","elapsedTime","scrollValue","timestamp","easeInOutQuad","currentTime"],"mappings":"AAAA,MAAMA,QAAQ,GAAG,GAAjB;AACA,MAAMC,WAAW,GAAG,GAApB;AACA,OAAO,SAASC,kBAAT,CAA4BC,SAA5B,EAAuCC,QAAvC,EAAiDC,WAAW,GAAG,KAA/D,EAAsE;AAC3E,QAAMC,UAAU,GAAGH,SAAS,CAACI,UAA7B;AACA,QAAMC,QAAQ,GAAGC,WAAW,CAACN,SAAD,EAAYG,UAAZ,EAAwBD,WAAxB,CAA5B;AACA,QAAMK,MAAM,GAAGF,QAAQ,GAAGF,UAA1B;AACA,QAAMK,IAAI,GAAGC,kBAAkB,CAAC;AAC9BT,IAAAA,SAD8B;AAE9BC,IAAAA,QAF8B;AAG9BE,IAAAA,UAH8B;AAI9BE,IAAAA,QAJ8B;AAK9BE,IAAAA;AAL8B,GAAD,CAA/B;AAOAG,EAAAA,MAAM,CAACC,qBAAP,CAA6BH,IAA7B;AACD;;AAED,SAASF,WAAT,CAAqBN,SAArB,EAAgCG,UAAhC,EAA4CD,WAA5C,EAAyD;AACvD,QAAMU,cAAc,GAAGZ,SAAS,CAACa,WAAV,GAAwBf,WAA/C;AACA,QAAMgB,QAAQ,GAAGZ,WAAW,GAAG,CAAC,CAAJ,GAAQ,CAApC;AACA,SAAOa,IAAI,CAACC,KAAL,CAAWb,UAAU,GAAGS,cAAc,GAAGE,QAAzC,CAAP;AACD;;AAED,SAASL,kBAAT,CAA4B;AAC1BT,EAAAA,SAD0B;AAE1BC,EAAAA,QAF0B;AAG1BE,EAAAA,UAH0B;AAI1BE,EAAAA,QAJ0B;AAK1BE,EAAAA;AAL0B,CAA5B,EAMG;AACD,MAAIU,cAAJ,EAAoBC,WAApB,EAAiCC,WAAjC;AACA,SAAO,SAASX,IAAT,CAAcY,SAAd,EAAyB;AAC9B,QAAI,CAACH,cAAL,EAAqB;AACnBA,MAAAA,cAAc,GAAGG,SAAjB;AACD;;AAEDF,IAAAA,WAAW,GAAGE,SAAS,GAAGH,cAA1B;AACAE,IAAAA,WAAW,GAAGE,aAAa,CAAC;AAC1BC,MAAAA,WAAW,EAAEJ,WADa;AAE1BrB,MAAAA,QAF0B;AAG1BM,MAAAA,UAH0B;AAI1BI,MAAAA;AAJ0B,KAAD,CAA3B;;AAOA,QAAIW,WAAW,IAAIrB,QAAnB,EAA6B;AAC3B,UAAIsB,WAAW,KAAKd,QAApB,EAA8B;AAC5BL,QAAAA,SAAS,CAACI,UAAV,GAAuBC,QAAvB;AACD;;AAEDJ,MAAAA,QAAQ,IAAIA,QAAQ,EAApB;AACD,KAND,MAMO;AACLD,MAAAA,SAAS,CAACI,UAAV,GAAuBe,WAAvB;AACAT,MAAAA,MAAM,CAACC,qBAAP,CAA6BH,IAA7B;AACD;AACF,GAvBD;AAwBD;;AAED,SAASa,aAAT,CAAuB;AACrBC,EAAAA,WADqB;AAErBnB,EAAAA,UAFqB;AAGrBI,EAAAA;AAHqB,CAAvB,EAIG;AACD,SAAO,CAACe,WAAW,IAAIzB,QAAQ,GAAG,CAA3B,IAAgC,CAAhC,GAAoCU,MAAM,GAAG,CAAT,GAAae,WAAb,GAA2BA,WAA3B,GAAyCnB,UAA7E,GAA0F,CAACI,MAAD,GAAU,CAAV,IAAe,EAAEe,WAAF,IAAiBA,WAAW,GAAG,CAA/B,IAAoC,CAAnD,IAAwDnB,UAAzJ;AACD","sourcesContent":["const DURATION = 250;\nconst SCROLL_STEP = 0.5;\nexport function animatedSideScroll(scrollBox, callback, goBackwards = false) {\n  const startValue = scrollBox.scrollLeft;\n  const endValue = getEndValue(scrollBox, startValue, goBackwards);\n  const change = endValue - startValue;\n  const step = createFrameStepper({\n    scrollBox,\n    callback,\n    startValue,\n    endValue,\n    change\n  });\n  window.requestAnimationFrame(step);\n}\n\nfunction getEndValue(scrollBox, startValue, goBackwards) {\n  const scrollDistance = scrollBox.clientWidth * SCROLL_STEP;\n  const inverter = goBackwards ? -1 : 1;\n  return Math.floor(startValue + scrollDistance * inverter);\n}\n\nfunction createFrameStepper({\n  scrollBox,\n  callback,\n  startValue,\n  endValue,\n  change\n}) {\n  let startTimestamp, elapsedTime, scrollValue;\n  return function step(timestamp) {\n    if (!startTimestamp) {\n      startTimestamp = timestamp;\n    }\n\n    elapsedTime = timestamp - startTimestamp;\n    scrollValue = easeInOutQuad({\n      currentTime: elapsedTime,\n      DURATION,\n      startValue,\n      change\n    });\n\n    if (elapsedTime >= DURATION) {\n      if (scrollValue !== endValue) {\n        scrollBox.scrollLeft = endValue;\n      }\n\n      callback && callback();\n    } else {\n      scrollBox.scrollLeft = scrollValue;\n      window.requestAnimationFrame(step);\n    }\n  };\n}\n\nfunction easeInOutQuad({\n  currentTime,\n  startValue,\n  change\n}) {\n  return (currentTime /= DURATION / 2) < 1 ? change / 2 * currentTime * currentTime + startValue : -change / 2 * (--currentTime * (currentTime - 2) - 1) + startValue;\n}"]},"metadata":{},"sourceType":"module"}