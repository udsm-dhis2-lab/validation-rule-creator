{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport { FileListItem } from '@dhis2/ui-core';\nimport { FileInputField } from '@dhis2/ui-widgets';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport i18n from '../locales/index.js';\nimport { hasError, isValid, getValidationText } from '../shared/helpers.js';\nimport { inputPropType, metaPropType } from '../shared/propTypes.js';\nconst btnLabel = i18n.t('Upload file');\nconst btnLabelMulti = i18n.t('Upload files');\n\nconst dedupeAndConcat = (currentFiles, newFileList) => {\n  return [...currentFiles, ...newFileList].reduceRight((acc, file) => {\n    if (!acc.unique.has(file.name)) {\n      acc.unique.add(file.name);\n      acc.files.unshift(file);\n    }\n\n    return acc;\n  }, {\n    files: [],\n    unique: new Set()\n  }).files;\n};\n\nconst createChangeHandler = (input, multifile) => ({\n  files\n}) => {\n  // A JavaScript FileList instance is read-only, so we cannot add files to it\n  // FileList also doesn't have a .map method so by destructuring the FileList\n  // instance into an array we can add, remove and map\n  const currentFiles = Array.isArray(input.value) ? input.value : [];\n  const value = multifile ? dedupeAndConcat(currentFiles, files) : [...files];\n  input.onChange(value);\n};\n\nconst createRemoveHandler = (input, fileToDelete) => () => {\n  const files = input.value.filter(file => file !== fileToDelete);\n  const value = files.length > 0 ? files : '';\n  input.onChange(value);\n};\n\nexport const FileInputFieldFF = ({\n  buttonLabel,\n  disabled,\n  error,\n  input,\n  meta,\n  multifile,\n  showValidStatus,\n  valid,\n  validationText,\n  ...rest\n}) => {\n  const files = input.value || [];\n  return /*#__PURE__*/React.createElement(FileInputField, _extends({}, rest, {\n    onChange: createChangeHandler(input, multifile),\n    buttonLabel: buttonLabel || (multifile ? btnLabelMulti : btnLabel),\n    disabled: disabled || !multifile && files.length >= 1,\n    multiple: multifile,\n    name: input.name,\n    error: hasError(meta, error),\n    valid: isValid(meta, valid, showValidStatus),\n    validationText: getValidationText(meta, validationText, error)\n  }), files.map(file => /*#__PURE__*/React.createElement(FileListItem, {\n    key: file.name,\n    label: file.name,\n    onRemove: createRemoveHandler(input, file),\n    removeText: i18n.t('Remove')\n  })));\n};\nFileInputFieldFF.defaultProps = {\n  placeholder: i18n.t('No file(s) selected yet')\n};\nFileInputFieldFF.propTypes = {\n  /** `input` props provided by Final Form `Field` */\n  input: inputPropType.isRequired,\n\n  /** `meta` props provided by Final Form `Field` */\n  meta: metaPropType.isRequired,\n  buttonLabel: PropTypes.string,\n  disabled: PropTypes.bool,\n  error: PropTypes.bool,\n  multifile: PropTypes.bool,\n  showValidStatus: PropTypes.bool,\n  valid: PropTypes.bool,\n  validationText: PropTypes.string,\n  value: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.instanceOf(File)), PropTypes.oneOf([''])])\n};","map":{"version":3,"sources":["/Users/rajabu/.config/yarn/global/node_modules/@dhis2/ui/node_modules/@dhis2/ui-forms/build/es/FileInputFieldFF/FileInputFieldFF.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","FileListItem","FileInputField","PropTypes","React","i18n","hasError","isValid","getValidationText","inputPropType","metaPropType","btnLabel","t","btnLabelMulti","dedupeAndConcat","currentFiles","newFileList","reduceRight","acc","file","unique","has","name","add","files","unshift","Set","createChangeHandler","input","multifile","Array","isArray","value","onChange","createRemoveHandler","fileToDelete","filter","FileInputFieldFF","buttonLabel","disabled","error","meta","showValidStatus","valid","validationText","rest","createElement","multiple","map","label","onRemove","removeText","defaultProps","placeholder","propTypes","isRequired","string","bool","oneOfType","arrayOf","instanceOf","File","oneOf"],"mappings":"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","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport { FileListItem } from '@dhis2/ui-core';\nimport { FileInputField } from '@dhis2/ui-widgets';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport i18n from '../locales/index.js';\nimport { hasError, isValid, getValidationText } from '../shared/helpers.js';\nimport { inputPropType, metaPropType } from '../shared/propTypes.js';\nconst btnLabel = i18n.t('Upload file');\nconst btnLabelMulti = i18n.t('Upload files');\n\nconst dedupeAndConcat = (currentFiles, newFileList) => {\n  return [...currentFiles, ...newFileList].reduceRight((acc, file) => {\n    if (!acc.unique.has(file.name)) {\n      acc.unique.add(file.name);\n      acc.files.unshift(file);\n    }\n\n    return acc;\n  }, {\n    files: [],\n    unique: new Set()\n  }).files;\n};\n\nconst createChangeHandler = (input, multifile) => ({\n  files\n}) => {\n  // A JavaScript FileList instance is read-only, so we cannot add files to it\n  // FileList also doesn't have a .map method so by destructuring the FileList\n  // instance into an array we can add, remove and map\n  const currentFiles = Array.isArray(input.value) ? input.value : [];\n  const value = multifile ? dedupeAndConcat(currentFiles, files) : [...files];\n  input.onChange(value);\n};\n\nconst createRemoveHandler = (input, fileToDelete) => () => {\n  const files = input.value.filter(file => file !== fileToDelete);\n  const value = files.length > 0 ? files : '';\n  input.onChange(value);\n};\n\nexport const FileInputFieldFF = ({\n  buttonLabel,\n  disabled,\n  error,\n  input,\n  meta,\n  multifile,\n  showValidStatus,\n  valid,\n  validationText,\n  ...rest\n}) => {\n  const files = input.value || [];\n  return /*#__PURE__*/React.createElement(FileInputField, _extends({}, rest, {\n    onChange: createChangeHandler(input, multifile),\n    buttonLabel: buttonLabel || (multifile ? btnLabelMulti : btnLabel),\n    disabled: disabled || !multifile && files.length >= 1,\n    multiple: multifile,\n    name: input.name,\n    error: hasError(meta, error),\n    valid: isValid(meta, valid, showValidStatus),\n    validationText: getValidationText(meta, validationText, error)\n  }), files.map(file => /*#__PURE__*/React.createElement(FileListItem, {\n    key: file.name,\n    label: file.name,\n    onRemove: createRemoveHandler(input, file),\n    removeText: i18n.t('Remove')\n  })));\n};\nFileInputFieldFF.defaultProps = {\n  placeholder: i18n.t('No file(s) selected yet')\n};\nFileInputFieldFF.propTypes = {\n  /** `input` props provided by Final Form `Field` */\n  input: inputPropType.isRequired,\n\n  /** `meta` props provided by Final Form `Field` */\n  meta: metaPropType.isRequired,\n  buttonLabel: PropTypes.string,\n  disabled: PropTypes.bool,\n  error: PropTypes.bool,\n  multifile: PropTypes.bool,\n  showValidStatus: PropTypes.bool,\n  valid: PropTypes.bool,\n  validationText: PropTypes.string,\n  value: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.instanceOf(File)), PropTypes.oneOf([''])])\n};"]},"metadata":{},"sourceType":"module"}