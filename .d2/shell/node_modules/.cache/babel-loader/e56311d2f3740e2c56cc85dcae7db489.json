{"ast":null,"code":"import { requestContentType, requestBodyForContentType, requestHeadersForContentType } from './queryToRequestOptions/requestContentType';\n\nconst getMethod = type => {\n  switch (type) {\n    case 'create':\n      return 'POST';\n\n    case 'read':\n      return 'GET';\n\n    case 'update':\n      return 'PATCH';\n\n    case 'replace':\n      return 'PUT';\n\n    case 'delete':\n      return 'DELETE';\n  }\n};\n\nexport const queryToRequestOptions = (type, query, signal) => {\n  const contentType = requestContentType(type, query);\n  return {\n    method: getMethod(type),\n    body: requestBodyForContentType(contentType, query),\n    headers: requestHeadersForContentType(contentType),\n    signal\n  };\n};","map":{"version":3,"sources":["/Users/rajabu/.config/yarn/global/node_modules/@dhis2/app-service-data/build/es/links/RestAPILink/queryToRequestOptions.js"],"names":["requestContentType","requestBodyForContentType","requestHeadersForContentType","getMethod","type","queryToRequestOptions","query","signal","contentType","method","body","headers"],"mappings":"AAAA,SAASA,kBAAT,EAA6BC,yBAA7B,EAAwDC,4BAAxD,QAA4F,4CAA5F;;AAEA,MAAMC,SAAS,GAAGC,IAAI,IAAI;AACxB,UAAQA,IAAR;AACE,SAAK,QAAL;AACE,aAAO,MAAP;;AAEF,SAAK,MAAL;AACE,aAAO,KAAP;;AAEF,SAAK,QAAL;AACE,aAAO,OAAP;;AAEF,SAAK,SAAL;AACE,aAAO,KAAP;;AAEF,SAAK,QAAL;AACE,aAAO,QAAP;AAdJ;AAgBD,CAjBD;;AAmBA,OAAO,MAAMC,qBAAqB,GAAG,CAACD,IAAD,EAAOE,KAAP,EAAcC,MAAd,KAAyB;AAC5D,QAAMC,WAAW,GAAGR,kBAAkB,CAACI,IAAD,EAAOE,KAAP,CAAtC;AACA,SAAO;AACLG,IAAAA,MAAM,EAAEN,SAAS,CAACC,IAAD,CADZ;AAELM,IAAAA,IAAI,EAAET,yBAAyB,CAACO,WAAD,EAAcF,KAAd,CAF1B;AAGLK,IAAAA,OAAO,EAAET,4BAA4B,CAACM,WAAD,CAHhC;AAILD,IAAAA;AAJK,GAAP;AAMD,CARM","sourcesContent":["import { requestContentType, requestBodyForContentType, requestHeadersForContentType } from './queryToRequestOptions/requestContentType';\n\nconst getMethod = type => {\n  switch (type) {\n    case 'create':\n      return 'POST';\n\n    case 'read':\n      return 'GET';\n\n    case 'update':\n      return 'PATCH';\n\n    case 'replace':\n      return 'PUT';\n\n    case 'delete':\n      return 'DELETE';\n  }\n};\n\nexport const queryToRequestOptions = (type, query, signal) => {\n  const contentType = requestContentType(type, query);\n  return {\n    method: getMethod(type),\n    body: requestBodyForContentType(contentType, query),\n    headers: requestHeadersForContentType(contentType),\n    signal\n  };\n};"]},"metadata":{},"sourceType":"module"}