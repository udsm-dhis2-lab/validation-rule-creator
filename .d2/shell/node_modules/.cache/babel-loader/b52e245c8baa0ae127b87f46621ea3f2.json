{"ast":null,"code":"import PropTypes from 'prop-types';\nimport React from 'react';\nimport { extractHeaderLabels } from './extractHeaderLabels.js';\nimport { Table } from './Table.js';\nimport { Provider } from './TableContext.js';\n/**\n * @module\n * @param {StackedTable.PropTypes}\n * @returns {React.Component}\n * @example import { StackedTable } from @dhis2/ui-core\n * @see Live demo: {@link /demo/?path=/story/stackedtable--default|Storybook}\n */\n\nexport const StackedTable = ({\n  children,\n  className,\n  dataTest,\n  headerLabels\n}) => {\n  const contextHeaderLabels = extractHeaderLabels(children);\n  const context = {\n    headerLabels: headerLabels || contextHeaderLabels\n  };\n  return /*#__PURE__*/React.createElement(Provider, {\n    value: context\n  }, /*#__PURE__*/React.createElement(Table, {\n    className: className,\n    dataTest: dataTest\n  }, children));\n};\n/**\n * @typedef {Object} PropTypes\n * @static\n * @prop {Node} [children]\n * @prop {string} [className]\n * @prop {string} [dataTest]\n * @prop {string[]} [headerLabels]\n * If a specific column should not have a header,\n * an empty string must be provided\n */\n\nStackedTable.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  dataTest: PropTypes.string,\n\n  /** Labels for columns. Use an empty string for a column without a header. */\n  headerLabels: PropTypes.arrayOf(PropTypes.string)\n};\nStackedTable.defaultProps = {\n  dataTest: 'dhis2-uicore-stackedtable'\n};","map":{"version":3,"sources":["/Users/rajabu/.config/yarn/global/node_modules/@dhis2/ui/node_modules/@dhis2/ui-core/build/es/StackedTable/StackedTable.js"],"names":["PropTypes","React","extractHeaderLabels","Table","Provider","StackedTable","children","className","dataTest","headerLabels","contextHeaderLabels","context","createElement","value","propTypes","node","string","arrayOf","defaultProps"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,KAAT,QAAsB,YAAtB;AACA,SAASC,QAAT,QAAyB,mBAAzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAMC,YAAY,GAAG,CAAC;AAC3BC,EAAAA,QAD2B;AAE3BC,EAAAA,SAF2B;AAG3BC,EAAAA,QAH2B;AAI3BC,EAAAA;AAJ2B,CAAD,KAKtB;AACJ,QAAMC,mBAAmB,GAAGR,mBAAmB,CAACI,QAAD,CAA/C;AACA,QAAMK,OAAO,GAAG;AACdF,IAAAA,YAAY,EAAEA,YAAY,IAAIC;AADhB,GAAhB;AAGA,SAAO,aAAaT,KAAK,CAACW,aAAN,CAAoBR,QAApB,EAA8B;AAChDS,IAAAA,KAAK,EAAEF;AADyC,GAA9B,EAEjB,aAAaV,KAAK,CAACW,aAAN,CAAoBT,KAApB,EAA2B;AACzCI,IAAAA,SAAS,EAAEA,SAD8B;AAEzCC,IAAAA,QAAQ,EAAEA;AAF+B,GAA3B,EAGbF,QAHa,CAFI,CAApB;AAMD,CAhBM;AAiBP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAD,YAAY,CAACS,SAAb,GAAyB;AACvBR,EAAAA,QAAQ,EAAEN,SAAS,CAACe,IADG;AAEvBR,EAAAA,SAAS,EAAEP,SAAS,CAACgB,MAFE;AAGvBR,EAAAA,QAAQ,EAAER,SAAS,CAACgB,MAHG;;AAKvB;AACAP,EAAAA,YAAY,EAAET,SAAS,CAACiB,OAAV,CAAkBjB,SAAS,CAACgB,MAA5B;AANS,CAAzB;AAQAX,YAAY,CAACa,YAAb,GAA4B;AAC1BV,EAAAA,QAAQ,EAAE;AADgB,CAA5B","sourcesContent":["import PropTypes from 'prop-types';\nimport React from 'react';\nimport { extractHeaderLabels } from './extractHeaderLabels.js';\nimport { Table } from './Table.js';\nimport { Provider } from './TableContext.js';\n/**\n * @module\n * @param {StackedTable.PropTypes}\n * @returns {React.Component}\n * @example import { StackedTable } from @dhis2/ui-core\n * @see Live demo: {@link /demo/?path=/story/stackedtable--default|Storybook}\n */\n\nexport const StackedTable = ({\n  children,\n  className,\n  dataTest,\n  headerLabels\n}) => {\n  const contextHeaderLabels = extractHeaderLabels(children);\n  const context = {\n    headerLabels: headerLabels || contextHeaderLabels\n  };\n  return /*#__PURE__*/React.createElement(Provider, {\n    value: context\n  }, /*#__PURE__*/React.createElement(Table, {\n    className: className,\n    dataTest: dataTest\n  }, children));\n};\n/**\n * @typedef {Object} PropTypes\n * @static\n * @prop {Node} [children]\n * @prop {string} [className]\n * @prop {string} [dataTest]\n * @prop {string[]} [headerLabels]\n * If a specific column should not have a header,\n * an empty string must be provided\n */\n\nStackedTable.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  dataTest: PropTypes.string,\n\n  /** Labels for columns. Use an empty string for a column without a header. */\n  headerLabels: PropTypes.arrayOf(PropTypes.string)\n};\nStackedTable.defaultProps = {\n  dataTest: 'dhis2-uicore-stackedtable'\n};"]},"metadata":{},"sourceType":"module"}