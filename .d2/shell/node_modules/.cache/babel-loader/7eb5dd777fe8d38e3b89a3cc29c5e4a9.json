{"ast":null,"code":"import _JSXStyle from \"styled-jsx/style\";\nimport { theme, spacers } from '@dhis2/ui-constants';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nconst Progress = ({\n  amount\n}) => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: _JSXStyle.dynamic([[\"686723300\", [amount]], [\"3243380718\", [theme.primary600]]])\n  }, /*#__PURE__*/React.createElement(_JSXStyle, {\n    id: \"686723300\",\n    dynamic: [amount]\n  }, [\"div.__jsx-style-dynamic-selector{width:\".concat(amount, \"%;}\")]), /*#__PURE__*/React.createElement(_JSXStyle, {\n    id: \"3243380718\",\n    dynamic: [theme.primary600]\n  }, [\"div.__jsx-style-dynamic-selector{background-color:\".concat(theme.primary600, \";-webkit-transition:width 0.3s linear;transition:width 0.3s linear;height:4px;}\")]));\n};\n\nProgress.propTypes = {\n  amount: PropTypes.number.isRequired\n};\n/**\n * @module\n * @param {LinearLoader.PropTypes} props\n * @returns {React.Component}\n *\n * @example import { LinearLoader } from '@dhis2/ui-core'\n *\n * @see Specification: {@link https://github.com/dhis2/design-system/blob/master/atoms/loading.md|Design system}\n * @see Live demo: {@link /demo/?path=/story/linearloader--determinate|Storybook}\n */\n\nconst LinearLoader = ({\n  amount,\n  width,\n  margin,\n  className,\n  dataTest\n}) => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    role: \"progressbar\",\n    \"data-test\": dataTest,\n    className: \"jsx-1195089001 \" + _JSXStyle.dynamic([[\"2979463364\", [width, margin]]]) + \" \" + (className || \"\")\n  }, /*#__PURE__*/React.createElement(Progress, {\n    amount: amount\n  }), /*#__PURE__*/React.createElement(_JSXStyle, {\n    id: \"1195089001\"\n  }, [\"div.jsx-1195089001{display:block;overflow:hidden;overflow-x:hidden;overflow-y:hidden;background-color:rgba(110,122,138,0.2);}\"]), /*#__PURE__*/React.createElement(_JSXStyle, {\n    id: \"2979463364\",\n    dynamic: [width, margin]\n  }, [\"div.__jsx-style-dynamic-selector{width:\".concat(width, \";margin:\").concat(margin, \";}\")]));\n};\n\nLinearLoader.defaultProps = {\n  margin: spacers.dp12,\n  width: '300px',\n  dataTest: 'dhis2-uicore-linearloader'\n};\n/**\n * @typedef {Object} PropTypes\n * @static\n *\n * @prop {string} [className]\n * @prop {number} [amount] - The progression in percent without the '%' sign\n * @prop {string} [margin=spacers.dp12] - The margin around the loader, can be a full shorthand\n * @prop {string} [width=300px] - The width of the entire indicator, e.g. '100%' or '300px'\n * @prop {string} [dataTest]\n */\n\nLinearLoader.propTypes = {\n  /** The progression in percent without the '%' sign */\n  amount: PropTypes.number.isRequired,\n  className: PropTypes.string,\n  dataTest: PropTypes.string,\n\n  /** The margin around the loader, can be a full shorthand */\n  margin: PropTypes.string,\n\n  /** The width of the entire indicator */\n  width: PropTypes.string\n};\nexport { LinearLoader };","map":{"version":3,"sources":["/Users/rajabu/.config/yarn/global/node_modules/@dhis2/ui/node_modules/@dhis2/ui-core/build/es/LinearLoader/LinearLoader.js"],"names":["_JSXStyle","theme","spacers","PropTypes","React","Progress","amount","createElement","className","dynamic","primary600","id","concat","propTypes","number","isRequired","LinearLoader","width","margin","dataTest","role","defaultProps","dp12","string"],"mappings":"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","sourcesContent":["import _JSXStyle from \"styled-jsx/style\";\nimport { theme, spacers } from '@dhis2/ui-constants';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nconst Progress = ({\n  amount\n}) => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: _JSXStyle.dynamic([[\"686723300\", [amount]], [\"3243380718\", [theme.primary600]]])\n  }, /*#__PURE__*/React.createElement(_JSXStyle, {\n    id: \"686723300\",\n    dynamic: [amount]\n  }, [\"div.__jsx-style-dynamic-selector{width:\".concat(amount, \"%;}\")]), /*#__PURE__*/React.createElement(_JSXStyle, {\n    id: \"3243380718\",\n    dynamic: [theme.primary600]\n  }, [\"div.__jsx-style-dynamic-selector{background-color:\".concat(theme.primary600, \";-webkit-transition:width 0.3s linear;transition:width 0.3s linear;height:4px;}\")]));\n};\n\nProgress.propTypes = {\n  amount: PropTypes.number.isRequired\n};\n/**\n * @module\n * @param {LinearLoader.PropTypes} props\n * @returns {React.Component}\n *\n * @example import { LinearLoader } from '@dhis2/ui-core'\n *\n * @see Specification: {@link https://github.com/dhis2/design-system/blob/master/atoms/loading.md|Design system}\n * @see Live demo: {@link /demo/?path=/story/linearloader--determinate|Storybook}\n */\n\nconst LinearLoader = ({\n  amount,\n  width,\n  margin,\n  className,\n  dataTest\n}) => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    role: \"progressbar\",\n    \"data-test\": dataTest,\n    className: \"jsx-1195089001 \" + _JSXStyle.dynamic([[\"2979463364\", [width, margin]]]) + \" \" + (className || \"\")\n  }, /*#__PURE__*/React.createElement(Progress, {\n    amount: amount\n  }), /*#__PURE__*/React.createElement(_JSXStyle, {\n    id: \"1195089001\"\n  }, [\"div.jsx-1195089001{display:block;overflow:hidden;overflow-x:hidden;overflow-y:hidden;background-color:rgba(110,122,138,0.2);}\"]), /*#__PURE__*/React.createElement(_JSXStyle, {\n    id: \"2979463364\",\n    dynamic: [width, margin]\n  }, [\"div.__jsx-style-dynamic-selector{width:\".concat(width, \";margin:\").concat(margin, \";}\")]));\n};\n\nLinearLoader.defaultProps = {\n  margin: spacers.dp12,\n  width: '300px',\n  dataTest: 'dhis2-uicore-linearloader'\n};\n/**\n * @typedef {Object} PropTypes\n * @static\n *\n * @prop {string} [className]\n * @prop {number} [amount] - The progression in percent without the '%' sign\n * @prop {string} [margin=spacers.dp12] - The margin around the loader, can be a full shorthand\n * @prop {string} [width=300px] - The width of the entire indicator, e.g. '100%' or '300px'\n * @prop {string} [dataTest]\n */\n\nLinearLoader.propTypes = {\n  /** The progression in percent without the '%' sign */\n  amount: PropTypes.number.isRequired,\n  className: PropTypes.string,\n  dataTest: PropTypes.string,\n\n  /** The margin around the loader, can be a full shorthand */\n  margin: PropTypes.string,\n\n  /** The width of the entire indicator */\n  width: PropTypes.string\n};\nexport { LinearLoader };"]},"metadata":{},"sourceType":"module"}