{"ast":null,"code":"/**\n * Returns a function, that, as long as it continues to be invoked, will not be triggered. The\n * function will be called after it stops being called for N milliseconds. If `immediate` is\n * passed, trigger the function on the leading edge, instead of the trailing.\n */\nexport const debounce = (func, wait, immediate) => {\n  let timeout;\n  return (...args) => {\n    const context = this;\n\n    const later = () => {\n      timeout = null;\n\n      if (!immediate) {\n        func.apply(context, args);\n      }\n    };\n\n    const callNow = immediate && !timeout;\n    clearTimeout(timeout);\n    timeout = setTimeout(later, wait);\n\n    if (callNow) {\n      func.apply(context, args);\n    }\n  };\n};","map":{"version":3,"sources":["/Users/rajabu/.config/yarn/global/node_modules/@dhis2/ui/node_modules/@dhis2/ui-core/build/es/Select/debounce/index.js"],"names":["debounce","func","wait","immediate","timeout","args","context","later","apply","callNow","clearTimeout","setTimeout"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMA,QAAQ,GAAG,CAACC,IAAD,EAAOC,IAAP,EAAaC,SAAb,KAA2B;AACjD,MAAIC,OAAJ;AACA,SAAO,CAAC,GAAGC,IAAJ,KAAa;AAClB,UAAMC,OAAO,GAAG,IAAhB;;AAEA,UAAMC,KAAK,GAAG,MAAM;AAClBH,MAAAA,OAAO,GAAG,IAAV;;AAEA,UAAI,CAACD,SAAL,EAAgB;AACdF,QAAAA,IAAI,CAACO,KAAL,CAAWF,OAAX,EAAoBD,IAApB;AACD;AACF,KAND;;AAQA,UAAMI,OAAO,GAAGN,SAAS,IAAI,CAACC,OAA9B;AACAM,IAAAA,YAAY,CAACN,OAAD,CAAZ;AACAA,IAAAA,OAAO,GAAGO,UAAU,CAACJ,KAAD,EAAQL,IAAR,CAApB;;AAEA,QAAIO,OAAJ,EAAa;AACXR,MAAAA,IAAI,CAACO,KAAL,CAAWF,OAAX,EAAoBD,IAApB;AACD;AACF,GAlBD;AAmBD,CArBM","sourcesContent":["/**\n * Returns a function, that, as long as it continues to be invoked, will not be triggered. The\n * function will be called after it stops being called for N milliseconds. If `immediate` is\n * passed, trigger the function on the leading edge, instead of the trailing.\n */\nexport const debounce = (func, wait, immediate) => {\n  let timeout;\n  return (...args) => {\n    const context = this;\n\n    const later = () => {\n      timeout = null;\n\n      if (!immediate) {\n        func.apply(context, args);\n      }\n    };\n\n    const callNow = immediate && !timeout;\n    clearTimeout(timeout);\n    timeout = setTimeout(later, wait);\n\n    if (callNow) {\n      func.apply(context, args);\n    }\n  };\n};"]},"metadata":{},"sourceType":"module"}