{"ast":null,"code":"import _JSXStyle from \"styled-jsx/style\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { Leaves } from './Leaves.js';\nimport { Spacer } from './Spacer.js';\nimport { Toggle } from './Toggle.js';\n/**\n * @module\n *\n * @param {Node.PropTypes} props\n * @returns {React.Component}\n *\n * @example import { Node } from '@dhis2/ui-core'\n *\n * @see Live demo: {@link /demo/?path=/story/node--multiple-roots|Storybook}\n */\n\nexport const Node = ({\n  open,\n  className,\n  component: label,\n  children,\n  icon,\n  onOpen,\n  onClose,\n  dataTest\n}) => {\n  const hasLeaves = !!React.Children.toArray(children).filter(i => i).length;\n  const showArrow = !icon && hasLeaves;\n  const showSpacer = !icon && !hasLeaves;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    \"data-test\": dataTest,\n    className: \"jsx-1433072554\" + \" \" + (cx('node', className) || \"\")\n  }, icon && /*#__PURE__*/React.createElement(\"div\", {\n    \"data-test\": \"\".concat(dataTest, \"-icon\"),\n    className: \"jsx-1433072554\"\n  }, icon), showArrow && /*#__PURE__*/React.createElement(Toggle, {\n    open: open,\n    onOpen: onOpen,\n    onClose: onClose,\n    dataTest: \"\".concat(dataTest, \"-toggle\")\n  }), showSpacer && /*#__PURE__*/React.createElement(Spacer, null), /*#__PURE__*/React.createElement(\"div\", {\n    \"data-test\": \"\".concat(dataTest, \"-content\"),\n    className: \"jsx-1433072554\"\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    \"data-test\": \"\".concat(dataTest, \"-label\"),\n    className: \"jsx-1433072554\"\n  }, label), /*#__PURE__*/React.createElement(Leaves, {\n    open: open,\n    dataTest: \"\".concat(dataTest, \"-leaves\")\n  }, children)), /*#__PURE__*/React.createElement(_JSXStyle, {\n    id: \"1433072554\"\n  }, [\".node.jsx-1433072554{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;}\"]));\n};\nNode.defaultProps = {\n  dataTest: 'dhis2-uicore-node'\n};\n/**\n * @typedef {Object} PropTypes\n * @static\n * @prop {Element} [component]\n * @prop {className} [string]\n * @prop {Node} [children]\n * @prop {Node} [icon]\n * @prop {boolean} [open]\n * @prop {function} [onOpen]\n * @prop {funtion} [onClose]\n * @prop {string} [dataTest]\n */\n\nNode.propTypes = {\n  /** Content below this level of the hierarchy; children are revealed when this leaf is 'open' */\n  children: PropTypes.node,\n  className: PropTypes.string,\n\n  /** Content/label for this leaf, for example a checkbox */\n  component: PropTypes.element,\n  dataTest: PropTypes.string,\n\n  /** A custom icon to use instead of a toggle arrow */\n  icon: PropTypes.node,\n  open: PropTypes.bool,\n  onClose: PropTypes.func,\n  onOpen: PropTypes.func\n};","map":{"version":3,"sources":["/Users/rajabu/.config/yarn/global/node_modules/@dhis2/ui/node_modules/@dhis2/ui-core/build/es/Node/Node.js"],"names":["_JSXStyle","cx","PropTypes","React","Leaves","Spacer","Toggle","Node","open","className","component","label","children","icon","onOpen","onClose","dataTest","hasLeaves","Children","toArray","filter","i","length","showArrow","showSpacer","createElement","concat","id","defaultProps","propTypes","node","string","element","bool","func"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,kBAAtB;AACA,OAAOC,EAAP,MAAe,YAAf;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,aAAvB;AACA,SAASC,MAAT,QAAuB,aAAvB;AACA,SAASC,MAAT,QAAuB,aAAvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAMC,IAAI,GAAG,CAAC;AACnBC,EAAAA,IADmB;AAEnBC,EAAAA,SAFmB;AAGnBC,EAAAA,SAAS,EAAEC,KAHQ;AAInBC,EAAAA,QAJmB;AAKnBC,EAAAA,IALmB;AAMnBC,EAAAA,MANmB;AAOnBC,EAAAA,OAPmB;AAQnBC,EAAAA;AARmB,CAAD,KASd;AACJ,QAAMC,SAAS,GAAG,CAAC,CAACd,KAAK,CAACe,QAAN,CAAeC,OAAf,CAAuBP,QAAvB,EAAiCQ,MAAjC,CAAwCC,CAAC,IAAIA,CAA7C,EAAgDC,MAApE;AACA,QAAMC,SAAS,GAAG,CAACV,IAAD,IAASI,SAA3B;AACA,QAAMO,UAAU,GAAG,CAACX,IAAD,IAAS,CAACI,SAA7B;AACA,SAAO,aAAad,KAAK,CAACsB,aAAN,CAAoB,KAApB,EAA2B;AAC7C,iBAAaT,QADgC;AAE7CP,IAAAA,SAAS,EAAE,mBAAmB,GAAnB,IAA0BR,EAAE,CAAC,MAAD,EAASQ,SAAT,CAAF,IAAyB,EAAnD;AAFkC,GAA3B,EAGjBI,IAAI,IAAI,aAAaV,KAAK,CAACsB,aAAN,CAAoB,KAApB,EAA2B;AACjD,iBAAa,GAAGC,MAAH,CAAUV,QAAV,EAAoB,OAApB,CADoC;AAEjDP,IAAAA,SAAS,EAAE;AAFsC,GAA3B,EAGrBI,IAHqB,CAHJ,EAMVU,SAAS,IAAI,aAAapB,KAAK,CAACsB,aAAN,CAAoBnB,MAApB,EAA4B;AAC9DE,IAAAA,IAAI,EAAEA,IADwD;AAE9DM,IAAAA,MAAM,EAAEA,MAFsD;AAG9DC,IAAAA,OAAO,EAAEA,OAHqD;AAI9DC,IAAAA,QAAQ,EAAE,GAAGU,MAAH,CAAUV,QAAV,EAAoB,SAApB;AAJoD,GAA5B,CANhB,EAWhBQ,UAAU,IAAI,aAAarB,KAAK,CAACsB,aAAN,CAAoBpB,MAApB,EAA4B,IAA5B,CAXX,EAW8C,aAAaF,KAAK,CAACsB,aAAN,CAAoB,KAApB,EAA2B;AACxG,iBAAa,GAAGC,MAAH,CAAUV,QAAV,EAAoB,UAApB,CAD2F;AAExGP,IAAAA,SAAS,EAAE;AAF6F,GAA3B,EAG5E,aAAaN,KAAK,CAACsB,aAAN,CAAoB,KAApB,EAA2B;AACzC,iBAAa,GAAGC,MAAH,CAAUV,QAAV,EAAoB,QAApB,CAD4B;AAEzCP,IAAAA,SAAS,EAAE;AAF8B,GAA3B,EAGbE,KAHa,CAH+D,EAMpE,aAAaR,KAAK,CAACsB,aAAN,CAAoBrB,MAApB,EAA4B;AAClDI,IAAAA,IAAI,EAAEA,IAD4C;AAElDQ,IAAAA,QAAQ,EAAE,GAAGU,MAAH,CAAUV,QAAV,EAAoB,SAApB;AAFwC,GAA5B,EAGrBJ,QAHqB,CANuD,CAX3D,EAoBL,aAAaT,KAAK,CAACsB,aAAN,CAAoBzB,SAApB,EAA+B;AACzD2B,IAAAA,EAAE,EAAE;AADqD,GAA/B,EAEzB,CAAC,kGAAD,CAFyB,CApBR,CAApB;AAuBD,CApCM;AAqCPpB,IAAI,CAACqB,YAAL,GAAoB;AAClBZ,EAAAA,QAAQ,EAAE;AADQ,CAApB;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAT,IAAI,CAACsB,SAAL,GAAiB;AACf;AACAjB,EAAAA,QAAQ,EAAEV,SAAS,CAAC4B,IAFL;AAGfrB,EAAAA,SAAS,EAAEP,SAAS,CAAC6B,MAHN;;AAKf;AACArB,EAAAA,SAAS,EAAER,SAAS,CAAC8B,OANN;AAOfhB,EAAAA,QAAQ,EAAEd,SAAS,CAAC6B,MAPL;;AASf;AACAlB,EAAAA,IAAI,EAAEX,SAAS,CAAC4B,IAVD;AAWftB,EAAAA,IAAI,EAAEN,SAAS,CAAC+B,IAXD;AAYflB,EAAAA,OAAO,EAAEb,SAAS,CAACgC,IAZJ;AAafpB,EAAAA,MAAM,EAAEZ,SAAS,CAACgC;AAbH,CAAjB","sourcesContent":["import _JSXStyle from \"styled-jsx/style\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { Leaves } from './Leaves.js';\nimport { Spacer } from './Spacer.js';\nimport { Toggle } from './Toggle.js';\n/**\n * @module\n *\n * @param {Node.PropTypes} props\n * @returns {React.Component}\n *\n * @example import { Node } from '@dhis2/ui-core'\n *\n * @see Live demo: {@link /demo/?path=/story/node--multiple-roots|Storybook}\n */\n\nexport const Node = ({\n  open,\n  className,\n  component: label,\n  children,\n  icon,\n  onOpen,\n  onClose,\n  dataTest\n}) => {\n  const hasLeaves = !!React.Children.toArray(children).filter(i => i).length;\n  const showArrow = !icon && hasLeaves;\n  const showSpacer = !icon && !hasLeaves;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    \"data-test\": dataTest,\n    className: \"jsx-1433072554\" + \" \" + (cx('node', className) || \"\")\n  }, icon && /*#__PURE__*/React.createElement(\"div\", {\n    \"data-test\": \"\".concat(dataTest, \"-icon\"),\n    className: \"jsx-1433072554\"\n  }, icon), showArrow && /*#__PURE__*/React.createElement(Toggle, {\n    open: open,\n    onOpen: onOpen,\n    onClose: onClose,\n    dataTest: \"\".concat(dataTest, \"-toggle\")\n  }), showSpacer && /*#__PURE__*/React.createElement(Spacer, null), /*#__PURE__*/React.createElement(\"div\", {\n    \"data-test\": \"\".concat(dataTest, \"-content\"),\n    className: \"jsx-1433072554\"\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    \"data-test\": \"\".concat(dataTest, \"-label\"),\n    className: \"jsx-1433072554\"\n  }, label), /*#__PURE__*/React.createElement(Leaves, {\n    open: open,\n    dataTest: \"\".concat(dataTest, \"-leaves\")\n  }, children)), /*#__PURE__*/React.createElement(_JSXStyle, {\n    id: \"1433072554\"\n  }, [\".node.jsx-1433072554{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;}\"]));\n};\nNode.defaultProps = {\n  dataTest: 'dhis2-uicore-node'\n};\n/**\n * @typedef {Object} PropTypes\n * @static\n * @prop {Element} [component]\n * @prop {className} [string]\n * @prop {Node} [children]\n * @prop {Node} [icon]\n * @prop {boolean} [open]\n * @prop {function} [onOpen]\n * @prop {funtion} [onClose]\n * @prop {string} [dataTest]\n */\n\nNode.propTypes = {\n  /** Content below this level of the hierarchy; children are revealed when this leaf is 'open' */\n  children: PropTypes.node,\n  className: PropTypes.string,\n\n  /** Content/label for this leaf, for example a checkbox */\n  component: PropTypes.element,\n  dataTest: PropTypes.string,\n\n  /** A custom icon to use instead of a toggle arrow */\n  icon: PropTypes.node,\n  open: PropTypes.bool,\n  onClose: PropTypes.func,\n  onOpen: PropTypes.func\n};"]},"metadata":{},"sourceType":"module"}