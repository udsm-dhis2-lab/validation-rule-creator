{"ast":null,"code":"import _JSXStyle from \"styled-jsx/style\";\nimport propTypes from '@dhis2/prop-types';\nimport { colors } from '@dhis2/ui-constants';\nimport cx from 'classnames';\nimport React from 'react';\nimport { InputClearButton } from '../Select/InputClearButton.js';\nimport { InputPlaceholder } from '../Select/InputPlaceholder.js';\nimport { InputPrefix } from '../Select/InputPrefix.js';\nimport { SelectionList } from './SelectionList.js';\n\nconst Input = ({\n  selected,\n  onChange,\n  clearable,\n  clearText,\n  placeholder,\n  dataTest,\n  prefix,\n  options,\n  className,\n  disabled,\n  inputMaxHeight\n}) => {\n  const hasSelection = selected.length > 0;\n\n  const onClear = (_, e) => {\n    const data = {\n      selected: []\n    };\n    e.stopPropagation();\n    onChange(data, e);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: _JSXStyle.dynamic([[\"1360178250\", [colors.grey900]], [\"1331770409\", [inputMaxHeight]]]) + \" \" + (cx('root', className) || \"\")\n  }, /*#__PURE__*/React.createElement(InputPrefix, {\n    prefix: prefix,\n    dataTest: \"\".concat(dataTest, \"-prefix\")\n  }), !hasSelection && !prefix && /*#__PURE__*/React.createElement(InputPlaceholder, {\n    placeholder: placeholder,\n    dataTest: \"\".concat(dataTest, \"-placeholder\")\n  }), hasSelection && /*#__PURE__*/React.createElement(\"div\", {\n    className: _JSXStyle.dynamic([[\"1360178250\", [colors.grey900]], [\"1331770409\", [inputMaxHeight]]]) + \" \" + \"root-input\"\n  }, /*#__PURE__*/React.createElement(SelectionList, {\n    selected: selected,\n    onChange: onChange,\n    options: options,\n    disabled: disabled\n  })), hasSelection && clearable && !disabled && /*#__PURE__*/React.createElement(\"div\", {\n    className: _JSXStyle.dynamic([[\"1360178250\", [colors.grey900]], [\"1331770409\", [inputMaxHeight]]]) + \" \" + \"root-right\"\n  }, /*#__PURE__*/React.createElement(InputClearButton, {\n    onClear: onClear,\n    clearText: clearText,\n    dataTest: \"\".concat(dataTest, \"-clear\")\n  })), /*#__PURE__*/React.createElement(_JSXStyle, {\n    id: \"1360178250\",\n    dynamic: [colors.grey900]\n  }, [\".root.__jsx-style-dynamic-selector{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;color:\".concat(colors.grey900, \";font-size:14px;line-height:16px;}\"), \".root-input.__jsx-style-dynamic-selector{overflow-y:auto;-webkit-flex:1;-ms-flex:1;flex:1;}\", \".root-right.__jsx-style-dynamic-selector{margin-left:auto;margin-right:10px;}\"]), /*#__PURE__*/React.createElement(_JSXStyle, {\n    id: \"1331770409\",\n    dynamic: [inputMaxHeight]\n  }, [\".root-input.__jsx-style-dynamic-selector{max-height:\".concat(inputMaxHeight, \";}\")]));\n};\n\nInput.defaultProps = {\n  inputMaxHeight: '100px'\n};\nInput.propTypes = {\n  dataTest: propTypes.string.isRequired,\n  className: propTypes.string,\n  clearText: propTypes.requiredIf(props => props.clearable, propTypes.string),\n  clearable: propTypes.bool,\n  disabled: propTypes.bool,\n  inputMaxHeight: propTypes.string,\n  options: propTypes.node,\n  placeholder: propTypes.string,\n  prefix: propTypes.string,\n  selected: propTypes.arrayOf(propTypes.string),\n  onChange: propTypes.func\n};\nexport { Input };","map":{"version":3,"sources":["/Users/rajabu/.config/yarn/global/node_modules/@dhis2/ui/node_modules/@dhis2/ui-core/build/es/MultiSelect/Input.js"],"names":["_JSXStyle","propTypes","colors","cx","React","InputClearButton","InputPlaceholder","InputPrefix","SelectionList","Input","selected","onChange","clearable","clearText","placeholder","dataTest","prefix","options","className","disabled","inputMaxHeight","hasSelection","length","onClear","_","e","data","stopPropagation","createElement","dynamic","grey900","concat","id","defaultProps","string","isRequired","requiredIf","props","bool","node","arrayOf","func"],"mappings":"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","sourcesContent":["import _JSXStyle from \"styled-jsx/style\";\nimport propTypes from '@dhis2/prop-types';\nimport { colors } from '@dhis2/ui-constants';\nimport cx from 'classnames';\nimport React from 'react';\nimport { InputClearButton } from '../Select/InputClearButton.js';\nimport { InputPlaceholder } from '../Select/InputPlaceholder.js';\nimport { InputPrefix } from '../Select/InputPrefix.js';\nimport { SelectionList } from './SelectionList.js';\n\nconst Input = ({\n  selected,\n  onChange,\n  clearable,\n  clearText,\n  placeholder,\n  dataTest,\n  prefix,\n  options,\n  className,\n  disabled,\n  inputMaxHeight\n}) => {\n  const hasSelection = selected.length > 0;\n\n  const onClear = (_, e) => {\n    const data = {\n      selected: []\n    };\n    e.stopPropagation();\n    onChange(data, e);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: _JSXStyle.dynamic([[\"1360178250\", [colors.grey900]], [\"1331770409\", [inputMaxHeight]]]) + \" \" + (cx('root', className) || \"\")\n  }, /*#__PURE__*/React.createElement(InputPrefix, {\n    prefix: prefix,\n    dataTest: \"\".concat(dataTest, \"-prefix\")\n  }), !hasSelection && !prefix && /*#__PURE__*/React.createElement(InputPlaceholder, {\n    placeholder: placeholder,\n    dataTest: \"\".concat(dataTest, \"-placeholder\")\n  }), hasSelection && /*#__PURE__*/React.createElement(\"div\", {\n    className: _JSXStyle.dynamic([[\"1360178250\", [colors.grey900]], [\"1331770409\", [inputMaxHeight]]]) + \" \" + \"root-input\"\n  }, /*#__PURE__*/React.createElement(SelectionList, {\n    selected: selected,\n    onChange: onChange,\n    options: options,\n    disabled: disabled\n  })), hasSelection && clearable && !disabled && /*#__PURE__*/React.createElement(\"div\", {\n    className: _JSXStyle.dynamic([[\"1360178250\", [colors.grey900]], [\"1331770409\", [inputMaxHeight]]]) + \" \" + \"root-right\"\n  }, /*#__PURE__*/React.createElement(InputClearButton, {\n    onClear: onClear,\n    clearText: clearText,\n    dataTest: \"\".concat(dataTest, \"-clear\")\n  })), /*#__PURE__*/React.createElement(_JSXStyle, {\n    id: \"1360178250\",\n    dynamic: [colors.grey900]\n  }, [\".root.__jsx-style-dynamic-selector{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;color:\".concat(colors.grey900, \";font-size:14px;line-height:16px;}\"), \".root-input.__jsx-style-dynamic-selector{overflow-y:auto;-webkit-flex:1;-ms-flex:1;flex:1;}\", \".root-right.__jsx-style-dynamic-selector{margin-left:auto;margin-right:10px;}\"]), /*#__PURE__*/React.createElement(_JSXStyle, {\n    id: \"1331770409\",\n    dynamic: [inputMaxHeight]\n  }, [\".root-input.__jsx-style-dynamic-selector{max-height:\".concat(inputMaxHeight, \";}\")]));\n};\n\nInput.defaultProps = {\n  inputMaxHeight: '100px'\n};\nInput.propTypes = {\n  dataTest: propTypes.string.isRequired,\n  className: propTypes.string,\n  clearText: propTypes.requiredIf(props => props.clearable, propTypes.string),\n  clearable: propTypes.bool,\n  disabled: propTypes.bool,\n  inputMaxHeight: propTypes.string,\n  options: propTypes.node,\n  placeholder: propTypes.string,\n  prefix: propTypes.string,\n  selected: propTypes.arrayOf(propTypes.string),\n  onChange: propTypes.func\n};\nexport { Input };"]},"metadata":{},"sourceType":"module"}