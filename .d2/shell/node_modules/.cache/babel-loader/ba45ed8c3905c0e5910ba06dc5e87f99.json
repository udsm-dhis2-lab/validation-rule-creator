{"ast":null,"code":"import _JSXStyle from \"styled-jsx/style\";\nimport { colors, spacers } from '@dhis2/ui-constants';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n''; // TODO: https://github.com/jsdoc/jsdoc/issues/1718\n\n/**\n * @module\n * @param {Divider.PropTypes} props\n * @returns {React.Component}\n * @example import { Divider } from @dhis2/ui-core\n */\n\nconst Divider = ({\n  className,\n  dataTest,\n  dense,\n  margin\n}) => /*#__PURE__*/React.createElement(\"div\", {\n  \"data-test\": dataTest,\n  className: _JSXStyle.dynamic([[\"3889267139\", [colors.grey300]], [\"3486645161\", [dense ? \"\".concat(spacers.dp4, \" 0\") : margin]]]) + \" \" + (className || \"\")\n}, /*#__PURE__*/React.createElement(_JSXStyle, {\n  id: \"3889267139\",\n  dynamic: [colors.grey300]\n}, [\"div.__jsx-style-dynamic-selector{display:inline-block;width:100%;height:1px;background-color:\".concat(colors.grey300, \";}\")]), /*#__PURE__*/React.createElement(_JSXStyle, {\n  id: \"3486645161\",\n  dynamic: [dense ? \"\".concat(spacers.dp4, \" 0\") : margin]\n}, [\"div.__jsx-style-dynamic-selector{margin:\".concat(dense ? \"\".concat(spacers.dp4, \" 0\") : margin, \";}\")]));\n\nDivider.defaultProps = {\n  dataTest: 'dhis2-uicore-divider',\n  margin: \"\".concat(spacers.dp8, \" 0\")\n};\n/**\n * @typedef {Object} PropTypes\n * @static\n * @prop {string} [className]\n * @prop {string} [dataTest]\n * @prop {bool} [dense]\n * @prop {string} [margin=\"${spacers.dp8} 0\"] - DEPRECATED: A CSS shorthand declaration for margin. If margin and dense are used at the same time, dense has precedence.\n */\n\nDivider.propTypes = {\n  className: PropTypes.string,\n  dataTest: PropTypes.string,\n  dense: PropTypes.bool,\n  margin: PropTypes.string\n};\nexport { Divider };","map":{"version":3,"sources":["/Users/rajabu/.config/yarn/global/node_modules/@dhis2/ui/node_modules/@dhis2/ui-core/build/es/Divider/Divider.js"],"names":["_JSXStyle","colors","spacers","PropTypes","React","Divider","className","dataTest","dense","margin","createElement","dynamic","grey300","concat","dp4","id","defaultProps","dp8","propTypes","string","bool"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,kBAAtB;AACA,SAASC,MAAT,EAAiBC,OAAjB,QAAgC,qBAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,G,CAAI;;AAEJ;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,OAAO,GAAG,CAAC;AACfC,EAAAA,SADe;AAEfC,EAAAA,QAFe;AAGfC,EAAAA,KAHe;AAIfC,EAAAA;AAJe,CAAD,KAKV,aAAaL,KAAK,CAACM,aAAN,CAAoB,KAApB,EAA2B;AAC5C,eAAaH,QAD+B;AAE5CD,EAAAA,SAAS,EAAEN,SAAS,CAACW,OAAV,CAAkB,CAAC,CAAC,YAAD,EAAe,CAACV,MAAM,CAACW,OAAR,CAAf,CAAD,EAAmC,CAAC,YAAD,EAAe,CAACJ,KAAK,GAAG,GAAGK,MAAH,CAAUX,OAAO,CAACY,GAAlB,EAAuB,IAAvB,CAAH,GAAkCL,MAAxC,CAAf,CAAnC,CAAlB,IAAyH,GAAzH,IAAgIH,SAAS,IAAI,EAA7I;AAFiC,CAA3B,EAGhB,aAAaF,KAAK,CAACM,aAAN,CAAoBV,SAApB,EAA+B;AAC7Ce,EAAAA,EAAE,EAAE,YADyC;AAE7CJ,EAAAA,OAAO,EAAE,CAACV,MAAM,CAACW,OAAR;AAFoC,CAA/B,EAGb,CAAC,gGAAgGC,MAAhG,CAAuGZ,MAAM,CAACW,OAA9G,EAAuH,IAAvH,CAAD,CAHa,CAHG,EAMiH,aAAaR,KAAK,CAACM,aAAN,CAAoBV,SAApB,EAA+B;AAC9Ke,EAAAA,EAAE,EAAE,YAD0K;AAE9KJ,EAAAA,OAAO,EAAE,CAACH,KAAK,GAAG,GAAGK,MAAH,CAAUX,OAAO,CAACY,GAAlB,EAAuB,IAAvB,CAAH,GAAkCL,MAAxC;AAFqK,CAA/B,EAG9I,CAAC,2CAA2CI,MAA3C,CAAkDL,KAAK,GAAG,GAAGK,MAAH,CAAUX,OAAO,CAACY,GAAlB,EAAuB,IAAvB,CAAH,GAAkCL,MAAzF,EAAiG,IAAjG,CAAD,CAH8I,CAN9H,CALnB;;AAgBAJ,OAAO,CAACW,YAAR,GAAuB;AACrBT,EAAAA,QAAQ,EAAE,sBADW;AAErBE,EAAAA,MAAM,EAAE,GAAGI,MAAH,CAAUX,OAAO,CAACe,GAAlB,EAAuB,IAAvB;AAFa,CAAvB;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAZ,OAAO,CAACa,SAAR,GAAoB;AAClBZ,EAAAA,SAAS,EAAEH,SAAS,CAACgB,MADH;AAElBZ,EAAAA,QAAQ,EAAEJ,SAAS,CAACgB,MAFF;AAGlBX,EAAAA,KAAK,EAAEL,SAAS,CAACiB,IAHC;AAIlBX,EAAAA,MAAM,EAAEN,SAAS,CAACgB;AAJA,CAApB;AAMA,SAASd,OAAT","sourcesContent":["import _JSXStyle from \"styled-jsx/style\";\nimport { colors, spacers } from '@dhis2/ui-constants';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n''; // TODO: https://github.com/jsdoc/jsdoc/issues/1718\n\n/**\n * @module\n * @param {Divider.PropTypes} props\n * @returns {React.Component}\n * @example import { Divider } from @dhis2/ui-core\n */\n\nconst Divider = ({\n  className,\n  dataTest,\n  dense,\n  margin\n}) => /*#__PURE__*/React.createElement(\"div\", {\n  \"data-test\": dataTest,\n  className: _JSXStyle.dynamic([[\"3889267139\", [colors.grey300]], [\"3486645161\", [dense ? \"\".concat(spacers.dp4, \" 0\") : margin]]]) + \" \" + (className || \"\")\n}, /*#__PURE__*/React.createElement(_JSXStyle, {\n  id: \"3889267139\",\n  dynamic: [colors.grey300]\n}, [\"div.__jsx-style-dynamic-selector{display:inline-block;width:100%;height:1px;background-color:\".concat(colors.grey300, \";}\")]), /*#__PURE__*/React.createElement(_JSXStyle, {\n  id: \"3486645161\",\n  dynamic: [dense ? \"\".concat(spacers.dp4, \" 0\") : margin]\n}, [\"div.__jsx-style-dynamic-selector{margin:\".concat(dense ? \"\".concat(spacers.dp4, \" 0\") : margin, \";}\")]));\n\nDivider.defaultProps = {\n  dataTest: 'dhis2-uicore-divider',\n  margin: \"\".concat(spacers.dp8, \" 0\")\n};\n/**\n * @typedef {Object} PropTypes\n * @static\n * @prop {string} [className]\n * @prop {string} [dataTest]\n * @prop {bool} [dense]\n * @prop {string} [margin=\"${spacers.dp8} 0\"] - DEPRECATED: A CSS shorthand declaration for margin. If margin and dense are used at the same time, dense has precedence.\n */\n\nDivider.propTypes = {\n  className: PropTypes.string,\n  dataTest: PropTypes.string,\n  dense: PropTypes.bool,\n  margin: PropTypes.string\n};\nexport { Divider };"]},"metadata":{},"sourceType":"module"}