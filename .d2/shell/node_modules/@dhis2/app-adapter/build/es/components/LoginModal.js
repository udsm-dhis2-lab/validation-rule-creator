import { Modal, ModalTitle, ModalContent, ModalActions, Button, InputField } from '@dhis2/ui';
import React, { useState } from 'react';
import i18n from '../locales';
import { post } from '../utils/api';
const staticUrl = process.env.REACT_APP_DHIS2_BASE_URL;
export const LoginModal = () => {
  const [server, setServer] = useState(staticUrl || window.localStorage.DHIS2_BASE_URL || '');
  const [username, setUsername] = useState('');
  const [password, setPassword] = useState('');
  const [isDirty, setIsDirty] = useState(false);

  const isValid = val => val && val.length >= 2;

  const onSubmit = async e => {
    e.preventDefault();
    setIsDirty(true);

    if (isValid(server) && isValid(username) && isValid(password)) {
      window.localStorage.DHIS2_BASE_URL = server;

      try {
        await post("".concat(server, "/dhis-web-commons-security/login.action"), "j_username=".concat(encodeURIComponent(username), "&j_password=").concat(encodeURIComponent(password)));
      } catch (e) {
        console.log('TODO: This will always error and cancel the request until we get a real login endpoint!');
      } // TODO: Hacky solution... this shouldn't require a reload


      window.location.reload();
    }
  };

  return /*#__PURE__*/React.createElement(Modal, {
    open: true,
    small: true,
    dataTest: "dhis2-adapter-loginmodal"
  }, /*#__PURE__*/React.createElement("form", {
    onSubmit: onSubmit
  }, /*#__PURE__*/React.createElement(ModalTitle, null, i18n.t('Please sign in')), /*#__PURE__*/React.createElement(ModalContent, null, !staticUrl && /*#__PURE__*/React.createElement(InputField, {
    dataTest: "dhis2-adapter-loginserver",
    error: isDirty && !isValid(server),
    label: i18n.t('Server'),
    name: "server",
    type: "text",
    value: server,
    onChange: input => setServer(input.value)
  }), /*#__PURE__*/React.createElement(InputField, {
    dataTest: "dhis2-adapter-loginname",
    error: isDirty && !isValid(username),
    label: i18n.t('Username'),
    name: "j_username",
    type: "text",
    value: username,
    onChange: input => setUsername(input.value)
  }), /*#__PURE__*/React.createElement(InputField, {
    dataTest: "dhis2-adapter-loginpassword",
    error: isDirty && !isValid(password),
    label: i18n.t('Password'),
    name: "j_password",
    type: "password",
    value: password,
    onChange: input => setPassword(input.value)
  })), /*#__PURE__*/React.createElement(ModalActions, null, /*#__PURE__*/React.createElement(Button, {
    primary: true,
    dataTest: "dhis2-adapter-loginsubmit",
    type: "submit"
  }, i18n.t('Sign in')))));
};