function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

import { useAlerts } from '@dhis2/app-runtime';
import { AlertBar, AlertStack } from '@dhis2/ui';
import React from 'react';
export const Alerts = () => {
  const alerts = useAlerts();
  return /*#__PURE__*/React.createElement(AlertStack, null, alerts.map(({
    message,
    remove,
    id,
    options: {
      onHidden,
      ...props
    }
  }) => /*#__PURE__*/React.createElement(AlertBar, _extends({}, props, {
    key: id,
    onHidden: () => {
      onHidden && onHidden();
      remove();
    }
  }), message)));
};